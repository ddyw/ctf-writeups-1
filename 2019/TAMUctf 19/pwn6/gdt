Gadgets information
============================================================
0x00000000004c2ff0 : adc ah, ch ; idiv bh ; ret 0
0x0000000000426357 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf
0x00000000004c47a0 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000415390 : adc al, 0 ; ret
0x000000000045558b : adc al, 0x24 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004795bf : adc al, 0x38 ; call r9
0x000000000041ce1f : adc al, 0x38 ; ret 0x1c74
0x00000000004cbe24 : adc al, 0x39 ; add dword ptr [rax], eax ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x0000000000412cf1 : adc al, 0x39 ; ret 0x2a7f
0x0000000000430f15 : adc al, 0x48 ; add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000419097 : adc al, 0x48 ; cmp eax, edx ; jne 0x41907f ; ret
0x000000000040cd0d : adc al, 0x48 ; mov eax, dword ptr [rdx + 0xd0] ; ret
0x000000000040f23a : adc al, 0x50 ; jne 0x40f226 ; xor eax, eax ; ret
0x0000000000411139 : adc al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044d862 : adc al, 0x5b ; ret
0x00000000004199c1 : adc al, 0x5d ; pop r12 ; ret
0x000000000046be6a : adc al, 0x75 ; ret 0x8948
0x0000000000408b1a : adc al, 0x7a ; lea eax, [rax + rdx - 0xa] ; ret
0x000000000041b768 : adc al, 0x81 ; sete al ; movzx eax, al ; ret
0x0000000000401f56 : adc al, 0x83 ; retf 0xe8ff
0x0000000000415f02 : adc al, 0x85 ; sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000044fd31 : adc al, 0x89 ; ret 0x2944
0x0000000000415d03 : adc al, 0x89 ; retf 0x25e9
0x0000000000403224 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000432700 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000407e57 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004989e9 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x000000000041b666 : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000422ac2 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000404f5a : adc al, 0xbf ; ret
0x00000000004158a0 : adc al, 0xcf ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x41592e ; call rax
0x0000000000411098 : adc al, 0xf ; mov bh, 0xf6 ; add rsi, qword ptr [rax + 0x50] ; jmp rcx
0x00000000004b55bd : adc al, 0xf5 ; call qword ptr [rax]
0x00000000004b6345 : adc al, 0xf6 ; call qword ptr [rax]
0x00000000004b78fd : adc al, 0xf9 ; jmp rax
0x00000000004170f2 : adc al, 1 ; cmp byte ptr [rdi + 0x12], 0 ; je 0x417109 ; ret
0x00000000004152e3 : adc al, 1 ; pop rbx ; ret
0x0000000000420dc2 : adc al, 1 ; ret 0xc031
0x0000000000415cf2 : adc al, 1 ; sub dword ptr [rdx + 0x28], 1 ; ret
0x0000000000407d98 : adc al, 1 ; xor eax, eax ; sub eax, edx ; ret
0x00000000004afc8c : adc al, 5 ; syscall
0x00000000004b8e24 : adc al, 9 ; add byte ptr [rax], al ; div rsp ; jmp rax
0x00000000004377fe : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ddf5 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042a11d : adc al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000420121 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004170f6 : adc al, byte ptr [rax] ; je 0x417105 ; ret
0x000000000046d95d : adc al, byte ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000435533 : adc al, byte ptr [rcx - 0x7d] ; ret
0x00000000004170de : adc al, byte ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000447b9d : adc al, ch ; cmp eax, 0x89fffb9e ; ret 0xe281
0x00000000004b0234 : adc al, dl ; hlt ; lahf ; ret 0xc245
0x00000000004c6b89 : adc bh, al ; call rsi
0x00000000004b7475 : adc bh, al ; jmp qword ptr [rax]
0x00000000004109f7 : adc bh, bh ; dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x4109cd
0x000000000040f03e : adc bh, bh ; push rdx ; xor byte ptr [rbp + 0x75c589c0], al ; ret 0x634d
0x0000000000407c6d : adc bh, byte ptr [rax + 0xfffd] ; ret
0x00000000004501b6 : adc bh, byte ptr [rcx] ; retf 0x2574
0x00000000004ad51c : adc bh, ch ; std ; call rax
0x0000000000448bc6 : adc bh, dh ; ret 0x8080
0x000000000042fce1 : adc bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000040f72e : adc bl, al ; ret
0x00000000004ca619 : adc bl, bh ; jmp qword ptr [rbx]
0x0000000000492a82 : adc bl, bpl ; ret 0x2e66
0x000000000043dc42 : adc bl, bpl ; retf 0x3880
0x000000000043c421 : adc bl, ch ; ret
0x0000000000492a83 : adc bl, ch ; ret 0x2e66
0x000000000043eaf3 : adc bl, ch ; retf 0x2e66
0x000000000043dc43 : adc bl, ch ; retf 0x3880
0x0000000000408dbe : adc bl, dl ; clc ; and eax, 1 ; ret
0x000000000042fb45 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413b0b : adc byte ptr [r11 - 0xd], bl ; ret
0x00000000004a3484 : adc byte ptr [r8 + 0x63], r9b ; ret 0x8d48
0x0000000000461502 : adc byte ptr [r8 - 0x77], cl ; ret
0x0000000000407a6a : adc byte ptr [r8 - 0x77], r9b ; add eax, 0x2cad4d ; ret
0x000000000042011f : adc byte ptr [rax + 0x12], bh ; ret
0x000000000042062d : adc byte ptr [rax + 0x1d74014e], cl ; ret
0x00000000004a3485 : adc byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000047cc76 : adc byte ptr [rax + 0x75005178], al ; ret
0x00000000004847be : adc byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00000000004267c7 : adc byte ptr [rax + 1], cl ; ret
0x000000000040e7da : adc byte ptr [rax + 1], cl ; ret 0xb60f
0x00000000004105c4 : adc byte ptr [rax + 8], bh ; pop rbx ; ret
0x0000000000466a8d : adc byte ptr [rax + rdx - 0x7d], dh ; ret
0x000000000047465f : adc byte ptr [rax - 0x75], cl ; mov esi, 0x1a0 ; call rax
0x0000000000407a6b : adc byte ptr [rax - 0x77], cl ; add eax, 0x2cad4d ; ret
0x000000000046aeac : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x4170f8
0x00000000004316b3 : adc byte ptr [rax - 0x77], cl ; je 0x4316e3 ; or al, ch ; ret 0xfe61
0x0000000000461503 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000045c5ba : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000468c06 : adc byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000412b38 : adc byte ptr [rax - 0x77], cl ; retf 0xc085
0x000000000048294b : adc byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000044f913 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000407a4b : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x11], 0xf3 ; ret
0x0000000000417683 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1a], 0xf3 ; ret
0x000000000041e9e3 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000493ecb : adc byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004252af : adc byte ptr [rax - 0x7d], cl ; ret 0x8401
0x00000000004c0a10 : adc byte ptr [rax - 0xa], cl ; call qword ptr [rax]
0x000000000046eb7b : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000042b808 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; add dword ptr [r8], r8d ; ret
0x000000000042ce3f : adc byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdx, edx ; call 0x4290a9
0x00000000004b95a5 : adc byte ptr [rax], al ; add byte ptr [rax], ch ; or ch, dh ; call rsi
0x0000000000413f5f : adc byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046dfc7 : adc byte ptr [rax], al ; je 0x46dfe8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408e32 : adc byte ptr [rax], al ; mov qword ptr [rax], rdi ; je 0x408e48 ; ret
0x00000000004b809c : adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x000000000041653f : adc byte ptr [rbp + 0x5b0c74c0], al ; ret
0x0000000000433469 : adc byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000425d88 : adc byte ptr [rbp - 0x61], dh ; mov rdi, rax ; call 0x412018
0x0000000000497a96 : adc byte ptr [rbp - 0x75], al ; insb byte ptr [rdi], dx ; and al, 0x24 ; call 0x423d58
0x00000000004392d6 : adc byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000408d99 : adc byte ptr [rbp - 0xc258a40], al ; ret
0x00000000004b82f4 : adc byte ptr [rbp - 2], ch ; jmp rax
0x000000000049cefc : adc byte ptr [rbx + 0x478b2457], cl ; and byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000416567 : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000040a496 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411ce3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c3f8b : adc byte ptr [rbx + 0xa4d0202], al ; ret
0x00000000004b9ba4 : adc byte ptr [rbx + 0xa690202], al ; ret
0x00000000004ba3eb : adc byte ptr [rbx + 0xab40202], al ; ret
0x000000000047567b : adc byte ptr [rbx - 0x16fdd3b8], al ; retf 0xffdb
0x0000000000436a36 : adc byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000485143 : adc byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4810
0x0000000000413b0c : adc byte ptr [rbx - 0xd], bl ; ret
0x00000000004b7e54 : adc byte ptr [rbx - 5], bl ; call qword ptr [rax]
0x00000000004b7044 : adc byte ptr [rbx - 9], ch ; call qword ptr [rax]
0x00000000004055a8 : adc byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040d48a : adc byte ptr [rcx + 0x63], cl ; ret
0x0000000000421674 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbp ; call rax
0x000000000046b6b5 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000467cc7 : adc byte ptr [rcx - 0x76bfdb8c], cl ; ret 0x8c89
0x0000000000480daf : adc byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000451f8b : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000049232a : adc byte ptr [rcx - 0x77], cl ; ret 0xf2e9
0x0000000000477807 : adc byte ptr [rcx - 0x77], cl ; retf 0xf48
0x0000000000480dae : adc byte ptr [rcx - 0x77], r8b ; ret 0x8b4c
0x000000000040b3b8 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x000000000042fde3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000411546 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add dh, al ; sub byte ptr [r9], r8b ; ret
0x000000000040bab1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000041189a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004146bf : adc byte ptr [rcx], al ; clc ; ret
0x000000000042588e : adc byte ptr [rcx], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004146a5 : adc byte ptr [rcx], al ; ret
0x000000000040e859 : adc byte ptr [rcx], al ; retf 0xb60f
0x000000000043c0d8 : adc byte ptr [rcx], dh ; shr al, 0x50 ; retf 0xffff
0x000000000040fb15 : adc byte ptr [rdi], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x4102
0x00000000004897fe : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000413134 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x0000000000460553 : adc byte ptr [rsi + rax - 0x7d], bh ; ret
0x0000000000436972 : adc byte ptr [rsi - 0x3f], ah ; ret 0x8908
0x00000000004b673c : adc byte ptr [rsi - 0xa], dh ; jmp qword ptr [rax]
0x00000000004b7a64 : adc byte ptr [rsi - 7], bh ; call rax
0x00000000004b7c2c : adc byte ptr [rsi], al ; cli ; jmp rax
0x00000000004b9420 : adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x0000000000421375 : adc byte ptr [rsp + 8], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040b404 : adc ch, bl ; ret
0x00000000004146e1 : adc ch, byte ptr [rcx] ; ret 0x48d
0x00000000004810ca : adc ch, cl ; ror dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004b6004 : adc cl, bl ; cmc ; call qword ptr [rax]
0x0000000000475092 : adc cl, byte ptr [r8 + 1] ; retf
0x0000000000475093 : adc cl, byte ptr [rax + 1] ; retf
0x0000000000466599 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4101
0x000000000045807a : adc cl, ch ; ret
0x000000000041601d : adc dh, byte ptr [rcx] ; in eax, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042faff : adc dh, byte ptr [rsi + rbp*2 - 0x77] ; ret 0xca83
0x000000000042a271 : adc dh, byte ptr [rsp + rcx + 0x5b] ; ret
0x00000000004b630d : adc dh, dh ; call qword ptr [rax]
0x00000000004bfed1 : adc dh, dh ; jmp qword ptr [rcx]
0x00000000004bfe59 : adc dh, dh ; jmp qword ptr [rdx]
0x0000000000408b1e : adc dh, dh ; ret
0x000000000040f122 : adc dh, dh ; ret 0x75fe
0x00000000004b60ec : adc dl, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b966d : adc dword ptr [rax], eax ; add byte ptr [rax + 9], ah ; cmc ; jmp qword ptr [rbx]
0x000000000041f208 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475399 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x10eb
0x00000000004b0ed4 : adc dword ptr [rax], eax ; ret
0x000000000040bedc : adc dword ptr [rax], ecx ; jne 0x40bed5 ; ret
0x00000000004116f0 : adc dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004214e1 : adc dword ptr [rbx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000423e06 : adc dword ptr [rcx + 0xf], eax ; mov dh, 0x45 ; add dh, dh ; ret
0x0000000000480593 : adc dword ptr [rcx - 0x7d], eax ; ret 0x8901
0x000000000042fe19 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000040dbdd : adc dword ptr [rsi + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040e105 : adc dword ptr [rsi + 0x40], eax ; xor eax, eax ; ret
0x000000000040dcaa : adc dword ptr [rsi + 0x40], ebx ; ret
0x000000000040d31f : adc dword ptr [rsi + 0x40], ecx ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040ecb3 : adc dword ptr [rsi + 0x40], ecx ; ret
0x0000000000455e38 : adc dword ptr [rsi - 0x3f], esp ; ret 0x6608
0x000000000048e3f3 : adc eax, 0x1448d48 ; dec byte ptr [rax - 0x77] ; ret 0x8348
0x00000000004186a1 : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000004b7929 : adc eax, 0x1b900001 ; stc ; jmp qword ptr [rax]
0x0000000000429879 : adc eax, 0x1f0f1beb ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000416fee : adc eax, 0x2b9465 ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x000000000040cd91 : adc eax, 0x2c362e ; test edx, edx ; jne 0x40cda9 ; ret
0x000000000040cd51 : adc eax, 0x2c366e ; test edx, edx ; jne 0x40cd69 ; ret
0x0000000000408c41 : adc eax, 0x2c777e ; test edx, edx ; jne 0x408c59 ; ret
0x0000000000408c01 : adc eax, 0x2c77be ; test edx, edx ; jne 0x408c19 ; ret
0x00000000004090ca : adc eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000049c117 : adc eax, 0x48ffffe8 ; add esp, 0x18 ; ret
0x00000000004a0707 : adc eax, 0x48fffff9 ; add esp, 0x18 ; ret
0x000000000043648e : adc eax, 0x5b000000 ; ret
0x000000000044d15d : adc eax, 0x5be88906 ; pop rbp ; pop r12 ; ret
0x000000000046dfca : adc eax, 0x5c415d5b ; ret
0x0000000000401de6 : adc eax, 0x5d5b5a00 ; ret
0x0000000000422035 : adc eax, 0x8948ffff ; ret
0x0000000000419477 : adc eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000436504 : adc eax, 0xe8000000 ; ret
0x0000000000494dfc : adc eax, 0xe8000000 ; retf
0x00000000004ad3a4 : adc eax, 0xf6fffdf9 ; clc ; std ; call rdi
0x0000000000434bcd : adc eax, dword ptr [rax] ; add al, ch ; retf
0x00000000004b98e5 : adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; adc esi, ebp ; jmp qword ptr [rdx]
0x00000000004b0db8 : adc eax, dword ptr [rax] ; retf 0xc902
0x0000000000428b23 : adc eax, dword ptr [rbp - 0x77] ; ret
0x000000000040b17c : adc eax, dword ptr [rbx + 0x394401c2] ; ret 0xeb75
0x0000000000479ec0 : adc eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046b97c : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; call rax
0x00000000004c6b41 : adc eax, edi ; call rcx
0x000000000042595f : adc eax, esi ; sbb dword ptr [rcx], eax ; pop rbx ; ret
0x000000000040d08b : adc ebx, esi ; ret
0x00000000004ad7d0 : adc ecx, -3 ; jmp qword ptr [rsi]
0x0000000000407a44 : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040c60b : adc ecx, dword ptr [rax - 0x77] ; sti ; mov rdi, qword ptr [rdi + 8] ; call rax
0x000000000040e004 : adc ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000048d4dc : adc ecx, dword ptr [rcx - 0x77] ; ret 0x5eb
0x0000000000409f5b : adc ecx, dword ptr [rcx - 0x77] ; retf
0x0000000000496cc9 : adc ecx, dword ptr [rcx - 0x7bba8fbd] ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000049d728 : adc ecx, dword ptr [rdi] ; retf 0x7375
0x00000000004501e4 : adc edi, dword ptr [rcx] ; retf 0xd275
0x0000000000425a05 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b98e9 : adc esi, ebp ; jmp qword ptr [rdx]
0x00000000004b9979 : adc esi, ebp ; jmp rsp
0x00000000004b029c : adc esi, ecx ; int 0xcb
0x00000000004b821d : adc esi, edi ; call rax
0x00000000004bff59 : adc esi, esi ; call rax
0x00000000004b6305 : adc esi, esi ; jmp rax
0x00000000004acfa8 : adc esp, dword ptr [rsi - 0xb] ; call qword ptr [rbx]
0x000000000043c420 : adc r11b, r13b ; ret
0x000000000040b403 : adc r13b, r11b ; ret
0x00000000004501e3 : adc r15, qword ptr [r9] ; retf 0xd275
0x0000000000435532 : adc r8b, byte ptr [r9 - 0x7d] ; ret
0x00000000004170dd : adc r8b, byte ptr [r9] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408b1d : adc sil, r14b ; ret
0x00000000004b8af3 : add ah, ah ; add eax, 0xeb340000 ; hlt ; call qword ptr [rbx]
0x00000000004c69f3 : add ah, ah ; in al, 0 ; add byte ptr [rax], bl ; add al, 0xf8 ; call qword ptr [rdx]
0x00000000004be4f3 : add ah, ah ; pop rdi ; add byte ptr [rax], al ; test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x00000000004c78d3 : add ah, al ; add byte ptr [rax], al ; cmp byte ptr [rbp - 8], dh ; jmp qword ptr [rdx]
0x00000000004bbf0b : add ah, bh ; cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbf10 ; jmp qword ptr [rax]
0x00000000004c490b : add ah, bh ; ret
0x00000000004beaeb : add ah, bl ; add byte ptr gs:[rax], al ; add ah, ch ; cmc ; jmp rsi
0x00000000004bbeeb : add ah, bl ; cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbef0 ; call qword ptr [rdx]
0x00000000004c2feb : add ah, bl ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; adc ah, ch ; idiv bh ; ret 0
0x00000000004bdf92 : add ah, byte ptr [rdx + 0xa] ; ret
0x000000000044e839 : add ah, byte ptr [rsi - 0x3f] ; ret
0x0000000000452760 : add ah, byte ptr [rsi - 0x3f] ; ret 0x2108
0x00000000004ccbfb : add ah, ch ; add dword ptr [rax], r8d ; loopne 0x4ccc0d ; std ; call rdi
0x00000000004beaf0 : add ah, ch ; cmc ; jmp rsi
0x00000000004beedb : add ah, cl ; imul eax, dword ptr [rax], 0xf5f0d000 ; call qword ptr [rax]
0x00000000004c71db : add ah, cl ; in al, dx ; add byte ptr [rax], al ; loopne 0x4c7221 ; clc ; jmp qword ptr [rbx]
0x00000000004c48db : add ah, cl ; ret
0x00000000004cc903 : add ah, dh ; add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004bab03 : add ah, dh ; and eax, 0x4d180000 ; cmc ; call rcx
0x00000000004bf703 : add ah, dh ; jno 0x4bf70f ; add byte ptr [rax], cl ; add esi, esi ; call qword ptr [rdi]
0x00000000004c3f03 : add ah, dh ; mov ecx, 0x23c80000 ; idiv edi ; ret 0
0x00000000004c4803 : add ah, dh ; ret 0
0x00000000004c5103 : add ah, dh ; retf
0x00000000004cb103 : add ah, dh ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x4e], bl ; sti ; call rdi
0x00000000004b98e3 : add ah, dl ; adc eax, dword ptr [rax] ; add byte ptr [rax], cl ; adc esi, ebp ; jmp qword ptr [rdx]
0x00000000004cc8e3 : add ah, dl ; add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rax]
0x00000000004ccce3 : add ah, dl ; add dword ptr [r8], r8d ; js 0x4cccfe ; std ; call qword ptr [rdx]
0x00000000004bd9e3 : add ah, dl ; push rsp ; add byte ptr [rax], al ; sub al, al ; cmc ; call qword ptr [rdx]
0x00000000004ca0e3 : add ah, dl ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], bl ; cli ; call qword ptr [rdx]
0x000000000041f206 : add al, 0 ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000412a70 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000405749 : add al, 0 ; add byte ptr [rax], al ; mov edi, eax ; call 0x401a38
0x000000000042146c : add al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 8], dx ; ret
0x00000000004089bd : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000040f5f3 : add al, 0 ; add byte ptr [rax], al ; ud2 ; xor eax, eax ; ret
0x000000000049bff3 : add al, 0 ; add byte ptr [rbp + 0x31], al ; in al, 0xe9 ; ret
0x0000000000467a64 : add al, 0 ; add byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004b8935 : add al, 0 ; add byte ptr [rcx - 0x16], dh ; hlt ; call qword ptr [rbx]
0x00000000004b8975 : add al, 0 ; add byte ptr [rdi - 0x16], dl ; hlt ; call qword ptr [rbx]
0x00000000004b8955 : add al, 0 ; add byte ptr [rdx + rbp*8 - 0xc], ah ; call qword ptr [rbx]
0x00000000004b8995 : add al, 0 ; add byte ptr [rdx - 0x16], cl ; hlt ; call qword ptr [rbx]
0x00000000004b8915 : add al, 0 ; add byte ptr [rsi - 0x16], bh ; hlt ; call qword ptr [rbx]
0x00000000004561ac : add al, 0 ; je 0x4561ce ; xor eax, eax ; ret
0x00000000004146be : add al, 0x10 ; add eax, edi ; ret
0x00000000004146a4 : add al, 0x10 ; add eax, esi ; ret
0x000000000040bc43 : add al, 0x11 ; add al, 0x75 ; ret
0x000000000040bedb : add al, 0x11 ; or byte ptr [rbp - 0x10], dh ; ret
0x00000000004b9d14 : add al, 0x18 ; add byte ptr [rax], al ; or byte ptr [rax], ch ; cmc ; jmp qword ptr [rbx]
0x00000000004ca614 : add al, 0x21 ; add dword ptr [rax], eax ; js 0x4ca631 ; sti ; jmp qword ptr [rbx]
0x000000000043931a : add al, 0x24 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000437919 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043863e : add al, 0x24 ; call rsi
0x000000000041390c : add al, 0x29 ; ret
0x0000000000412672 : add al, 0x30 ; test rax, rax ; je 0x412682 ; call rax
0x000000000040ba51 : add al, 0x39 ; jne 0x40ba46 ; ret
0x00000000004a01ef : add al, 0x39 ; ret 0x47e
0x0000000000428815 : add al, 0x39 ; retf 0xba76
0x000000000041b6b8 : add al, 0x40 ; ret
0x0000000000426dcd : add al, 0x41 ; add esi, 1 ; mov r13, r15 ; jmp 0x426da3
0x000000000040f634 : add al, 0x48 ; add eax, dword ptr [rcx + 8] ; movzx eax, byte ptr [rax + 0x29] ; ret
0x00000000004357cf : add al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000413b08 : add al, 0x48 ; mov eax, dword ptr [rbx + 0x10] ; pop rbx ; ret
0x00000000004ccf14 : add al, 0x4a ; add dword ptr [rax], eax ; sub bpl, dil ; call rdx
0x000000000040f816 : add al, 0x4c ; cmp esi, ecx ; jne 0x40f7c8 ; pop rbx ; ret
0x00000000004097cf : add al, 0x58 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004142aa : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004add9c : add al, 0x64 ; ret 0x100
0x00000000004176c4 : add al, 0x66 ; mov dword ptr [r8 + 0x16], eax ; ret
0x0000000000432394 : add al, 0x66 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000004bbb0f : add al, 0x66 ; ret
0x00000000004c27c7 : add al, 0x68 ; ret
0x00000000004be34f : add al, 0x70 ; ret
0x00000000004bdaf7 : add al, 0x71 ; ret
0x00000000004b9147 : add al, 0x72 ; ret
0x00000000004cb1d7 : add al, 0x73 ; ret
0x0000000000409a07 : add al, 0x75 ; out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040bc45 : add al, 0x75 ; ret
0x00000000004c98c0 : add al, 0x77 ; ret
0x00000000004bc1a7 : add al, 0x78 ; ret
0x00000000004bce3f : add al, 0x79 ; ret
0x00000000004317ea : add al, 0x7d ; ret
0x00000000004bd00f : add al, 0x7f ; ret
0x000000000040b885 : add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000479514 : add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000436e7d : add al, 0x81 ; add rcx, r8 ; jmp rcx
0x0000000000420402 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000045d542 : add al, 0x81 ; ret
0x000000000042dfaa : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000040381c : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000047ccd0 : add al, 0x83 ; ret
0x00000000004289bb : add al, 0x83 ; ret 0x101
0x000000000040eae4 : add al, 0x83 ; ret 0x4101
0x000000000040ea95 : add al, 0x83 ; ret 0x4102
0x00000000004a6a3d : add al, 0x83 ; ret 0x4801
0x0000000000408aeb : add al, 0x83 ; ret 0x4828
0x000000000040c0f0 : add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000046f54f : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000004c0d14 : add al, 0x88 ; add byte ptr [rax], al ; mov byte ptr [rdi - 0xa], cl ; call qword ptr [rbx]
0x0000000000489c19 : add al, 0x89 ; pop rax ; sbb al, 0xe9 ; pop rsp ; retf
0x00000000004148fd : add al, 0x89 ; ret 0x8941
0x0000000000421bde : add al, 0x89 ; ret 0x944
0x0000000000409cfb : add al, 0x8b ; add al, 0xc3 ; xor eax, eax ; ret
0x000000000040eb91 : add al, 0x8d ; push rax ; add dword ptr [rcx], eax ; retf 0x4783
0x00000000004c1514 : add al, 0x90 ; add byte ptr [rax], al ; pop rax ; jg 0x4c1518 ; jmp qword ptr [rsi]
0x0000000000436897 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000049ad40 : add al, 0x98 ; add rax, rcx ; jmp rax
0x00000000004afa7d : add al, 0xb4 ; add al, 0xb4 ; add al, 0xb4 ; add al, 0xb9 ; call rcx
0x00000000004afa7f : add al, 0xb4 ; add al, 0xb4 ; add al, 0xb9 ; call rcx
0x00000000004afa81 : add al, 0xb4 ; add al, 0xb9 ; call rcx
0x00000000004afa83 : add al, 0xb9 ; call rcx
0x0000000000417aee : add al, 0xc2 ; mov byte ptr [rax - 0x15], sil ; ret
0x0000000000409cfe : add al, 0xc3 ; xor eax, eax ; ret
0x000000000044b68e : add al, 0xc7 ; jl 0x44b69c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x5389
0x0000000000458cd7 : add al, 0xe8 ; ret
0x0000000000476b38 : add al, 0xe8 ; ret 0xfa5d
0x00000000004723a0 : add al, 0xe8 ; retf 0xfbfb
0x00000000004357ee : add al, 0xe8 ; sbb al, 0xc5 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000045a58b : add al, 0xf3 ; ret
0x00000000004b9281 : add al, 0xf5 ; jmp qword ptr [rbx]
0x00000000004b6265 : add al, 0xf6 ; jmp rax
0x0000000000418b72 : add al, 0xf6 ; ret 0x7401
0x00000000004c69f9 : add al, 0xf8 ; call qword ptr [rdx]
0x0000000000407a11 : add al, 0xf8 ; ret
0x00000000004b7759 : add al, 1 ; add byte ptr [rax - 0x4c], dh ; clc ; jmp rax
0x000000000040e101 : add al, 1 ; movsd qword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; ret
0x00000000004bbacb : add al, 1 ; ret
0x00000000004787ee : add al, 2 ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x455219
0x00000000004bf2ff : add al, 2 ; cwde ; ret
0x00000000004bae47 : add al, 2 ; jo 0x4bae59 ; ret
0x000000000043a2e2 : add al, 2 ; movzx eax, word ptr [rbx + 0x30] ; jmp 0x43a2b4
0x000000000043a2e1 : add al, 2 ; movzx eax, word ptr [rbx + 0x30] ; jmp 0x43a2b5
0x0000000000407e53 : add al, 2 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c9c8f : add al, 2 ; pop rsi ; ret
0x00000000004bf32f : add al, 2 ; push rcx ; ret
0x00000000004099a0 : add al, 2 ; ret
0x00000000004c3a1e : add al, 2 ; retf 0xe0a
0x00000000004b8914 : add al, 4 ; add byte ptr [rax], al ; jle 0x4b890b ; hlt ; call qword ptr [rbx]
0x00000000004142a9 : add al, 4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004311b4 : add al, 4 ; xor byte ptr [rbx + 0x634804fa], al ; ret 0xf175
0x000000000040b6be : add al, 8 ; mov dword ptr [r10], eax ; mov eax, esi ; pop rbx ; ret
0x00000000004b633b : add al, ah ; adc esi, esi ; jmp rax
0x00000000004b81c3 : add al, ah ; add dh, bh ; jmp rax
0x00000000004ccbff : add al, ah ; add edi, ebp ; call rdi
0x00000000004bcd8f : add al, ah ; cdq ; cmc ; call qword ptr [rbx]
0x00000000004bbf4f : add al, ah ; jbe 0x4bbf4c ; jmp qword ptr [rax]
0x00000000004b5ac3 : add al, ah ; jo 0x4b5ac0 ; call rax
0x00000000004c17cf : add al, ah ; mov dh, dh ; jmp qword ptr [rdi]
0x00000000004b6123 : add al, ah ; out 0xf5, al ; jmp qword ptr [rax]
0x00000000004b5a6b : add al, ah ; pop rdi ; cmc ; jmp qword ptr [rax]
0x00000000004b52ed : add al, ah ; ret
0x00000000004b5f5b : add al, ah ; retf 0xfff5
0x00000000004cd8bf : add al, ah ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x00000000004ca93f : add al, ah ; sti ; jmp rdi
0x00000000004c417f : add al, ah ; sub al, 0xf7 ; call qword ptr [rdx]
0x00000000004b7f13 : add al, ah ; test bl, bh ; call rax
0x00000000004b821b : add al, al ; adc esi, edi ; call rax
0x00000000004b6303 : add al, al ; adc esi, esi ; jmp rax
0x00000000004b847b : add al, al ; and al, 0xff ; jmp qword ptr [rax]
0x00000000004b7fab : add al, al ; cld ; call rax
0x00000000004b786b : add al, al ; cld ; clc ; jmp qword ptr [rax]
0x00000000004b588b : add al, al ; cmc ; jmp qword ptr [rax]
0x00000000004b6e9b : add al, al ; idiv r15 ; ret
0x00000000004bbeef : add al, al ; jbe 0x4bbeec ; call qword ptr [rdx]
0x00000000004bbf0f : add al, al ; jbe 0x4bbf0c ; jmp qword ptr [rax]
0x00000000004b6733 : add al, al ; je 0x4b6731 ; call rax
0x00000000004b76ab : add al, al ; jo 0x4b76ab ; call rax
0x00000000004cc86f : add al, al ; loopne 0x4cc873 ; call rax
0x00000000004b6803 : add al, al ; mov dh, dh ; jmp rax
0x00000000004b6ba3 : add al, al ; ret
0x00000000004b721b : add al, al ; ret 0xfff7
0x00000000004b7a33 : add al, al ; stc ; jmp qword ptr [rax]
0x00000000004b5cb3 : add al, al ; xchg eax, ebx ; cmc ; call rax
0x00000000004cbe27 : add al, bh ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x00000000004bcd77 : add al, bl ; cdq ; cmc ; call qword ptr [rbx]
0x00000000004bb147 : add al, bl ; pop rsp ; cmc ; jmp rax
0x00000000004c5bc7 : add al, bl ; ret
0x00000000004bdbc7 : add al, bl ; ret 0xfff5
0x000000000042e320 : add al, bl ; retf
0x00000000004561ff : add al, byte ptr [r9] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044fa89 : add al, byte ptr [rax] ; add al, ch ; pop rdi ; retf
0x000000000040b205 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000407f9d : add al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf
0x000000000040d111 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x39], r9b ; ret
0x0000000000496793 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463257 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000445e25 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000421560 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000408941 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044fd2a : add al, byte ptr [rax] ; add byte ptr [rbp + 0xf], al ; mov dh, 0x78 ; adc al, 0x89 ; ret 0x2944
0x000000000042834e : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76b7feb5], cl ; retf
0x0000000000434442 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004787ef : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x455218
0x000000000043b59d : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004b8755 : add al, byte ptr [rax] ; add byte ptr [rsi], bl ; loope 0x4b8755 ; jmp qword ptr [rcx]
0x000000000040df71 : add al, byte ptr [rax] ; mov dword ptr [rcx], esi ; pop rbx ; pop rbp ; ret
0x000000000040df7f : add al, byte ptr [rax] ; mov dword ptr [rcx], esi ; ret
0x000000000048a05e : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000004869dd : add al, byte ptr [rax] ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000004c4876 : add al, byte ptr [rax] ; xor al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004c0108 : add al, byte ptr [rbp + 0xa] ; ret
0x00000000004be45a : add al, byte ptr [rbx + 0xa] ; ret
0x0000000000451536 : add al, byte ptr [rbx - 0x3f7cfc3f] ; add dword ptr [rcx], edi ; ret 0x440f
0x000000000043553b : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000453313 : add al, byte ptr [rcx + 0x39] ; ret 0x8d0f
0x00000000004b9942 : add al, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000045086e : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x26e9
0x0000000000409829 : add al, byte ptr [rcx - 0x2f] ; jmp 0xffffffffc43471ad
0x00000000004b7731 : add al, byte ptr [rcx] ; add byte ptr [rax - 0x61], ah ; clc ; call rax
0x0000000000456200 : add al, byte ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ae18e : add al, byte ptr [rcx] ; enter 1, 1 ; retf 0x201
0x00000000004ae196 : add al, byte ptr [rcx] ; retf
0x000000000040e2e1 : add al, byte ptr [rcx] ; xor eax, eax ; mov dword ptr [rdi + 0x34], esi ; ret
0x00000000004ba3ed : add al, byte ptr [rdx] ; mov ah, 0xa ; ret
0x00000000004c5165 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004ba15d : add al, byte ptr [rdx] ; ret
0x000000000049b692 : add al, ch ; cmp byte ptr [rcx - 0x76b70006], bh ; ret
0x00000000004038dd : add al, ch ; fnsave dword ptr [rsi - 0x3fceffff] ; pop rbx ; ret
0x00000000004a0871 : add al, ch ; mov ecx, 0xe9fffce1 ; ret
0x000000000044fa8b : add al, ch ; pop rdi ; retf
0x00000000004905f5 : add al, ch ; push rbp ; lahf ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000411847 : add al, ch ; ret
0x0000000000490838 : add al, ch ; ret 0xf8ff
0x000000000046d648 : add al, ch ; ret 0xfa49
0x00000000004a55c8 : add al, ch ; ret 0xfc6a
0x0000000000434bcf : add al, ch ; retf
0x0000000000475f00 : add al, ch ; retf 0xfbd2
0x00000000004a3760 : add al, ch ; retf 0xfcb2
0x00000000004a3650 : add al, ch ; retf 0xfed9
0x000000000044b450 : add al, ch ; retf 0xffe4
0x000000000046a5ef : add al, ch ; sti ; retf 0xfffa
0x00000000004a4c70 : add al, ch ; stosb byte ptr [rdi], al ; ret
0x00000000004a76ff : add al, ch ; sub edi, dword ptr [rdi + rsi*8 + 0x74c085ff] ; ret 0xc35b
0x00000000004be3c7 : add al, cl ; fdivr st(5), st(0) ; call qword ptr [rsi]
0x00000000004bb867 : add al, cl ; insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x00000000004c6b3f : add al, dh ; adc eax, edi ; call rcx
0x00000000004b6263 : add al, dh ; add al, 0xf6 ; jmp rax
0x00000000004b6ceb : add al, dh ; add bh, dh ; jmp rax
0x000000000042ecf0 : add al, dh ; and al, 0x10 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004b580b : add al, dh ; cmp dh, ch ; jmp rax
0x00000000004b6deb : add al, dh ; cmp esi, edi ; call qword ptr [rax]
0x00000000004b7d93 : add al, dh ; hlt ; cli ; jmp qword ptr [rax]
0x00000000004b8333 : add al, dh ; js 0x4b8339 ; jmp rax
0x00000000004b66db : add al, dh ; push -0xa ; jmp qword ptr [rax]
0x00000000004b5fbb : add al, dh ; sal ch, 1 ; jmp qword ptr [rax]
0x00000000004b7f5b : add al, dh ; xchg eax, ebp ; sti ; call rax
0x00000000004bfecf : add al, dl ; adc dh, dh ; jmp qword ptr [rcx]
0x00000000004b825b : add al, dl ; and esi, edi ; jmp rax
0x00000000004bf54f : add al, dl ; cld ; cmc ; call rsi
0x00000000004bd27f : add al, dl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rbx]
0x00000000004b6e73 : add al, dl ; idiv edi ; ret 0
0x00000000004b833b : add al, dl ; jns 0x4b8341 ; jmp qword ptr [rax]
0x00000000004b81db : add al, dl ; or al, 0xfe ; call rax
0x00000000004b618b : add al, dl ; out dx, eax ; cmc ; call rax
0x00000000004b5efb : add al, dl ; ret 0xfff5
0x00000000004b5483 : add al, dl ; retf
0x00000000004cd8ef : add al, dl ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x00000000004b8493 : add al, dl ; xor bh, bh ; jmp qword ptr [rax]
0x000000000042ecef : add al, r14b ; and al, 0x10 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004711a3 : add bh, al ; test byte ptr [rax + rcx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004b56ab : add bh, bh ; and ebp, esi ; call rax
0x000000000041d543 : add bh, bh ; inc dword ptr [rax] ; je 0x41d557 ; ret
0x000000000042125d : add bh, bh ; inc dword ptr [rax] ; je 0x42126f ; pop rbx ; ret
0x000000000041b410 : add bh, bh ; ret
0x0000000000410651 : add bh, byte ptr [rax + 1] ; ret
0x000000000041067b : add bh, byte ptr [rax + 2] ; ret
0x00000000004106a8 : add bh, byte ptr [rax + 3] ; ret
0x00000000004106dd : add bh, byte ptr [rax + 4] ; ret
0x00000000004998d0 : add bh, byte ptr [rcx] ; ret
0x0000000000407ed1 : add bh, byte ptr [rcx] ; ret 0xea7f
0x000000000043d168 : add bh, byte ptr [rcx] ; ror byte ptr [rdi], 1 ; ret 0x548b
0x00000000004b97dd : add bh, byte ptr [rdx + 0xa] ; ret
0x00000000004ccb69 : add bh, ch ; call rdi
0x00000000004b7d8c : add bh, ch ; cli ; call rax
0x00000000004b6ced : add bh, dh ; jmp rax
0x00000000004598bb : add bh, dh ; ret
0x0000000000407c72 : add bl, al ; nop dword ptr [rax] ; ret
0x000000000040986b : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000407a72 : add bl, al ; ret
0x00000000004c4f5e : add bl, byte ptr [rbx + 0x46180e0a] ; ret
0x000000000042153f : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b99cf : add bl, byte ptr [rbx + 0xa] ; ret
0x00000000004b087f : add bl, byte ptr [rbx + rax + 0x5c] ; add ecx, dword ptr [rcx + 1] ; retf 0x1003
0x00000000004ad064 : add bl, byte ptr [rdx - 4] ; call rdi
0x00000000004c48f6 : add bl, byte ptr [rsi + 0xa] ; ret
0x00000000004caa3a : add bl, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000406fcb : add bl, ch ; add cl, cl ; ret
0x000000000042e3bb : add bl, ch ; fcomp st(1) ; retf 0xe9db
0x00000000004b8b78 : add bl, ch ; hlt ; jmp qword ptr [rdx]
0x0000000000486d5e : add bl, ch ; or eax, dword ptr [rbx - 0x7cb7fe40] ; ret 0x3902
0x0000000000435a7b : add bl, ch ; ret
0x000000000043550b : add bl, ch ; ret 0x9066
0x000000000048642b : add bl, ch ; ret 0xc031
0x000000000040e39d : add bl, ch ; retf
0x0000000000453bbd : add bl, ch ; retf 0x8d48
0x00000000004207fb : add bl, ch ; retf 0x9066
0x0000000000407b0f : add bl, dh ; ret
0x000000000047d909 : add bl, dl ; loopne 0x47d896 ; ret 0xac75
0x0000000000407c76 : add bl, sil ; ret
0x000000000043208e : add bpl, bl ; fcomp st(5) ; fdiv st(3) ; ret
0x000000000043676b : add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000410fa2 : add byte ptr [r11], r13b ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004948c8 : add byte ptr [r13 + rcx*4 + 5], r9b ; ret 0x163
0x000000000042cfea : add byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x00000000004760ca : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rdx ; ret 0xfffb
0x00000000004036f9 : add byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000040f676 : add byte ptr [r8], al ; add byte ptr [rbx + 0xf], bl ; ret 0x90c3
0x000000000040f668 : add byte ptr [r8], al ; add byte ptr [rdi + 0x12], bh ; pop rbx ; ret
0x000000000040f6b9 : add byte ptr [r8], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000004b5b39 : add byte ptr [r8], al ; and byte ptr [rsi - 0xb], dh ; jmp rax
0x00000000004b5969 : add byte ptr [r8], al ; mov al, 0x48 ; cmc ; jmp qword ptr [rax]
0x00000000004b5991 : add byte ptr [r8], al ; nop ; cmc ; jmp rax
0x00000000004b5ad9 : add byte ptr [r8], al ; xor byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x00000000004ae060 : add byte ptr [r8], r10b ; je 0x4ae06c ; retf 0xcb00
0x00000000004ae060 : add byte ptr [r8], r10b ; je 0x4ae06e ; retf 0xcb00
0x000000000042bad1 : add byte ptr [r8], r8b ; jmp 0x42baa5
0x00000000004b5c11 : add byte ptr [r8], r8b ; nop ; mov ch, dh ; call rax
0x00000000004b0c5c : add byte ptr [r9 + r8 + 0x17801b3], r14b ; ret
0x0000000000418b62 : add byte ptr [rax + 0x107404fa], al ; xor eax, eax ; ret
0x00000000004ca617 : add byte ptr [rax + 0x10], bh ; sti ; jmp qword ptr [rbx]
0x000000000041ba1f : add byte ptr [rax + 0x10b], bh ; ret
0x000000000043781f : add byte ptr [rax + 0x12], bh ; ret
0x00000000004b7c6b : add byte ptr [rax + 0x15], dh ; cli ; call rax
0x00000000004b9c07 : add byte ptr [rax + 0x1c], bl ; cmc ; jmp qword ptr [rax]
0x00000000004c8c57 : add byte ptr [rax + 0x1f], ch ; stc ; jmp qword ptr [rdi]
0x00000000004b573b : add byte ptr [rax + 0x27], dh ; cmc ; call rax
0x00000000004ccf17 : add byte ptr [rax + 0x28], cl ; std ; call rdx
0x00000000004b6e93 : add byte ptr [rax + 0x28fff74b], ah ; ret
0x0000000000430b0b : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000042cfeb : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000042095b : add byte ptr [rax + 0x29], cl ; ret 0x8d4c
0x000000000046e5a9 : add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000040c4ef : add byte ptr [rax + 0x2df1b8], bh ; ret
0x00000000004b7563 : add byte ptr [rax + 0x2f], dh ; clc ; jmp rax
0x00000000004b5683 : add byte ptr [rax + 0x30fff520], bh ; add byte ptr ss:[rax], al ; retf
0x00000000004b6e6b : add byte ptr [rax + 0x30fff746], dh ; ret 0
0x00000000004cd0af : add byte ptr [rax + 0x36], dh ; std ; jmp rdi
0x00000000004b57b3 : add byte ptr [rax + 0x38], al ; cmc ; call rax
0x00000000004c9e97 : add byte ptr [rax + 0x38], cl ; cli ; jmp qword ptr [rax]
0x0000000000438817 : add byte ptr [rax + 0x39], cl ; ret
0x00000000004096bf : add byte ptr [rax + 0x39], cl ; ret 0xa76
0x00000000004184a6 : add byte ptr [rax + 0x39], cl ; ret 0xc7f
0x0000000000470bdd : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004b581b : add byte ptr [rax + 0x3b], dh ; cmc ; call qword ptr [rax]
0x00000000004ba64f : add byte ptr [rax + 0x3c], dh ; cmc ; call qword ptr [rcx]
0x000000000045a174 : add byte ptr [rax + 0x430f0000], al ; ret 0x4489
0x00000000004274a3 : add byte ptr [rax + 0x468d1641], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004b592b : add byte ptr [rax + 0x46], dl ; cmc ; jmp qword ptr [rax]
0x00000000004b7003 : add byte ptr [rax + 0x48fff766], ah ; retf
0x00000000004b7603 : add byte ptr [rax + 0x4f], dh ; clc ; call qword ptr [rax]
0x00000000004b7feb : add byte ptr [rax + 0x62], dl ; cld ; call rax
0x0000000000403221 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000004989e6 : add byte ptr [rax + 0x63], cl ; adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00000000004a6c8b : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000048a05f : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000436894 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x0000000000407a0b : add byte ptr [rax + 0x63], cl ; dec dword ptr [rax - 0x75] ; add al, 0xf8 ; ret
0x00000000004869de : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000004278b6 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000004087f7 : add byte ptr [rax + 0x63], cl ; ret
0x00000000004a45df : add byte ptr [rax + 0x63], cl ; ret 0x149
0x0000000000418407 : add byte ptr [rax + 0x63], cl ; ret 0x348
0x000000000042bf1f : add byte ptr [rax + 0x63], cl ; ret 0x8949
0x000000000044448d : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000004453bc : add byte ptr [rax + 0x63], cl ; ret 0xc641
0x0000000000456717 : add byte ptr [rax + 0x63], cl ; retf
0x0000000000489697 : add byte ptr [rax + 0x63], cl ; retf 0x3c80
0x000000000046d7bf : add byte ptr [rax + 0x63], cl ; retf 0x6349
0x0000000000410ead : add byte ptr [rax + 0x63], cl ; retf 0x7c80
0x0000000000444dac : add byte ptr [rax + 0x63], cl ; retf 0x8b41
0x00000000004875c2 : add byte ptr [rax + 0x63], cl ; retf 0x8d48
0x000000000041a0a0 : add byte ptr [rax + 0x63], cl ; retf 0xd289
0x00000000004088f7 : add byte ptr [rax + 0x63], cl ; retf 0xea83
0x000000000042ce42 : add byte ptr [rax + 0x63], cl ; shr al, cl ; push rbp ; ret 0xffff
0x00000000004c8d67 : add byte ptr [rax + 0x64], bh ; stc ; call rdx
0x00000000004c7687 : add byte ptr [rax + 0x66], bl ; clc ; call rcx
0x000000000044e56f : add byte ptr [rax + 0x74000478], al ; retf 0xb70f
0x000000000040dfce : add byte ptr [rax + 0x745df980], dl ; or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000004bbc77 : add byte ptr [rax + 0x75], ch ; cmc ; call qword ptr [rdx]
0x000000000045762f : add byte ptr [rax + 0x7602157f], al ; retf
0x00000000004bbe17 : add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rbx]
0x00000000004bc3c7 : add byte ptr [rax + 0x7f], ch ; cmc ; call rsi
0x00000000004464bb : add byte ptr [rax + 0x8c48348], al ; pop rbx ; pop rbp ; ret
0x00000000004199cf : add byte ptr [rax + 0xb74983e], al ; xor eax, eax ; ret
0x00000000004ccce7 : add byte ptr [rax + 0xc], bh ; std ; call qword ptr [rdx]
0x000000000044e597 : add byte ptr [rax + 0xf], cl ; mov esi, 0x8b485843 ; xchg eax, esp ; ret
0x000000000040d261 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000493bfc : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000494076 : add byte ptr [rax + 0xf], cl ; retf 0x8b41
0x000000000049a5ac : add byte ptr [rax + 0xf], cl ; sal byte ptr [rcx], 1 ; shr al, 0x18 ; retf 0xfffa
0x000000000044f486 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004a43eb : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 1], 1 ; retf 0xc148
0x000000000041b182 : add byte ptr [rax + 1], bh ; jne 0x41b198 ; ret
0x0000000000407daf : add byte ptr [rax + 1], bh ; ret
0x0000000000419d17 : add byte ptr [rax + 1], bh ; shl rax, cl ; ret
0x000000000041b1d7 : add byte ptr [rax + 1], bh ; sub eax, edx ; ret
0x000000000041b5a4 : add byte ptr [rax + 1], cl ; retf 0xa6eb
0x000000000040dab0 : add byte ptr [rax + 1], cl ; retf 0xb60f
0x00000000004b7dc3 : add byte ptr [rax + 1], dh ; sti ; call qword ptr [rax]
0x000000000040a253 : add byte ptr [rax + 2], bh ; ret
0x00000000004c6a67 : add byte ptr [rax + 5], ch ; clc ; jmp rsp
0x00000000004b947f : add byte ptr [rax + 6], al ; cmc ; call qword ptr [rbx]
0x00000000004b94af : add byte ptr [rax + 6], dl ; cmc ; jmp qword ptr [rdx]
0x0000000000409976 : add byte ptr [rax + 7], bh ; ret
0x0000000000407b7f : add byte ptr [rax + 8], bh ; ret
0x00000000004b966f : add byte ptr [rax + 9], ah ; cmc ; jmp qword ptr [rbx]
0x00000000004c85b3 : add byte ptr [rax + rax - 0x22e7ffff], ah ; clc ; call rdx
0x00000000004b6638 : add byte ptr [rax + rax - 0x9a17000], cl ; jmp qword ptr [rax]
0x00000000004c05ab : add byte ptr [rax + rax*4 + 0x24b00000], bl ; idiv bh ; ret
0x00000000004176ff : add byte ptr [rax + rax*8 - 0x7cb6e687], al ; ret 0x4101
0x00000000004b52e6 : add byte ptr [rax + rax], 0 ; add byte ptr [rax], al ; add al, ah ; ret
0x00000000004b8573 : add byte ptr [rax + rax], ah ; add byte ptr [rax - 0x3b], cl ; hlt ; call rax
0x00000000004c48af : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049bff2 : add byte ptr [rax + rax], al ; add byte ptr [rbp + 0x31], al ; in al, 0xe9 ; ret
0x00000000004b8553 : add byte ptr [rax + rax], al ; add byte ptr [rsi], cl ; ret
0x00000000004c4907 : add byte ptr [rax + rax], bl ; add ah, bh ; ret
0x00000000004c5077 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000004c47ff : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c476f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000004c50ff : add byte ptr [rax + rax], cl ; add ah, dh ; retf
0x00000000004c4877 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004c479f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004b9d13 : add byte ptr [rax + rbx], al ; add byte ptr [rax], al ; or byte ptr [rax], ch ; cmc ; jmp qword ptr [rbx]
0x00000000004c8d63 : add byte ptr [rax + rcx + 1], dl ; add byte ptr [rax + 0x64], bh ; stc ; call rdx
0x000000000041171d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000004bcd73 : add byte ptr [rax + rcx*2], ah ; add al, bl ; cdq ; cmc ; call qword ptr [rbx]
0x00000000004bcd8b : add byte ptr [rax + rcx*2], bh ; add al, ah ; cdq ; cmc ; call qword ptr [rbx]
0x00000000004c0d13 : add byte ptr [rax + rcx*4], al ; add byte ptr [rax], al ; mov byte ptr [rdi - 0xa], cl ; call qword ptr [rbx]
0x00000000004b8d2b : add byte ptr [rax + rcx], bl ; add byte ptr [rax], al ; nop ; out dx, al ; hlt ; jmp qword ptr [rbx]
0x00000000004bbdb3 : add byte ptr [rax + rdi + 0x76180000], ah ; cmc ; call qword ptr [rax]
0x00000000004bbd9b : add byte ptr [rax + rdi + 0x76200000], cl ; cmc ; call qword ptr [rax]
0x00000000004c7d93 : add byte ptr [rax + rdi*8 - 0x6eb80000], al ; clc ; call rsi
0x000000000044549d : add byte ptr [rax + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b95a3 : add byte ptr [rax + rdx + 0x8280000], dl ; cmc ; call rsi
0x00000000004c1513 : add byte ptr [rax + rdx*4], al ; add byte ptr [rax], al ; pop rax ; jg 0x4c1519 ; jmp qword ptr [rsi]
0x00000000004bf54b : add byte ptr [rax + rsi*2], bh ; add byte ptr [rax], al ; sar ah, 1 ; cmc ; call rsi
0x00000000004be9e7 : add byte ptr [rax - 0x15], bl ; cmc ; call qword ptr [rdi]
0x00000000004b8a13 : add byte ptr [rax - 0x15ea0000], al ; hlt ; call qword ptr [rbx]
0x00000000004c63cf : add byte ptr [rax - 0x17], ah ; idiv edi ; retf 3
0x00000000004b7d5b : add byte ptr [rax - 0x1e], dh ; cli ; call qword ptr [rax]
0x00000000004b6093 : add byte ptr [rax - 0x20], al ; cmc ; call rax
0x00000000004b7b9b : add byte ptr [rax - 0x37], ah ; stc ; jmp rax
0x00000000004b8577 : add byte ptr [rax - 0x3b], cl ; hlt ; call rax
0x00000000004c5be7 : add byte ptr [rax - 0x3c], bh ; idiv edi ; retf
0x00000000004b5f0b : add byte ptr [rax - 0x3d], dh ; cmc ; call qword ptr [rax]
0x000000000047852a : add byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000408ae7 : add byte ptr [rax - 0x3f], cl ; out dx, eax ; add al, 0x83 ; ret 0x4828
0x00000000004c93af : add byte ptr [rax - 0x42], dl ; stc ; call qword ptr [rbx]
0x00000000004b6e83 : add byte ptr [rax - 0x470008b7], dh ; ret 0
0x0000000000407f9f : add byte ptr [rax - 0x48], cl ; retf
0x00000000004cc4df : add byte ptr [rax - 0x49], dh ; cld ; jmp rdx
0x00000000004b775b : add byte ptr [rax - 0x4c], dh ; clc ; jmp rax
0x00000000004cb107 : add byte ptr [rax - 0x4e], bl ; sti ; call rdi
0x00000000004b80db : add byte ptr [rax - 0x53], dh ; std ; jmp qword ptr [rax]
0x00000000004bd39f : add byte ptr [rax - 0x58], dh ; cmc ; jmp qword ptr [rdi]
0x00000000004b6eb3 : add byte ptr [rax - 0x5f0008b4], ah ; ret
0x00000000004bcfa7 : add byte ptr [rax - 0x60], bl ; cmc ; jmp rdi
0x00000000004b7733 : add byte ptr [rax - 0x61], ah ; clc ; call rax
0x0000000000418a83 : add byte ptr [rax - 0x68], cl ; pop rbx ; ret
0x00000000004b6ff3 : add byte ptr [rax - 0x6f00089c], dh ; retf 0
0x00000000004c7d97 : add byte ptr [rax - 0x6f], cl ; clc ; call rsi
0x00000000004b7adb : add byte ptr [rax - 0x6f], dl ; stc ; jmp qword ptr [rax]
0x0000000000408cef : add byte ptr [rax - 0x73], cl ; add eax, 0x2c6e49 ; ret
0x0000000000408cdf : add byte ptr [rax - 0x73], cl ; add eax, 0x2c6ef9 ; ret
0x0000000000408ccf : add byte ptr [rax - 0x73], cl ; add eax, 0x2c6fa9 ; ret
0x0000000000436727 : add byte ptr [rax - 0x73], cl ; add eax, 0x73638 ; ret
0x0000000000438acf : add byte ptr [rax - 0x73], cl ; add eax, 0x75979 ; ret
0x0000000000421347 : add byte ptr [rax - 0x73], cl ; add eax, 0x8d2b1 ; ret
0x000000000041a58f : add byte ptr [rax - 0x73], cl ; add eax, 0x8f432 ; ret
0x000000000040c4df : add byte ptr [rax - 0x73], cl ; add eax, 0xa4ee1 ; ret
0x000000000040c4cf : add byte ptr [rax - 0x73], cl ; add eax, 0xa4ee9 ; ret
0x0000000000492a7f : add byte ptr [rax - 0x75], cl ; adc bl, bpl ; ret 0x2e66
0x00000000004238ab : add byte ptr [rax - 0x75], cl ; cmp eax, 0x2acbc5 ; call rax
0x000000000046d5a7 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000484a68 : add byte ptr [rax - 0x75], cl ; je 0x484a52 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a43bf : add byte ptr [rax - 0x75], cl ; je 0x4a43f0 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000040d113 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x39], r9b ; ret
0x000000000041b09f : add byte ptr [rax - 0x75], cl ; sbb ecx, dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xed85
0x0000000000479707 : add byte ptr [rax - 0x75], cl ; xor dword ptr [rcx], ebp ; ret 0x8348
0x0000000000411977 : add byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004303b5 : add byte ptr [rax - 0x76b6d2c8], al ; ret 0x44c7
0x0000000000408e33 : add byte ptr [rax - 0x77], cl ; cmp byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000495d05 : add byte ptr [rax - 0x77], cl ; fbstp tbyte ptr [rcx] ; shr al, 0x90 ; ret 0xfffa
0x0000000000423a91 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000423626 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x000000000043b29a : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x9ae8
0x000000000041086f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000494e44 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rbx + rcx*4 + 0x7d] ; or al, ch ; jmp rdi
0x000000000045ec1a : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; lodsd eax, dword ptr [rsi] ; retf
0x000000000045ebd9 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; out dx, al ; retf
0x00000000004760cd : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rdx ; ret 0xfffb
0x000000000047e705 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfad0
0x000000000043fcd5 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfe1c
0x00000000004036fc : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000004795b9 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdx, qword ptr [rax + r15] ; call r9
0x0000000000437777 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000440d01 : add byte ptr [rax - 0x77], cl ; pop rax ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000412a9f : add byte ptr [rax - 0x77], cl ; ret
0x000000000048c5ce : add byte ptr [rax - 0x77], cl ; ret 0x29e8
0x000000000042318a : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a1ef4 : add byte ptr [rax - 0x77], cl ; ret 0x84c7
0x0000000000484c47 : add byte ptr [rax - 0x77], cl ; ret 0x8944
0x0000000000458543 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000403ec4 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000404b53 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044a517 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000479ec2 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000041e75f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004264ef : add byte ptr [rax - 0x77], cl ; ret 0xd989
0x000000000048c61b : add byte ptr [rax - 0x77], cl ; ret 0xdce8
0x000000000041b46f : add byte ptr [rax - 0x77], cl ; ret 0xf189
0x00000000004287a4 : add byte ptr [rax - 0x77], cl ; ret 0xf641
0x0000000000428272 : add byte ptr [rax - 0x77], cl ; retf
0x000000000047539b : add byte ptr [rax - 0x77], cl ; retf 0x10eb
0x0000000000455ab7 : add byte ptr [rax - 0x77], cl ; retf 0x13eb
0x00000000004285e9 : add byte ptr [rax - 0x77], cl ; retf 0x1574
0x00000000004284d2 : add byte ptr [rax - 0x77], cl ; retf 0x1c74
0x000000000044d74a : add byte ptr [rax - 0x77], cl ; retf 0x7bd
0x0000000000469fdc : add byte ptr [rax - 0x77], cl ; retf 0x8548
0x000000000047d225 : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042c5af : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000045a56e : add byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000004284ee : add byte ptr [rax - 0x77], cl ; retf 0xec75
0x000000000048c0d7 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x0000000000461b3a : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000041bf9f : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xf01
0x0000000000476fa8 : add byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x7d], cl ; ret 0x6638
0x000000000044ea15 : add byte ptr [rax - 0x78], al ; cmp byte ptr [rbx - 0x7ccbdba4], cl ; ret
0x000000000041181f : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax + 0x63] ; ret
0x00000000004a292d : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000041a738 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x41] ; jmp 0x41a70a
0x0000000000409abf : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi] ; ret
0x000000000043106b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xb60f
0x0000000000438911 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000004a362a : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rcx + 0x48], 0x89 ; ret
0x00000000004489b7 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbp - 0x7d], cl ; ret
0x0000000000402b88 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rdi + 0x48], 0x89 ; ret 0x8944
0x00000000004b5be3 : add byte ptr [rax - 0x7b], dh ; cmc ; call qword ptr [rax]
0x00000000004b7a6b : add byte ptr [rax - 0x7d], al ; stc ; jmp qword ptr [rax]
0x000000000040203d : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041495b : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000045cb32 : add byte ptr [rax - 0x7d], cl ; ret 0x3102
0x000000000048c477 : add byte ptr [rax - 0x7d], cl ; ret 0x3138
0x000000000042fde7 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000045d9ef : add byte ptr [rax - 0x7d], cl ; ret 0x3b04
0x000000000044734c : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000004572cf : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000408b8c : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040b07f : add byte ptr [rax - 0x7d], cl ; ret 0x4470
0x0000000000441595 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000042d207 : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000049b129 : add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000000000045eddf : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000000004840bf : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000046d289 : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000045cb3f : add byte ptr [rax - 0x7d], cl ; ret 0x6602
0x000000000042e70f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000445e27 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000040c257 : add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x000000000041aea7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042e557 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000461e42 : add byte ptr [rax - 0x7d], cl ; ret 0xe838
0x000000000046bb9f : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000040b78f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000461a82 : add byte ptr [rax - 0x7d], cl ; ret 0xf370
0x000000000045dde4 : add byte ptr [rax - 0x7f], cl ; ret
0x00000000004b5a1c : add byte ptr [rax - 0xb], bl ; call rax
0x00000000004befc7 : add byte ptr [rax - 0xe], ch ; cmc ; call rbx
0x00000000004b6e8b : add byte ptr [rax - 0xf0008b6], ah ; ret 0
0x00000000004096cc : add byte ptr [rax - 0xf], bh ; sub rax, rsi ; ret
0x000000000040a617 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040cb1f : add byte ptr [rax - 1], bh ; ret
0x00000000004bf437 : add byte ptr [rax - 6], bl ; cmc ; jmp qword ptr [rbx]
0x00000000004b8e27 : add byte ptr [rax - 9], cl ; hlt ; jmp rax
0x00000000004207c9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042fc1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x000000000042f8db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000040f273 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000409a7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044ac22 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0xce98a40], al ; ret
0x0000000000485891 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004c05ad : add byte ptr [rax], 0 ; mov al, 0x24 ; idiv bh ; ret
0x00000000004b6471 : add byte ptr [rax], 0 ; xor esi, esi ; call qword ptr [rax]
0x00000000004b7f9b : add byte ptr [rax], ah ; cld ; jmp qword ptr [rax]
0x00000000004b58c3 : add byte ptr [rax], ah ; cmc ; jmp rax
0x00000000004b610b : add byte ptr [rax], ah ; in al, 0xf5 ; jmp qword ptr [rax]
0x00000000004b5b3b : add byte ptr [rax], ah ; jbe 0x4b5b38 ; jmp rax
0x00000000004bbd9f : add byte ptr [rax], ah ; jbe 0x4bbd9c ; call qword ptr [rax]
0x00000000004bc09f : add byte ptr [rax], ah ; js 0x4bc09c ; jmp rcx
0x00000000004b685b : add byte ptr [rax], ah ; mov esi, esi ; jmp qword ptr [rax]
0x00000000004b62b3 : add byte ptr [rax], ah ; or al, 0xf6 ; call rax
0x00000000004bdbef : add byte ptr [rax], ah ; ret
0x00000000004c808f : add byte ptr [rax], ah ; ret 0xfff8
0x00000000004c2adf : add byte ptr [rax], ah ; sal dh, cl ; jmp qword ptr [rbx]
0x00000000004c2fee : add byte ptr [rax], al ; adc ah, ch ; idiv bh ; ret 0
0x00000000004c479e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004cbe22 : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x00000000004b55ba : add byte ptr [rax], al ; adc al, 0xf5 ; call qword ptr [rax]
0x00000000004b6342 : add byte ptr [rax], al ; adc al, 0xf6 ; call qword ptr [rax]
0x00000000004b8e22 : add byte ptr [rax], al ; adc al, 9 ; add byte ptr [rax], al ; div rsp ; jmp rax
0x00000000004b7473 : add byte ptr [rax], al ; adc bh, al ; jmp qword ptr [rax]
0x00000000004c0a0e : add byte ptr [rax], al ; adc byte ptr [rax - 0xa], cl ; call qword ptr [rax]
0x00000000004b7042 : add byte ptr [rax], al ; adc byte ptr [rbx - 9], ch ; call qword ptr [rax]
0x00000000004b673a : add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], dh ; jmp qword ptr [rax]
0x00000000004b941e : add byte ptr [rax], al ; adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b6002 : add byte ptr [rax], al ; adc cl, bl ; cmc ; call qword ptr [rax]
0x00000000004b60ea : add byte ptr [rax], al ; adc dl, ah ; cmc ; jmp qword ptr [rax]
0x00000000004c4909 : add byte ptr [rax], al ; add ah, bh ; ret
0x00000000004beaee : add byte ptr [rax], al ; add ah, ch ; cmc ; jmp rsi
0x00000000004c48d9 : add byte ptr [rax], al ; add ah, cl ; ret
0x00000000004c4801 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004c5101 : add byte ptr [rax], al ; add ah, dh ; retf
0x000000000049bff1 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rbp + 0x31], al ; in al, 0xe9 ; ret
0x00000000004b8972 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rdi - 0x16], dl ; hlt ; call qword ptr [rbx]
0x00000000004b8952 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rdx + rbp*8 - 0xc], ah ; call qword ptr [rbx]
0x00000000004b9d12 : add byte ptr [rax], al ; add al, 0x18 ; add byte ptr [rax], al ; or byte ptr [rax], ch ; cmc ; jmp qword ptr [rbx]
0x00000000004ca612 : add byte ptr [rax], al ; add al, 0x21 ; add dword ptr [rax], eax ; js 0x4ca633 ; sti ; jmp qword ptr [rbx]
0x00000000004ccf12 : add byte ptr [rax], al ; add al, 0x4a ; add dword ptr [rax], eax ; sub bpl, dil ; call rdx
0x00000000004c0d12 : add byte ptr [rax], al ; add al, 0x88 ; add byte ptr [rax], al ; mov byte ptr [rdi - 0xa], cl ; call qword ptr [rbx]
0x00000000004c1512 : add byte ptr [rax], al ; add al, 0x90 ; add byte ptr [rax], al ; pop rax ; jg 0x4c151a ; jmp qword ptr [rsi]
0x00000000004b8912 : add byte ptr [rax], al ; add al, 4 ; add byte ptr [rax], al ; jle 0x4b890d ; hlt ; call qword ptr [rbx]
0x00000000004b52eb : add byte ptr [rax], al ; add al, ah ; ret
0x00000000004a086f : add byte ptr [rax], al ; add al, ch ; mov ecx, 0xe9fffce1 ; ret
0x0000000000411845 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000490836 : add byte ptr [rax], al ; add al, ch ; ret 0xf8ff
0x00000000004817fd : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000475efe : add byte ptr [rax], al ; add al, ch ; retf 0xfbd2
0x00000000004a375e : add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x00000000004a364e : add byte ptr [rax], al ; add al, ch ; retf 0xfed9
0x000000000044b44e : add byte ptr [rax], al ; add al, ch ; retf 0xffe4
0x00000000004a4c6e : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret
0x0000000000409869 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000406fc9 : add byte ptr [rax], al ; add bl, ch ; add cl, cl ; ret
0x00000000004b8b76 : add byte ptr [rax], al ; add bl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000004484ac : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000486429 : add byte ptr [rax], al ; add bl, ch ; ret 0xc031
0x0000000000475002 : add byte ptr [rax], al ; add bl, ch ; retf
0x00000000004207f9 : add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x0000000000407b8d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047d907 : add byte ptr [rax], al ; add bl, dl ; loopne 0x47d898 ; ret 0xac75
0x000000000041ba1d : add byte ptr [rax], al ; add byte ptr [rax + 0x10b], bh ; ret
0x000000000043781d : add byte ptr [rax], al ; add byte ptr [rax + 0x12], bh ; ret
0x0000000000430b09 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000420959 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d4c
0x000000000046e5a7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000040c4ed : add byte ptr [rax], al ; add byte ptr [rax + 0x2df1b8], bh ; ret
0x000000000043888d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004184a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc7f
0x000000000044f105 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042bf1d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8949
0x00000000004453ba : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc641
0x000000000046d7bd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x6349
0x0000000000444daa : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8b41
0x00000000004088f5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0xea83
0x000000000042ce40 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; shr al, cl ; push rbp ; ret 0xffff
0x000000000044e56d : add byte ptr [rax], al ; add byte ptr [rax + 0x74000478], al ; retf 0xb70f
0x000000000045762d : add byte ptr [rax], al ; add byte ptr [rax + 0x7602157f], al ; retf
0x000000000040d25f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000044f484 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004a43e9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 1], 1 ; retf 0xc148
0x000000000040ba79 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000041b5a2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xa6eb
0x000000000040daae : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xb60f
0x000000000040ba95 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000043652d : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x0000000000407b7d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; ret
0x00000000004176fd : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb6e687], al ; ret 0x4101
0x00000000004c48ad : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8551 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rsi], cl ; ret
0x00000000004c4905 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add ah, bh ; ret
0x00000000004c5075 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000004c47fd : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c476d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000004c50fd : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dh ; retf
0x00000000004c479d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004b8575 : add byte ptr [rax], al ; add byte ptr [rax - 0x3b], cl ; hlt ; call rax
0x0000000000478528 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000418a81 : add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rbx ; ret
0x0000000000492a7d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc bl, bpl ; ret 0x2e66
0x000000000041086d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x000000000045ec18 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; lodsd eax, dword ptr [rsi] ; retf
0x000000000045ebd7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; out dx, al ; retf
0x00000000004760cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rdx ; ret 0xfffb
0x000000000047e703 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfad0
0x000000000043fcd3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfe1c
0x00000000004036fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000042d7c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043d0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a1ef2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c7
0x0000000000458541 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000404548 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000046a53d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000479124 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045d8df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455ab5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x13eb
0x000000000044d748 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x7bd
0x000000000047d223 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000461b38 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000476fa6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x7d], cl ; ret 0x6638
0x000000000041a736 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x41] ; jmp 0x41a70c
0x00000000004489b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbp - 0x7d], cl ; ret
0x000000000041180b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000414959 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000042fde5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000004572cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000408b8a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000441593 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000045a7f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004840bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000042e70d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000048607d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042e555 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000046bb9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000042e835 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000461a80 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf370
0x000000000045dde2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000004b5a1a : add byte ptr [rax], al ; add byte ptr [rax - 0xb], bl ; call rax
0x000000000040a615 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040cb1d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004c479c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004b52e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x00000000004a364c : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0xfed9
0x0000000000407b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043888b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a6efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042bf1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8949
0x000000000046effb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043d0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a1ef0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c7
0x000000000046a53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000411809 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004572cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000004840bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000046c83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000048607b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000431a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004a364a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0xfed9
0x0000000000409b94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004007b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004aef79 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000409b95 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004aef7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x000000000040c6d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041207b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000041773b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x7b76
0x000000000041adcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xab73
0x000000000047b63b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000004a3952 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(0) ; ret 0xfed6
0x000000000042064c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x18], 1 ; ret
0x00000000004c48ac : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040578e : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401a46
0x000000000040586f : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401b26
0x0000000000416ab9 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x412d56
0x0000000000416ab8 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x412d57
0x0000000000416ab7 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x412d58
0x000000000047a138 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4363d6
0x0000000000415f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi + 0x24], esi ; jae 0x415f99 ; ret
0x000000000047ad18 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x47ad26 ; ret
0x00000000004965ea : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x496600 ; xor eax, eax ; ret
0x0000000000416a31 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rbx + 0x43], 0 ; pop rbx ; ret
0x000000000042b809 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 1], 0 ; ret
0x0000000000407d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + r9], 0 ; ret
0x000000000041ba1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10b ; ret
0x000000000043781c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x12 ; ret
0x000000000040c4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x2df1b8 ; ret
0x0000000000428164 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000040c4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000043652c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 7 ; ret
0x0000000000407b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; ret
0x000000000040e9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000040909c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000040983c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; ret
0x000000000040984c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000040c55c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x60] ; ret
0x000000000040c56c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000042fc1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x000000000040b6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000004147b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000040c50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000040c54c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x000000000042f8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000404f79 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x401a89
0x00000000004a1819 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x40e259
0x0000000000412a71 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000004047cc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040c6d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041207c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c4904 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000000000407b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000004a95ac : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004aef7d : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004c47fc : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c476c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000042fbdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000407b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c50fe : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; retf
0x00000000004b8552 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], cl ; ret
0x0000000000414d69 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x38 ; ret
0x000000000040e220 : add byte ptr [rax], al ; add byte ptr [rbp + 0x20], dh ; add rsp, 0x18 ; ret
0x000000000040d3c6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x22], dh ; add rsp, 0x18 ; ret
0x0000000000418cbf : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x18 ; ret
0x0000000000413e7d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000004178eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x35], dh ; add rsp, 0x18 ; ret
0x000000000041a11c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsi ; ret
0x0000000000408813 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000412a72 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004145fc : add byte ptr [rax], al ; add byte ptr [rbp + 0x55], dh ; add rsp, 0x18 ; ret
0x0000000000429649 : add byte ptr [rax], al ; add byte ptr [rbp + 0x5b0874d2], al ; ret
0x000000000044d85c : add byte ptr [rax], al ; add byte ptr [rbp + 0x5b1474d2], al ; ret
0x00000000004088ad : add byte ptr [rax], al ; add byte ptr [rbp + 0x5e], dh ; add rsp, 0x28 ; ret
0x00000000004179e4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x18 ; ret
0x000000000043787b : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; retf 0x9e9
0x000000000040d4e5 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; ret 0xf139
0x0000000000409423 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000421a07 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x000000000041b185 : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; ret
0x000000000043651e : add byte ptr [rax], al ; add byte ptr [rbp - 0x11], dh ; mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x0000000000407aed : add byte ptr [rax], al ; add byte ptr [rbp - 0x1f7cf8b9], cl ; clc ; ret
0x000000000048d792 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; xor al, 0x24 ; jmp 0x48a201
0x0000000000415cfd : add byte ptr [rax], al ; add byte ptr [rbp - 0x76eb8b37], al ; retf 0x25e9
0x0000000000426359 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf
0x00000000004a1add : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x8e ; ret
0x000000000041289e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000042d394 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb700aa], cl ; ret 0x4801
0x000000000044ac23 : add byte ptr [rax], al ; add byte ptr [rbp - 0xce98a40], al ; ret
0x000000000040b40d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004a4f4a : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f01f8], al ; ret 0x4389
0x000000000047aa6b : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f03e0], al ; ret 0x4388
0x0000000000489672 : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f07e0], al ; ret 0x4388
0x0000000000486bb3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f08f8], al ; ret 0x8389
0x0000000000408686 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040c6d9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040ddf6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f677 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf], bl ; ret 0x90c3
0x00000000004530c0 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0xc889
0x00000000004c8089 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*8], bh ; add byte ptr [rax], ah ; ret 0xfff8
0x0000000000450631 : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef7bf], cl ; ret
0x00000000004345f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0dbfc], cl ; retf 2
0x000000000040d79d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb67f20], al ; ret 0x8901
0x000000000047de0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb6fe18], al ; ret
0x000000000042746d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7df40], al ; ret 0x4801
0x000000000043a355 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000417b2d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret
0x000000000042bb55 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3920
0x0000000000420b42 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3920
0x000000000040fcea : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x6602
0x000000000041207d : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000041773d : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x7b76
0x000000000041adcd : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0xab73
0x000000000044f326 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040be2e : add byte ptr [rax], al ; add byte ptr [rcx + 0x6348c3d0], cl ; ret 0x8d4c
0x0000000000434919 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret
0x000000000040d770 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; retf 0x4c8b
0x000000000040d8f7 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; retf 0x67e9
0x000000000048e63b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x43b0c8
0x0000000000411edb : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000044501e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x401ad8
0x000000000040b781 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x76b3c08c], al ; retf 0x10eb
0x0000000000474fc1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x17c7dbbc], cl ; ret
0x00000000004802f9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x17dfdbbc], cl ; retf
0x000000000046b977 : add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; call rax
0x0000000000470d8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; or byte ptr [r8 + 0x63], r9b ; retf 0xd001
0x0000000000440502 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000000000485892 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004839e9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xe0d3
0x000000000047b63d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8348
0x000000000040b8fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x8301
0x0000000000464e9c : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx]
0x00000000004b6572 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], cl ; jmp rax
0x000000000045857e : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000049b34d : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c986 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000004261eb : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x6348
0x00000000004162cc : add byte ptr [rax], al ; add byte ptr [rcx], al ; retf
0x0000000000415f7d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ja 0x415faf ; jae 0x415f98 ; ret
0x0000000000401fde : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1275
0x0000000000402fd2 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x77e
0x0000000000453343 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x000000000041b1da : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol bl, 1 ; xor eax, eax ; ret
0x00000000004a3954 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(0) ; ret 0xfed6
0x0000000000444364 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; jmp 0x44433c
0x000000000040f9b3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040de1c : add byte ptr [rax], al ; add byte ptr [rcx], dh ; retf 0xd031
0x00000000004253df : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xb ; pop rbx ; ret
0x00000000004765e2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xe4 ; retf
0x000000000040f669 : add byte ptr [rax], al ; add byte ptr [rdi + 0x12], bh ; pop rbx ; ret
0x00000000004672dd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xf43
0x00000000004bdc89 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], bh ; add al, al ; ret
0x00000000004b7672 : add byte ptr [rax], al ; add byte ptr [rdi - 8], ah ; call rax
0x00000000004c798e : add byte ptr [rax], al ; add byte ptr [rdi - 8], dh ; call qword ptr [rdx]
0x0000000000439d6a : add byte ptr [rax], al ; add byte ptr [rdi], 0xf ; ret 0x4389
0x000000000042fbed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x57 ; or dh, dh ; ret 0x7402
0x000000000040f30d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89d189c0 ; ret 0xe1c1
0x0000000000439f3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x23e9
0x00000000004a7d89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x000000000044ffa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4588
0x000000000046ae62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000040f57e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8841
0x0000000000425fac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8b48
0x000000000040f6ba : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x000000000044b693 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x5389
0x0000000000472c37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test eax, esp ; retf 0xffff
0x000000000048772b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5ae8
0x00000000004a1fbc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8545
0x00000000004163be : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b7472 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; clc ; jmp qword ptr [rax]
0x0000000000475fec : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; ret
0x00000000004bdb71 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2], ah ; add byte ptr [rax], bh ; ret 0xfff5
0x00000000004b938e : add byte ptr [rax], al ; add byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b8555 : add byte ptr [rax], al ; add byte ptr [rsi], cl ; ret
0x00000000004b8572 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x3b], cl ; hlt ; call rax
0x000000000042ec90 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000477208 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd0
0x00000000004a401e : add byte ptr [rax], al ; add cl, ch ; ret 0xffe1
0x0000000000498342 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000004247ca : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000047daa2 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004323ce : add byte ptr [rax], al ; add cl, ch ; retf 0xfd77
0x000000000048f62e : add byte ptr [rax], al ; add cl, ch ; retf 0xffca
0x00000000004618be : add byte ptr [rax], al ; add cl, ch ; retf 0xffda
0x0000000000438089 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x0000000000420c8e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000405913 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000044e32d : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000042b80a : add byte ptr [rax], al ; add dh, al ; add dword ptr [r8], r8d ; ret
0x0000000000472c52 : add byte ptr [rax], al ; add dh, al ; push r14 ; add cl, ch ; ret 0xffca
0x000000000041ccfd : add byte ptr [rax], al ; add dh, al ; sbb al, 1 ; xor eax, eax ; ret
0x0000000000411548 : add byte ptr [rax], al ; add dh, al ; sub byte ptr [r9], r8b ; ret
0x00000000004b6172 : add byte ptr [rax], al ; add dh, ch ; cmc ; jmp qword ptr [rax]
0x0000000000423df7 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000045b385 : add byte ptr [rax], al ; add dh, dh ; ret 0x4120
0x000000000041789e : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x0000000000439c66 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000045b23e : add byte ptr [rax], al ; add dh, dh ; ret 0xf05
0x000000000040c784 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048510b : add byte ptr [rax], al ; add dword ptr [rbp + 0x39440150], ecx ; ret 0x8941
0x00000000004135e6 : add byte ptr [rax], al ; add dword ptr [rdi + 0x150], 1 ; ret
0x000000000042064e : add byte ptr [rax], al ; add dword ptr [rdx + 0x18], 1 ; ret
0x0000000000407c02 : add byte ptr [rax], al ; add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004b8a72 : add byte ptr [rax], al ; add eax, 0xea800000 ; hlt ; call qword ptr [rbx]
0x00000000004b8a52 : add byte ptr [rax], al ; add eax, 0xea8d0000 ; hlt ; call qword ptr [rbx]
0x000000000040bfff : add byte ptr [rax], al ; add eax, 1 ; ret
0x00000000004b8752 : add byte ptr [rax], al ; add r8b, byte ptr [rax] ; add byte ptr [rsi], bl ; loope 0x4b8758 ; jmp qword ptr [rcx]
0x00000000004310ea : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004342a2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040f485 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000426215 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000435708 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040fd22 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000004336e2 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000004108fe : add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000000000040cef6 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004018b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b610a : add byte ptr [rax], al ; and ah, ah ; cmc ; jmp qword ptr [rax]
0x00000000004c48ae : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf432 : add byte ptr [rax], al ; and al, 0x6f ; add byte ptr [rax], al ; pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x00000000004c3e32 : add byte ptr [rax], al ; and al, 0xb9 ; add byte ptr [rax], al ; call 0xffffffffd54c3565
0x00000000004b8832 : add byte ptr [rax], al ; and al, 3 ; add byte ptr [rax], al ; or ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b8932 : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; jno 0x4b892d ; hlt ; call qword ptr [rbx]
0x00000000004b8b32 : add byte ptr [rax], al ; and al, 6 ; add byte ptr [rax], al ; sbb ch, bl ; hlt ; call qword ptr [rbx]
0x00000000004731a8 : add byte ptr [rax], al ; and byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004bc09e : add byte ptr [rax], al ; and byte ptr [rax - 0xb], bh ; jmp rcx
0x00000000004c6e6e : add byte ptr [rax], al ; and byte ptr [rax], 0xf8 ; jmp rsi
0x00000000004b62b2 : add byte ptr [rax], al ; and byte ptr [rsi + rsi*8], cl ; call rax
0x00000000004bbd9e : add byte ptr [rax], al ; and byte ptr [rsi - 0xb], dh ; call qword ptr [rax]
0x00000000004b5b3a : add byte ptr [rax], al ; and byte ptr [rsi - 0xb], dh ; jmp rax
0x00000000004b944e : add byte ptr [rax], al ; and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004c2e5e : add byte ptr [rax], al ; and ch, 0xf6 ; call qword ptr [rbx]
0x00000000004c808e : add byte ptr [rax], al ; and dl, al ; clc ; jmp qword ptr [rcx]
0x00000000004b89f6 : add byte ptr [rax], al ; and ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004bf896 : add byte ptr [rax], al ; call 0x124beea7
0x0000000000405790 : add byte ptr [rax], al ; call 0x401a44
0x0000000000405871 : add byte ptr [rax], al ; call 0x401b24
0x0000000000416abb : add byte ptr [rax], al ; call 0x412d54
0x000000000048f5c0 : add byte ptr [rax], al ; call 0x42b7d4
0x000000000047a13a : add byte ptr [rax], al ; call 0x4363d4
0x00000000004a1f9b : add byte ptr [rax], al ; call 0x46ea34
0x00000000004c3e36 : add byte ptr [rax], al ; call 0xffffffffd54c3561
0x0000000000438cc4 : add byte ptr [rax], al ; call r10
0x0000000000411cae : add byte ptr [rax], al ; call rax
0x000000000046fbfe : add byte ptr [rax], al ; call rcx
0x0000000000418a82 : add byte ptr [rax], al ; cdqe ; pop rbx ; ret
0x00000000004b7673 : add byte ptr [rax], al ; clc ; call rax
0x00000000004bbf0a : add byte ptr [rax], al ; cld ; cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbf11 ; jmp qword ptr [rax]
0x00000000004c490a : add byte ptr [rax], al ; cld ; ret
0x000000000040f6bb : add byte ptr [rax], al ; cmove eax, edx ; pop rbx ; ret
0x0000000000407c9e : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000004ba64a : add byte ptr [rax], al ; cmp al, 0x21 ; add byte ptr [rax], al ; jo 0x4ba697 ; cmc ; call qword ptr [rcx]
0x00000000004bbf4a : add byte ptr [rax], al ; cmp al, 0x3a ; add byte ptr [rax], al ; loopne 0x4bbfd1 ; cmc ; jmp qword ptr [rax]
0x00000000004bf54a : add byte ptr [rax], al ; cmp al, 0x70 ; add byte ptr [rax], al ; sar ah, 1 ; cmc ; call rsi
0x00000000004b944a : add byte ptr [rax], al ; cmp al, 0xf ; add byte ptr [rax], al ; and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b57b2 : add byte ptr [rax], al ; cmp bpl, sil ; call rax
0x00000000004b57ca : add byte ptr [rax], al ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rax]
0x00000000004c78d6 : add byte ptr [rax], al ; cmp byte ptr [rbp - 8], dh ; jmp qword ptr [rdx]
0x000000000042dd2e : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x24], 0 ; je 0x42dd48 ; ret
0x00000000004b55aa : add byte ptr [rax], al ; cmp byte ptr [rdi], cl ; cmc ; call rax
0x0000000000418fa1 : add byte ptr [rax], al ; cmp byte ptr [rdx + rsi], 0 ; jne 0x418fb9 ; ret
0x00000000004199ce : add byte ptr [rax], al ; cmp byte ptr [rsi], 0x98 ; je 0x4199e9 ; xor eax, eax ; ret
0x00000000004b6222 : add byte ptr [rax], al ; cmp ch, 0xf5 ; jmp qword ptr [rax]
0x00000000004c29b6 : add byte ptr [rax], al ; cmp cl, dl ; idiv bh ; ret 0
0x0000000000418b61 : add byte ptr [rax], al ; cmp dl, 4 ; je 0x418b81 ; xor eax, eax ; ret
0x0000000000415f7e : add byte ptr [rax], al ; cmp dword ptr [rdi + 0x24], esi ; jae 0x415f97 ; ret
0x0000000000409673 : add byte ptr [rax], al ; cmp ecx, 4 ; cmovae eax, ecx ; ret
0x00000000004b54c2 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sal ah, cl ; call qword ptr [rax]
0x00000000004bbe96 : add byte ptr [rax], al ; cwde ; jbe 0x4bbe95 ; call qword ptr [rax]
0x00000000004b8c86 : add byte ptr [rax], al ; cwde ; out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004c7e46 : add byte ptr [rax], al ; cwde ; xchg eax, esi ; clc ; call rbx
0x00000000004b8e26 : add byte ptr [rax], al ; div rsp ; jmp rax
0x00000000004c3f06 : add byte ptr [rax], al ; enter -0x8dd, -1 ; ret 0
0x00000000004cd8ea : add byte ptr [rax], al ; fcom qword ptr [rbx + 1] ; add al, dl ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x00000000004bdbea : add byte ptr [rax], al ; fcom qword ptr [rsi] ; add byte ptr [rax], ah ; ret
0x00000000004beec6 : add byte ptr [rax], al ; fdiv st(0) ; cmc ; call qword ptr [rax]
0x00000000004beaea : add byte ptr [rax], al ; fsub qword ptr [rbp] ; add byte ptr [rax], al ; in al, dx ; cmc ; jmp rsi
0x00000000004bb646 : add byte ptr [rax], al ; fsubr dword ptr [rax - 0xb] ; jmp rsp
0x00000000004cc902 : add byte ptr [rax], al ; hlt ; add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004bab02 : add byte ptr [rax], al ; hlt ; and eax, 0x4d180000 ; cmc ; call rcx
0x00000000004b553a : add byte ptr [rax], al ; hlt ; hlt ; call qword ptr [rax]
0x00000000004bf702 : add byte ptr [rax], al ; hlt ; jno 0x4bf710 ; add byte ptr [rax], cl ; add esi, esi ; call qword ptr [rdi]
0x00000000004c4802 : add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c5102 : add byte ptr [rax], al ; hlt ; retf
0x00000000004cb102 : add byte ptr [rax], al ; hlt ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x4e], bl ; sti ; call rdi
0x00000000004bdbcf : add byte ptr [rax], al ; imul ecx, dword ptr [rsi], 0x6e028310 ; ret
0x00000000004bc147 : add byte ptr [rax], al ; imul ecx, dword ptr [rsi], 0x75028310 ; ret
0x00000000004c9cf2 : add byte ptr [rax], al ; in al, 0x17 ; add dword ptr [rax], eax ; cwde ; cli ; call rsp
0x00000000004be4f2 : add byte ptr [rax], al ; in al, 0x5f ; add byte ptr [rax], al ; test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x00000000004c69f2 : add byte ptr [rax], al ; in al, 0xe4 ; add byte ptr [rax], al ; sbb byte ptr [rax + rdi*8], al ; call qword ptr [rdx]
0x00000000004b8896 : add byte ptr [rax], al ; in al, 0xe9 ; hlt ; call qword ptr [rbx]
0x00000000004b87f2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; shr ecx, 1 ; hlt ; call qword ptr [rbx]
0x00000000004b88f2 : add byte ptr [rax], al ; in al, 3 ; add byte ptr [rax], al ; mov ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b89f2 : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; and ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b8af2 : add byte ptr [rax], al ; in al, 5 ; add byte ptr [rax], al ; xor al, 0xeb ; hlt ; call qword ptr [rbx]
0x00000000004ccbfa : add byte ptr [rax], al ; in al, dx ; add dword ptr [rax], r8d ; loopne 0x4ccc0e ; std ; call rdi
0x00000000004beaef : add byte ptr [rax], al ; in al, dx ; cmc ; jmp rsi
0x00000000004b927a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, 0x4300000 ; cmc ; jmp qword ptr [rbx]
0x00000000004c487a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004c507a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000004c4f7a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b547a : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x00000000004c798f : add byte ptr [rax], al ; ja 0x4c798f ; call qword ptr [rdx]
0x000000000040f60c : add byte ptr [rax], al ; je 0x40f61d ; movzx eax, byte ptr [rdi + 1] ; ret
0x000000000043239e : add byte ptr [rax], al ; je 0x4323ac ; ret
0x000000000045a588 : add byte ptr [rax], al ; je 0x45a595 ; ret
0x000000000047ad1a : add byte ptr [rax], al ; je 0x47ad24 ; ret
0x00000000004965ec : add byte ptr [rax], al ; je 0x4965fe ; xor eax, eax ; ret
0x00000000004a5565 : add byte ptr [rax], al ; je 0x4a5576 ; xor eax, eax ; ret
0x00000000004b8c82 : add byte ptr [rax], al ; je 0x4b8c96 ; add byte ptr [rax], al ; cwde ; out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004c6b82 : add byte ptr [rax], al ; je 0x4c6b75 ; add byte ptr [rax], al ; mov byte ptr [rdx], dl ; clc ; call rsi
0x00000000004c7682 : add byte ptr [rax], al ; je 0x4c7680 ; add byte ptr [rax], al ; pop rax ; clc ; call rcx
0x00000000004cc782 : add byte ptr [rax], al ; je 0x4cc7d1 ; add dword ptr [rax], eax ; call 0x244cc46c
0x000000000040f66a : add byte ptr [rax], al ; jg 0x40f685 ; pop rbx ; ret
0x00000000004b556a : add byte ptr [rax], al ; jg 0x4b5572 ; hlt ; call rax
0x00000000004c045a : add byte ptr [rax], al ; jg 0x4c0468 ; add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rdi]
0x00000000004b563a : add byte ptr [rax], al ; jl 0x4b5662 ; cmc ; call qword ptr [rax]
0x00000000004b938a : add byte ptr [rax], al ; jl 0x4b93a5 ; add byte ptr [rax], al ; add byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004bcd8a : add byte ptr [rax], al ; jl 0x4bcddf ; add byte ptr [rax], al ; loopne 0x4bcd34 ; cmc ; call qword ptr [rbx]
0x00000000004bdc8a : add byte ptr [rax], al ; jl 0x4bdcee ; add byte ptr [rax], al ; rol bl, 0xf5 ; jmp rdx
0x00000000004c088a : add byte ptr [rax], al ; jl 0x4c081a ; add byte ptr [rax], al ; xor byte ptr [rsi + rsi*8], bh ; call qword ptr [rsi]
0x00000000004c5e8a : add byte ptr [rax], al ; jl 0x4c5e6e ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000004c798a : add byte ptr [rax], al ; jl 0x4c798b ; add byte ptr [rax], al ; add byte ptr [rdi - 8], dh ; call qword ptr [rdx]
0x00000000004c808a : add byte ptr [rax], al ; jl 0x4c8092 ; add byte ptr [rax], al ; and dl, al ; clc ; jmp qword ptr [rcx]
0x00000000004cd08a : add byte ptr [rax], al ; jl 0x4cd0e2 ; add dword ptr [rax], eax ; xor byte ptr [rsi], 0xfd ; call qword ptr [rax]
0x00000000004b8916 : add byte ptr [rax], al ; jle 0x4b8909 ; hlt ; call qword ptr [rbx]
0x000000000042bad2 : add byte ptr [rax], al ; jmp 0x42baa4
0x0000000000435a7a : add byte ptr [rax], al ; jmp 0x435a44
0x00000000004484ad : add byte ptr [rax], al ; jmp 0x448477
0x0000000000475003 : add byte ptr [rax], al ; jmp 0x474fd5
0x000000000048d7a9 : add byte ptr [rax], al ; jmp 0x48a1fc
0x000000000048e711 : add byte ptr [rax], al ; jmp 0x48b1f4
0x00000000004a47dc : add byte ptr [rax], al ; jmp 0x4a47ae
0x00000000004b56aa : add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000004088ae : add byte ptr [rax], al ; jne 0x408918 ; add rsp, 0x28 ; ret
0x0000000000409424 : add byte ptr [rax], al ; jne 0x409435 ; add rsp, 0x18 ; ret
0x0000000000409d50 : add byte ptr [rax], al ; jne 0x409dc9 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040d3c7 : add byte ptr [rax], al ; jne 0x40d3f5 ; add rsp, 0x18 ; ret
0x000000000040d973 : add byte ptr [rax], al ; jne 0x40d9ae ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dae6 : add byte ptr [rax], al ; jne 0x40db0e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040e221 : add byte ptr [rax], al ; jne 0x40e24d ; add rsp, 0x18 ; ret
0x000000000040e9e7 : add byte ptr [rax], al ; jne 0x40e9fa ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041177a : add byte ptr [rax], al ; jne 0x4117b1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000412204 : add byte ptr [rax], al ; jne 0x41221d ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004145fd : add byte ptr [rax], al ; jne 0x41465e ; add rsp, 0x18 ; ret
0x0000000000414c8f : add byte ptr [rax], al ; jne 0x414cf6 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000414d6a : add byte ptr [rax], al ; jne 0x414d87 ; add rsp, 0x38 ; ret
0x00000000004178ec : add byte ptr [rax], al ; jne 0x41792d ; add rsp, 0x18 ; ret
0x00000000004179e5 : add byte ptr [rax], al ; jne 0x4179fe ; add rsp, 0x18 ; ret
0x0000000000418c2e : add byte ptr [rax], al ; jne 0x418c85 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000418cc0 : add byte ptr [rax], al ; jne 0x418cf3 ; add rsp, 0x18 ; ret
0x0000000000418d20 : add byte ptr [rax], al ; jne 0x418d53 ; add rsp, 0x18 ; ret
0x000000000041b186 : add byte ptr [rax], al ; jne 0x41b194 ; ret
0x0000000000421a08 : add byte ptr [rax], al ; jne 0x421a19 ; add rsp, 0x48 ; ret
0x0000000000421a78 : add byte ptr [rax], al ; jne 0x421a89 ; add rsp, 0x48 ; ret
0x000000000042f8ba : add byte ptr [rax], al ; jne 0x42f8cd ; add rsp, 0x30 ; pop rbx ; ret
0x000000000043138f : add byte ptr [rax], al ; jne 0x4313d8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000434158 : add byte ptr [rax], al ; jne 0x4341df ; add rsp, 0x10 ; pop rbx ; ret
0x000000000043651f : add byte ptr [rax], al ; jne 0x43651a ; mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x0000000000455a00 : add byte ptr [rax], al ; jne 0x455a4c ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000456291 : add byte ptr [rax], al ; jne 0x4562cf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000499a69 : add byte ptr [rax], al ; jne 0x499a7c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000049ffcc : add byte ptr [rax], al ; jne 0x4a0018 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a6be1 : add byte ptr [rax], al ; jne 0x4a6c1f ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004b8936 : add byte ptr [rax], al ; jno 0x4b8929 ; hlt ; call qword ptr [rbx]
0x00000000004b573a : add byte ptr [rax], al ; jo 0x4b576a ; cmc ; call rax
0x00000000004b581a : add byte ptr [rax], al ; jo 0x4b585e ; cmc ; call qword ptr [rax]
0x00000000004b5be2 : add byte ptr [rax], al ; jo 0x4b5b70 ; cmc ; call qword ptr [rax]
0x00000000004b5f0a : add byte ptr [rax], al ; jo 0x4b5ed6 ; cmc ; call qword ptr [rax]
0x00000000004b7562 : add byte ptr [rax], al ; jo 0x4b759a ; clc ; jmp rax
0x00000000004b7561 : add byte ptr [rax], al ; jo 0x4b759b ; clc ; jmp rax
0x00000000004b7602 : add byte ptr [rax], al ; jo 0x4b765a ; clc ; call qword ptr [rax]
0x00000000004ba64e : add byte ptr [rax], al ; jo 0x4ba693 ; cmc ; call qword ptr [rcx]
0x00000000004bd39e : add byte ptr [rax], al ; jo 0x4bd34f ; cmc ; jmp qword ptr [rdi]
0x00000000004bff52 : add byte ptr [rax], al ; jp 0x4bff60 ; add byte ptr [rax], ch ; adc esi, esi ; call rax
0x00000000004b7332 : add byte ptr [rax], al ; jrcxz 0x4b7333 ; jmp qword ptr [rax]
0x00000000004c5be6 : add byte ptr [rax], al ; js 0x4c5bb4 ; idiv edi ; retf
0x0000000000407aee : add byte ptr [rax], al ; lea eax, [rdi + 7] ; and eax, 0xfffffff8 ; ret
0x00000000004146c6 : add byte ptr [rax], al ; lea eax, [rsi + 1] ; ret
0x0000000000408cee : add byte ptr [rax], al ; lea rax, [rip + 0x2c6e49] ; ret
0x0000000000408cde : add byte ptr [rax], al ; lea rax, [rip + 0x2c6ef9] ; ret
0x0000000000436726 : add byte ptr [rax], al ; lea rax, [rip + 0x73638] ; ret
0x0000000000421346 : add byte ptr [rax], al ; lea rax, [rip + 0x8d2b1] ; ret
0x000000000041a58e : add byte ptr [rax], al ; lea rax, [rip + 0x8f432] ; ret
0x000000000040c4de : add byte ptr [rax], al ; lea rax, [rip + 0xa4ee1] ; ret
0x000000000040c4ce : add byte ptr [rax], al ; lea rax, [rip + 0xa4ee9] ; ret
0x0000000000405914 : add byte ptr [rax], al ; leave ; ret
0x00000000004cd8ba : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; loopne 0x4cd879 ; std ; call qword ptr [rax]
0x00000000004c47ba : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000004c4fba : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 0
0x00000000004b7d53 : add byte ptr [rax], al ; loop 0x4b7d55 ; call rax
0x00000000004b5a6a : add byte ptr [rax], al ; loopne 0x4b5ad2 ; cmc ; jmp qword ptr [rax]
0x00000000004b5ac2 : add byte ptr [rax], al ; loopne 0x4b5b3b ; cmc ; call rax
0x00000000004b5ac1 : add byte ptr [rax], al ; loopne 0x4b5b3c ; cmc ; call rax
0x00000000004b6092 : add byte ptr [rax], al ; loopne 0x4b6091 ; call rax
0x00000000004b6122 : add byte ptr [rax], al ; loopne 0x4b6111 ; cmc ; jmp qword ptr [rax]
0x00000000004b6192 : add byte ptr [rax], al ; loopne 0x4b618b ; cmc ; call qword ptr [rax]
0x00000000004bbf4e : add byte ptr [rax], al ; loopne 0x4bbfcd ; cmc ; jmp qword ptr [rax]
0x00000000004bcd8e : add byte ptr [rax], al ; loopne 0x4bcd30 ; cmc ; call qword ptr [rbx]
0x00000000004bcd8d : add byte ptr [rax], al ; loopne 0x4bcd31 ; cmc ; call qword ptr [rbx]
0x00000000004beeae : add byte ptr [rax], al ; loopne 0x4beea7 ; cmc ; call qword ptr [rax]
0x00000000004c324e : add byte ptr [rax], al ; loopne 0x4c3248 ; idiv bh ; ret
0x00000000004c71de : add byte ptr [rax], al ; loopne 0x4c721e ; clc ; jmp qword ptr [rbx]
0x00000000004beec2 : add byte ptr [rax], al ; mov ah, 0x69 ; add byte ptr [rax], al ; fdiv st(0) ; cmc ; call qword ptr [rax]
0x00000000004c72c2 : add byte ptr [rax], al ; mov ah, 0xed ; add byte ptr [rax], al ; sub byte ptr [rax + rdi*8], bh ; call rdi
0x00000000004c05ae : add byte ptr [rax], al ; mov al, 0x24 ; idiv bh ; ret
0x00000000004b56fa : add byte ptr [rax], al ; mov al, 0x26 ; cmc ; call qword ptr [rax]
0x00000000004b754a : add byte ptr [rax], al ; mov al, 0x2d ; clc ; call qword ptr [rax]
0x00000000004b596a : add byte ptr [rax], al ; mov al, 0x48 ; cmc ; jmp qword ptr [rax]
0x00000000004b59ca : add byte ptr [rax], al ; mov al, 0x4f ; cmc ; jmp rax
0x00000000004b5a5a : add byte ptr [rax], al ; mov al, 0x5e ; cmc ; call rax
0x00000000004b6ff2 : add byte ptr [rax], al ; mov al, 0x64 ; idiv edi ; nop ; retf 0
0x00000000004bbbae : add byte ptr [rax], al ; mov al, 0x72 ; cmc ; call qword ptr [rdx]
0x00000000004b60da : add byte ptr [rax], al ; mov al, 0xe1 ; cmc ; jmp rax
0x000000000041923e : add byte ptr [rax], al ; mov byte ptr [rax + 6], 1 ; ret
0x000000000044e32e : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000416a33 : add byte ptr [rax], al ; mov byte ptr [rbx + 0x43], 0 ; pop rbx ; ret
0x0000000000472c53 : add byte ptr [rax], al ; mov byte ptr [rbx + 0x56], 0 ; jmp 0x46f728
0x000000000042058b : add byte ptr [rax], al ; mov byte ptr [rbx], 0xa0 ; pop rbx ; ret
0x000000000041ccfe : add byte ptr [rax], al ; mov byte ptr [rdi + 0x1c], 1 ; xor eax, eax ; ret
0x0000000000411549 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000042b80b : add byte ptr [rax], al ; mov byte ptr [rdi + 1], 0 ; ret
0x0000000000407d0e : add byte ptr [rax], al ; mov byte ptr [rdi + r9], 0 ; ret
0x00000000004c0d16 : add byte ptr [rax], al ; mov byte ptr [rdi - 0xa], cl ; call qword ptr [rbx]
0x00000000004b9566 : add byte ptr [rax], al ; mov byte ptr [rdi], al ; cmc ; call qword ptr [rbx]
0x00000000004c6b86 : add byte ptr [rax], al ; mov byte ptr [rdx], dl ; clc ; call rsi
0x000000000040d04e : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; mov eax, 2 ; ret
0x000000000040d03e : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; mov eax, 3 ; ret
0x000000000040d05e : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; mov eax, 4 ; ret
0x000000000040bcca : add byte ptr [rax], al ; mov dword ptr [rsi], edx ; ret
0x000000000041ba1e : add byte ptr [rax], al ; mov eax, 0x10b ; ret
0x000000000043781e : add byte ptr [rax], al ; mov eax, 0x12 ; ret
0x000000000040c4ee : add byte ptr [rax], al ; mov eax, 0x2df1b8 ; ret
0x000000000040a616 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040cb1e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000407dae : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000041b1d6 : add byte ptr [rax], al ; mov eax, 1 ; sub eax, edx ; ret
0x000000000040ba96 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004364ae : add byte ptr [rax], al ; mov eax, 7 ; ret
0x0000000000407b7e : add byte ptr [rax], al ; mov eax, 8 ; ret
0x000000000040e9fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000040909e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000040983e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; ret
0x000000000040984e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000040c55e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x60] ; ret
0x000000000040c56e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000040dcce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x88] ; ret
0x000000000042fc1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x000000000044f327 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040273f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000040be2f : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000040b6de : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000004b88f6 : add byte ptr [rax], al ; mov ebp, edx ; hlt ; call qword ptr [rbx]
0x000000000040574b : add byte ptr [rax], al ; mov edi, eax ; call 0x401a36
0x000000000048f5bb : add byte ptr [rax], al ; mov esi, 0x34 ; call 0x42b7d9
0x00000000004bfeca : add byte ptr [rax], al ; mov esp, 0xd0000079 ; adc dh, dh ; jmp qword ptr [rcx]
0x00000000004c17ca : add byte ptr [rax], al ; mov esp, 0xe0000092 ; mov dh, dh ; jmp qword ptr [rdi]
0x00000000004b5492 : add byte ptr [rax], al ; mov esp, cs ; hlt ; dec eax ; retf
0x0000000000438e35 : add byte ptr [rax], al ; mov qword ptr [rcx], rsi ; ret
0x00000000004147be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004147b2 : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000004210c1 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; mov word ptr [rdi + 8], ax ; ret
0x000000000040dce5 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000447096 : add byte ptr [rax], al ; mov qword ptr [rsp + 8], rdi ; call 0x423339
0x000000000046b978 : add byte ptr [rax], al ; mov r13d, 0x213 ; call rax
0x00000000004a47d6 : add byte ptr [rax], al ; mov r13d, 7 ; jmp 0x4a47b4
0x000000000048d793 : add byte ptr [rax], al ; mov r14d, dword ptr [r12] ; jmp 0x48a200
0x000000000041675b : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x0000000000409a1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0xc] ; ret
0x000000000040c50e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000040c54e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000004099ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x000000000040291c : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e6ee : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000044509b : add byte ptr [rax], al ; mov rdi, qword ptr [rax] ; call 0x401ad7
0x00000000004238aa : add byte ptr [rax], al ; mov rdi, qword ptr [rip + 0x2acbc5] ; call rax
0x000000000048e63c : add byte ptr [rax], al ; mov rdi, r13 ; call 0x43b0c7
0x0000000000411edc : add byte ptr [rax], al ; mov rdi, r13 ; call r12
0x000000000044501f : add byte ptr [rax], al ; mov rdi, r14 ; call 0x401ad7
0x00000000004787f0 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x455217
0x0000000000404f7b : add byte ptr [rax], al ; mov rdi, rax ; call 0x401a87
0x00000000004a181b : add byte ptr [rax], al ; mov rdi, rbx ; call 0x40e257
0x00000000004760cc : add byte ptr [rax], al ; mov rdi, rbx ; call 0x432337
0x00000000004422c1 : add byte ptr [rax], al ; mov rsi, qword ptr [r12 + 0x10] ; call r14
0x000000000040505a : add byte ptr [rax], al ; mov rsi, rcx ; mov edi, eax ; call 0x401ab9
0x00000000004c229a : add byte ptr [rax], al ; mov word ptr [rbp - 0xd00000], ds ; call qword ptr [rcx]
0x0000000000429e1f : add byte ptr [rax], al ; mov word ptr [rdi + 8], ax ; pop rbx ; ret
0x000000000042121e : add byte ptr [rax], al ; mov word ptr [rdi + 8], ax ; ret
0x000000000042146e : add byte ptr [rax], al ; mov word ptr [rdi + 8], dx ; ret
0x0000000000410621 : add byte ptr [rax], al ; mov word ptr [rdx + 8], ax ; xor eax, eax ; ret
0x00000000004bd39a : add byte ptr [rax], al ; mov word ptr [rsi], cs ; add byte ptr [rax - 0x58], dh ; cmc ; jmp qword ptr [rdi]
0x00000000004b8ab2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb1f0000 ; hlt ; call qword ptr [rbx]
0x00000000004bbdb2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add byte ptr [rax], bl ; jbe 0x4bbdb9 ; call qword ptr [rax]
0x00000000004c48b2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b567a : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; and ch, dh ; call qword ptr [rax]
0x0000000000436f5e : add byte ptr [rax], al ; movsx eax, byte ptr [rdx + 0x15] ; ret
0x00000000004a6c8a : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x000000000042ce41 : add byte ptr [rax], al ; movsxd rdx, edx ; call 0x4290a7
0x000000000040d9ae : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0xa] ; ret
0x000000000040997e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0xb] ; ret
0x000000000040e87e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 8] ; ret
0x00000000004b74ca : add byte ptr [rax], al ; nop ; and edi, eax ; call rax
0x00000000004b5992 : add byte ptr [rax], al ; nop ; cmc ; jmp rax
0x00000000004b5d0a : add byte ptr [rax], al ; nop ; cwde ; cmc ; jmp qword ptr [rax]
0x00000000004c622e : add byte ptr [rax], al ; nop ; fcomip st(7) ; jmp qword ptr [rbx]
0x00000000004b5ffa : add byte ptr [rax], al ; nop ; fdiv st(5) ; jmp rax
0x00000000004b6102 : add byte ptr [rax], al ; nop ; jrcxz 0x4b6101 ; jmp rax
0x00000000004b60a2 : add byte ptr [rax], al ; nop ; loopne 0x4b60a1 ; call qword ptr [rax]
0x00000000004b5c12 : add byte ptr [rax], al ; nop ; mov ch, dh ; call rax
0x00000000004b6fd2 : add byte ptr [rax], al ; nop ; movsxd rsi, edi ; jmp rax
0x00000000004b8c6e : add byte ptr [rax], al ; nop ; out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004b8d2e : add byte ptr [rax], al ; nop ; out dx, al ; hlt ; jmp qword ptr [rbx]
0x00000000004b941a : add byte ptr [rax], al ; or al, 0xf ; add byte ptr [rax], al ; adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x000000000048d7a5 : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x48a200
0x00000000004aef9a : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x0000000000478684 : add byte ptr [rax], al ; or byte ptr [rax - 0x73], 0x71 ; add dword ptr [rax + 0x29], ecx ; ret 0x3948
0x0000000000418bbe : add byte ptr [rax], al ; or byte ptr [rax], al ; je 0x418b7f ; ret
0x00000000004b9d16 : add byte ptr [rax], al ; or byte ptr [rax], ch ; cmc ; jmp qword ptr [rbx]
0x00000000004b98e6 : add byte ptr [rax], al ; or byte ptr [rbx], dl ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d4a : add byte ptr [rax], al ; or byte ptr [rcx], 0xf7 ; jmp qword ptr [rax]
0x00000000004199fe : add byte ptr [rax], al ; or byte ptr [rdi + 0x24], 2 ; xor eax, eax ; ret
0x00000000004b8836 : add byte ptr [rax], al ; or ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b6173 : add byte ptr [rax], al ; out dx, al ; cmc ; jmp qword ptr [rax]
0x00000000004b7d8b : add byte ptr [rax], al ; out dx, eax ; cli ; call rax
0x00000000004bfe56 : add byte ptr [rax], al ; pop rax ; adc dh, dh ; jmp qword ptr [rdx]
0x00000000004c7686 : add byte ptr [rax], al ; pop rax ; clc ; call rcx
0x00000000004bf436 : add byte ptr [rax], al ; pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x00000000004b5a1b : add byte ptr [rax], al ; pop rax ; cmc ; call rax
0x00000000004c1516 : add byte ptr [rax], al ; pop rax ; jg 0x4c1516 ; jmp qword ptr [rsi]
0x00000000004b9c06 : add byte ptr [rax], al ; pop rax ; sbb al, 0xf5 ; jmp qword ptr [rax]
0x000000000040ed74 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408814 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412a73 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000041a11d : add byte ptr [rax], al ; pop rbp ; pop r14 ; ret
0x00000000004047ce : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040f678 : add byte ptr [rax], al ; pop rbx ; cmovne eax, edx ; ret
0x000000000044d18e : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; pop r12 ; ret
0x000000000049c846 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000419ccf : add byte ptr [rax], al ; pop rbx ; or rax, r12 ; pop rbp ; pop r12 ; ret
0x0000000000408687 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040c6da : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ddf7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f683 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000040b40e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004b966a : add byte ptr [rax], al ; pop rsp ; adc dword ptr [rax], eax ; add byte ptr [rax + 9], ah ; cmc ; jmp qword ptr [rbx]
0x00000000004c4906 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000000004cc86a : add byte ptr [rax], al ; pop rsp ; add dword ptr [r8], eax ; shl al, 0xfc ; call rax
0x00000000004cd06a : add byte ptr [rax], al ; pop rsp ; add qword ptr [r8], rax ; nop ; std ; call qword ptr [rax]
0x00000000004b592a : add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004b64ba : add byte ptr [rax], al ; push rax ; cmp dh, dh ; call rax
0x00000000004aef9e : add byte ptr [rax], al ; push rax ; ret
0x00000000004b6bca : add byte ptr [rax], al ; push rax ; retf
0x00000000004b7fb3 : add byte ptr [rax], al ; push rdx ; cld ; jmp qword ptr [rax]
0x00000000004ccb62 : add byte ptr [rax], al ; push rsp ; add dword ptr [rax], r8d ; test al, 2 ; std ; call rdi
0x00000000004c6a62 : add byte ptr [rax], al ; push rsp ; in eax, 0 ; add byte ptr [rax + 5], ch ; clc ; jmp rsp
0x00000000004c8d62 : add byte ptr [rax], al ; push rsp ; or byte ptr [rcx], al ; add byte ptr [rax + 0x64], bh ; stc ; call rdx
0x00000000004b9462 : add byte ptr [rax], al ; push rsp ; sldt word ptr [rax] ; sub byte ptr [rsi], al ; cmc ; jmp qword ptr [rbx]
0x00000000004bb862 : add byte ptr [rax], al ; push rsp ; xor eax, dword ptr [rax] ; add al, cl ; insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x00000000004bbbaa : add byte ptr [rax], al ; pushfq ; add byte ptr ss:[rax], al ; mov al, 0x72 ; cmc ; call qword ptr [rdx]
0x00000000004cd0aa : add byte ptr [rax], al ; pushfq ; add qword ptr [r8], rax ; jo 0x4cd0f1 ; std ; jmp rdi
0x00000000004beeaa : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rax], 0xf5f0e000 ; call qword ptr [rax]
0x00000000004b6302 : add byte ptr [rax], al ; rcl byte ptr [rcx], 0xf6 ; jmp rax
0x00000000004b6f6a : add byte ptr [rax], al ; rcl byte ptr [rsi - 9], 1 ; jmp rax
0x00000000004b6c12 : add byte ptr [rax], al ; rcl ch, 0xf6 ; jmp qword ptr [rax]
0x0000000000401e7a : add byte ptr [rax], al ; ret
0x00000000004c4772 : add byte ptr [rax], al ; ret 0
0x00000000004b5ef3 : add byte ptr [rax], al ; ret 0xfff5
0x00000000004b6b9b : add byte ptr [rax], al ; ret 0xfff6
0x00000000004007b6 : add byte ptr [rax], al ; ret 1
0x00000000004a95ae : add byte ptr [rax], al ; retf
0x00000000004711aa : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004bdc8e : add byte ptr [rax], al ; rol bl, 0xf5 ; jmp rdx
0x00000000004b5efa : add byte ptr [rax], al ; rol dl, 1 ; cmc ; call rax
0x00000000004b6e9a : add byte ptr [rax], al ; ror byte ptr [rbx - 9], 0xff ; ret
0x00000000004b6bda : add byte ptr [rax], al ; ror dh, 0xf6 ; call qword ptr [rax]
0x00000000004beede : add byte ptr [rax], al ; sal al, 1 ; cmc ; call qword ptr [rax]
0x00000000004bf54e : add byte ptr [rax], al ; sar ah, 1 ; cmc ; call rsi
0x00000000004c5076 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000004c622a : add byte ptr [rax], al ; sbb al, 0xdd ; add byte ptr [rax], al ; nop ; fcomip st(7) ; jmp qword ptr [rbx]
0x00000000004b8d2a : add byte ptr [rax], al ; sbb al, 8 ; add byte ptr [rax], al ; nop ; out dx, al ; hlt ; jmp qword ptr [rbx]
0x00000000004c69f6 : add byte ptr [rax], al ; sbb byte ptr [rax + rdi*8], al ; call qword ptr [rdx]
0x00000000004bab06 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xb], cl ; call rcx
0x00000000004bbdb6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xb], dh ; call qword ptr [rax]
0x00000000004b8b36 : add byte ptr [rax], al ; sbb ch, bl ; hlt ; call qword ptr [rbx]
0x00000000004b605a : add byte ptr [rax], al ; sbb dh, 0xf5 ; call rax
0x00000000004b557a : add byte ptr [rax], al ; sbb eax, dword ptr [rbx] ; cmc ; call qword ptr [rax]
0x00000000004c3be6 : add byte ptr [rax], al ; sbb sil, dil ; jmp qword ptr [rdx]
0x00000000004c5ebe : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; retf
0x000000000040a35a : add byte ptr [rax], al ; sete al ; ret
0x00000000004b5752 : add byte ptr [rax], al ; shl byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rax]
0x000000000041b7f1 : add byte ptr [rax], al ; shl eax, cl ; and eax, 0x361f8 ; ret
0x000000000041b805 : add byte ptr [rax], al ; shl eax, cl ; and eax, 0x8029fdf ; ret
0x0000000000419d1b : add byte ptr [rax], al ; shl rax, cl ; ret
0x000000000040995a : add byte ptr [rax], al ; shr al, 3 ; and eax, 1 ; ret
0x0000000000409aea : add byte ptr [rax], al ; shr al, 6 ; and eax, 1 ; ret
0x00000000004b618a : add byte ptr [rax], al ; shr bh, 1 ; cmc ; call rax
0x00000000004b87f6 : add byte ptr [rax], al ; shr ecx, 1 ; hlt ; call qword ptr [rbx]
0x00000000004c47fe : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c476e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000004ca93a : add byte ptr [rax], al ; sub al, 0x24 ; add dword ptr [rax], eax ; loopne 0x4ca994 ; sti ; jmp rdi
0x00000000004bd9e6 : add byte ptr [rax], al ; sub al, al ; cmc ; call qword ptr [rdx]
0x00000000004c72c6 : add byte ptr [rax], al ; sub byte ptr [rax + rdi*8], bh ; call rdi
0x00000000004b95a6 : add byte ptr [rax], al ; sub byte ptr [rax], cl ; cmc ; call rsi
0x00000000004b9466 : add byte ptr [rax], al ; sub byte ptr [rsi], al ; cmc ; jmp qword ptr [rbx]
0x00000000004b8a76 : add byte ptr [rax], al ; sub dl, 0xf4 ; call qword ptr [rbx]
0x000000000042dccc : add byte ptr [rax], al ; sub eax, 1 ; sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000041b1db : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000004b8bb6 : add byte ptr [rax], al ; sub ebx, ebp ; hlt ; call qword ptr [rsi]
0x000000000041471f : add byte ptr [rax], al ; sub ecx, edx ; shr rax, cl ; ret
0x00000000004b9976 : add byte ptr [rax], al ; test al, 0x13 ; cmc ; jmp rsp
0x00000000004be4f6 : add byte ptr [rax], al ; test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x00000000004b8cb6 : add byte ptr [rax], al ; test al, 0xee ; hlt ; call qword ptr [rdx]
0x00000000004c7d92 : add byte ptr [rax], al ; test al, bh ; add byte ptr [rax], al ; xchg rax, rcx ; clc ; call rsi
0x00000000004b8992 : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rdx - 0x16], cl ; hlt ; call qword ptr [rbx]
0x00000000004b8892 : add byte ptr [rax], al ; test byte ptr [rbx], al ; add byte ptr [rax], al ; in al, 0xe9 ; hlt ; call qword ptr [rbx]
0x00000000004bbe92 : add byte ptr [rax], al ; test byte ptr [rcx], bh ; add byte ptr [rax], al ; cwde ; jbe 0x4bbe99 ; call qword ptr [rax]
0x00000000004c9e92 : add byte ptr [rax], al ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; cmp dl, dil ; jmp qword ptr [rax]
0x000000000044ac24 : add byte ptr [rax], al ; test eax, eax ; jne 0x44ac47 ; ret
0x000000000042964a : add byte ptr [rax], al ; test edx, edx ; je 0x42965f ; pop rbx ; ret
0x000000000044d85d : add byte ptr [rax], al ; test edx, edx ; je 0x44d87e ; pop rbx ; ret
0x00000000004590a3 : add byte ptr [rax], al ; test rax, rax ; je 0x4590b3 ; call rax
0x000000000041a737 : add byte ptr [rax], al ; test rdi, rdi ; jne 0x41a705 ; jmp 0x41a70b
0x0000000000411765 : add byte ptr [rax], al ; test rdx, rdx ; je 0x41178f ; call rdx
0x000000000040f5f5 : add byte ptr [rax], al ; ud2 ; xor eax, eax ; ret
0x00000000004c5e8e : add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000004b95a2 : add byte ptr [rax], al ; xchg eax, esp ; adc byte ptr [rax], al ; add byte ptr [rax], ch ; or ch, dh ; call rsi
0x00000000004c47a2 : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000004c7d96 : add byte ptr [rax], al ; xchg rax, rcx ; clc ; call rsi
0x00000000004bb642 : add byte ptr [rax], al ; xor al, 0x31 ; add byte ptr [rax], al ; fsubr dword ptr [rax - 0xb] ; jmp rsp
0x00000000004b8af6 : add byte ptr [rax], al ; xor al, 0xeb ; hlt ; call qword ptr [rbx]
0x00000000004c7e42 : add byte ptr [rax], al ; xor al, 0xf9 ; add byte ptr [rax], al ; cwde ; xchg eax, esi ; clc ; call rbx
0x00000000004c229e : add byte ptr [rax], al ; xor bh, bh ; call qword ptr [rcx]
0x00000000004b6e42 : add byte ptr [rax], al ; xor byte ptr [rax - 9], al ; call rax
0x00000000004b5ada : add byte ptr [rax], al ; xor byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x00000000004b577a : add byte ptr [rax], al ; xor byte ptr [rcx], dh ; cmc ; jmp rax
0x00000000004c6dfe : add byte ptr [rax], al ; xor byte ptr [rdi], bl ; clc ; jmp rcx
0x00000000004b6522 : add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], al ; call rax
0x00000000004c088e : add byte ptr [rax], al ; xor byte ptr [rsi + rsi*8], bh ; call qword ptr [rsi]
0x00000000004b61ca : add byte ptr [rax], al ; xor dh, 0xf5 ; call qword ptr [rax]
0x00000000004b89d6 : add byte ptr [rax], al ; xor dl, ch ; hlt ; call qword ptr [rbx]
0x000000000040c5e6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004253e0 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rbx], rcx ; pop rbx ; ret
0x0000000000410634 : add byte ptr [rax], al ; xor eax, eax ; mov word ptr [rdx + 8], r10w ; ret
0x000000000040ecad : add byte ptr [rax], al ; xor eax, eax ; movsd qword ptr [rsi + 0x40], xmm1 ; ret
0x000000000040dca4 : add byte ptr [rax], al ; xor eax, eax ; movsd qword ptr [rsi + 0x40], xmm3 ; ret
0x000000000040f9b4 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042fbde : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000407b4e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041b7d3 : add byte ptr [rax], al ; xor eax, edx ; pop rbx ; ret
0x0000000000444365 : add byte ptr [rax], al ; xor ecx, ecx ; jmp 0x44433b
0x00000000004b6472 : add byte ptr [rax], al ; xor esi, esi ; call qword ptr [rax]
0x0000000000413e7e : add byte ptr [rax], al ; xor r10d, r10d ; mov rax, r10 ; ret
0x000000000040578c : add byte ptr [rax], bh ; call 0x401a48
0x00000000004c78d7 : add byte ptr [rax], bh ; jne 0x4c78d7 ; jmp qword ptr [rdx]
0x00000000004bdb77 : add byte ptr [rax], bh ; ret 0xfff5
0x00000000004c69f7 : add byte ptr [rax], bl ; add al, 0xf8 ; call qword ptr [rdx]
0x00000000004cc8e7 : add byte ptr [rax], bl ; clc ; cld ; jmp qword ptr [rax]
0x00000000004cc907 : add byte ptr [rax], bl ; clc ; cld ; jmp qword ptr [rbx]
0x00000000004ca0e7 : add byte ptr [rax], bl ; cli ; call qword ptr [rdx]
0x00000000004bab07 : add byte ptr [rax], bl ; cmc ; call rcx
0x00000000004bbdb7 : add byte ptr [rax], bl ; jbe 0x4bbdb4 ; call qword ptr [rax]
0x00000000004bdb27 : add byte ptr [rax], bl ; ret 0xfff5
0x00000000004bff57 : add byte ptr [rax], ch ; adc esi, esi ; call rax
0x00000000004c72c7 : add byte ptr [rax], ch ; cmp al, 0xf8 ; call rdi
0x00000000004b95a7 : add byte ptr [rax], ch ; or ch, dh ; call rsi
0x00000000004c5b97 : add byte ptr [rax], ch ; ret
0x00000000004b98e7 : add byte ptr [rax], cl ; adc esi, ebp ; jmp qword ptr [rdx]
0x000000000044a118 : add byte ptr [rax], cl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd009
0x0000000000418bbf : add byte ptr [rax], cl ; add byte ptr [rsp + rsi*4 - 0xd], dh ; ret
0x00000000004bf707 : add byte ptr [rax], cl ; add esi, esi ; call qword ptr [rdi]
0x00000000004bf727 : add byte ptr [rax], cl ; add esi, esi ; jmp qword ptr [rsi]
0x00000000004b9d17 : add byte ptr [rax], cl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000004b927f : add byte ptr [rax], dh ; add al, 0xf5 ; jmp qword ptr [rbx]
0x00000000004b624b : add byte ptr [rax], dh ; add dh, dh ; call qword ptr [rax]
0x00000000004c088f : add byte ptr [rax], dh ; cmp al, 0xf6 ; call qword ptr [rsi]
0x00000000004b7bd3 : add byte ptr [rax], dh ; idiv cl ; jmp qword ptr [rax]
0x00000000004b5adb : add byte ptr [rax], dh ; jno 0x4b5ad8 ; jmp qword ptr [rax]
0x00000000004b7b1b : add byte ptr [rax], dh ; lahf ; stc ; jmp qword ptr [rax]
0x00000000004c229f : add byte ptr [rax], dh ; push rbx ; call qword ptr [rcx]
0x00000000004b8143 : add byte ptr [rax], dh ; ret
0x00000000004b726b : add byte ptr [rax], dh ; retf
0x00000000004b5f53 : add byte ptr [rax], dh ; retf 0xfff5
0x00000000004b83eb : add byte ptr [rax], dh ; retf 0xfffe
0x00000000004bc9ef : add byte ptr [rax], dh ; xchg eax, esp ; cmc ; call rsp
0x00000000004b577b : add byte ptr [rax], dh ; xor ebp, esi ; jmp rax
0x000000000040578b : add byte ptr [rax], dil ; call 0x401a49
0x0000000000408cb1 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000000004c045f : add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rdi]
0x00000000004b64cb : add byte ptr [rax], dl ; cmp esi, esi ; call qword ptr [rax]
0x00000000004b6003 : add byte ptr [rax], dl ; fprem1 ; call qword ptr [rax]
0x00000000004c2fef : add byte ptr [rax], dl ; in al, dx ; idiv bh ; ret 0
0x00000000004b673b : add byte ptr [rax], dl ; jbe 0x4b6739 ; jmp qword ptr [rax]
0x00000000004ae061 : add byte ptr [rax], dl ; je 0x4ae06b ; retf 0xcb00
0x00000000004ae061 : add byte ptr [rax], dl ; je 0x4ae06d ; retf 0xcb00
0x00000000004b7a63 : add byte ptr [rax], dl ; jle 0x4b7a64 ; call rax
0x00000000004b60eb : add byte ptr [rax], dl ; loop 0x4b60e8 ; jmp qword ptr [rax]
0x00000000004c2d1f : add byte ptr [rax], dl ; loop 0x4c2d1d ; call qword ptr [rax]
0x00000000004b710b : add byte ptr [rax], dl ; mov dh, bh ; call qword ptr [rax]
0x00000000004b809b : add byte ptr [rax], dl ; or ch, bh ; call qword ptr [rax]
0x00000000004b7e53 : add byte ptr [rax], dl ; pop rbx ; sti ; call qword ptr [rax]
0x00000000004cc61f : add byte ptr [rax], dl ; ret
0x00000000004c5100 : add byte ptr [rax], r8b ; add ah, dh ; retf
0x000000000040be72 : add byte ptr [rax], r8b ; add byte ptr [rax + 2], bh ; ret
0x00000000004b5a19 : add byte ptr [rax], r8b ; add byte ptr [rax - 0xb], bl ; call rax
0x00000000004c8088 : add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*8], bh ; add byte ptr [rax], ah ; ret 0xfff8
0x00000000004bdb70 : add byte ptr [rax], r8b ; add byte ptr [rsi + rdx*2], ah ; add byte ptr [rax], bh ; ret 0xfff5
0x00000000004b8554 : add byte ptr [rax], r8b ; add byte ptr [rsi], cl ; ret
0x00000000004124c5 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043239d : add byte ptr [rax], r8b ; je 0x4323ad ; ret
0x00000000004b5be1 : add byte ptr [rax], r8b ; jo 0x4b5b71 ; cmc ; call qword ptr [rax]
0x00000000004bd39d : add byte ptr [rax], r8b ; jo 0x4bd350 ; cmc ; jmp qword ptr [rdi]
0x00000000004146c5 : add byte ptr [rax], r8b ; lea eax, [rsi + 1] ; ret
0x00000000004b5a69 : add byte ptr [rax], r8b ; loopne 0x4b5ad3 ; cmc ; jmp qword ptr [rax]
0x00000000004b5a59 : add byte ptr [rax], r8b ; mov al, 0x5e ; cmc ; call rax
0x000000000041923d : add byte ptr [rax], r8b ; mov byte ptr [rax + 6], 1 ; ret
0x0000000000407dad : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000004364ad : add byte ptr [rax], r8b ; mov eax, 7 ; ret
0x000000000041e6ed : add byte ptr [rax], r8b ; mov rax, rsi ; ret
0x0000000000436f5d : add byte ptr [rax], r8b ; movsx eax, byte ptr [rdx + 0x15] ; ret
0x000000000040d9ad : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi + 0xa] ; ret
0x000000000040997d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi + 0xb] ; ret
0x000000000040e87d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi + 8] ; ret
0x00000000004199fd : add byte ptr [rax], r8b ; or byte ptr [rdi + 0x24], 2 ; xor eax, eax ; ret
0x00000000004312a5 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042940d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000419b0d : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000407b0d : add byte ptr [rax], r8b ; ret
0x000000000040c5e5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000042fd65 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000407b4d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000414311 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000414d6b : add byte ptr [rbp + 0x11], dh ; add rsp, 0x38 ; ret
0x0000000000430f13 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041869f : add byte ptr [rbp + 0x15], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040dae7 : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000409207 : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e222 : add byte ptr [rbp + 0x20], dh ; add rsp, 0x18 ; ret
0x000000000040d3c8 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x18 ; ret
0x000000000041085d : add byte ptr [rbp + 0x23], dh ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000418cc1 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x18 ; ret
0x000000000041177b : add byte ptr [rbp + 0x2a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040d974 : add byte ptr [rbp + 0x2e], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000049bff5 : add byte ptr [rbp + 0x31], al ; in al, 0xe9 ; ret
0x0000000000413e7f : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x0000000000456292 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004178ed : add byte ptr [rbp + 0x35], dh ; add rsp, 0x18 ; ret
0x000000000040a7da : add byte ptr [rbp + 0x39], al ; retf 0x840f
0x0000000000491384 : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000431390 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000049ffcd : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000455a01 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041a11e : add byte ptr [rbp + 0x41], bl ; pop rsi ; ret
0x000000000040ed75 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000408815 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000412a74 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004971ec : add byte ptr [rbp + 0x48], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418c2f : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000448dbe : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000415042 : add byte ptr [rbp + 0x4c2978f6], al ; mov edi, esp ; call rcx
0x00000000004145fe : add byte ptr [rbp + 0x55], dh ; add rsp, 0x18 ; ret
0x0000000000409360 : add byte ptr [rbp + 0x59], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414c90 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000042964b : add byte ptr [rbp + 0x5b0874d2], al ; ret
0x000000000044d85e : add byte ptr [rbp + 0x5b1474d2], al ; ret
0x00000000004088af : add byte ptr [rbp + 0x5e], dh ; add rsp, 0x28 ; ret
0x000000000040e737 : add byte ptr [rbp + 0x634c0172], cl ; retf 0xce39
0x0000000000409d51 : add byte ptr [rbp + 0x6c], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000434159 : add byte ptr [rbp + 0x7a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041b5bd : add byte ptr [rbp + 0x7d], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000446d83 : add byte ptr [rbp + 0x7d], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000412205 : add byte ptr [rbp + 0xc], dh ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004179e6 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x18 ; ret
0x000000000044fd2c : add byte ptr [rbp + 0xf], al ; mov dh, 0x78 ; adc al, 0x89 ; ret 0x2944
0x000000000043787d : add byte ptr [rbp + 0xf], al ; retf 0x9e9
0x000000000041b282 : add byte ptr [rbp + 0xf], dh ; pop rbx ; ret
0x000000000040d4e7 : add byte ptr [rbp + 1], cl ; ret 0xf139
0x00000000004b0755 : add byte ptr [rbp + 3], al ; or al, byte ptr [rax] ; retf 0xb203
0x00000000004150ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000409425 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000421a09 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000499a6a : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040e9e8 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042f8bb : add byte ptr [rbp + 6], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000408f07 : add byte ptr [rbp + 6], dh ; ret
0x000000000041dafa : add byte ptr [rbp + 7], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004145ab : add byte ptr [rbp + 7], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041efa4 : add byte ptr [rbp + 7], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000418fa6 : add byte ptr [rbp + 7], dh ; ret
0x000000000044550f : add byte ptr [rbp + 9], dh ; mov rdi, qword ptr [rbx + 8] ; call 0x412019
0x0000000000421260 : add byte ptr [rbp + rax + 0x5b], dh ; ret
0x00000000004b8ab3 : add byte ptr [rbp + rax - 0x14e10000], ah ; hlt ; call qword ptr [rbx]
0x000000000042de70 : add byte ptr [rbp + rax*2 + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c72c3 : add byte ptr [rbp + rbp*8 + 0x3c280000], dh ; clc ; call rdi
0x0000000000402070 : add byte ptr [rbp + rbx + 0x79], dh ; sbb byte ptr [rax + 0x69], cl ; ret
0x00000000004c229b : add byte ptr [rbp + rbx*4 - 0xd00000], cl ; call qword ptr [rcx]
0x00000000004bd27b : add byte ptr [rbp + rcx*2], ch ; add al, dl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rbx]
0x00000000004948c9 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x163
0x00000000004b927b : add byte ptr [rbp + rcx], ch ; add byte ptr [rax], dh ; add al, 0xf5 ; jmp qword ptr [rbx]
0x000000000046dfc8 : add byte ptr [rbp + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000004c7aab : add byte ptr [rbp + rsi*8 + 0x7a800000], bl ; clc ; call rdi
0x0000000000436520 : add byte ptr [rbp - 0x11], dh ; mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x0000000000407aef : add byte ptr [rbp - 0x1f7cf8b9], cl ; clc ; ret
0x0000000000410405 : add byte ptr [rbp - 0x37], dh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000042c3bf : add byte ptr [rbp - 0x49f000b0], cl ; retf 0x5388
0x000000000042e66f : add byte ptr [rbp - 0x6af00089], cl ; ret 0x8348
0x000000000048d794 : add byte ptr [rbp - 0x75], al ; xor al, 0x24 ; jmp 0x48a1ff
0x0000000000428350 : add byte ptr [rbp - 0x76b7feb5], cl ; retf
0x0000000000415cff : add byte ptr [rbp - 0x76eb8b37], al ; retf 0x25e9
0x000000000042635b : add byte ptr [rbp - 0x77], al ; retf
0x0000000000447260 : add byte ptr [rbp - 0x77], cl ; retf 0x1be
0x000000000044738d : add byte ptr [rbp - 0x77], cl ; retf 0x850f
0x0000000000447377 : add byte ptr [rbp - 0x77], cl ; retf 0xebe9
0x00000000004a79a7 : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; ret 0xe725
0x00000000004a1adf : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x8e ; ret
0x00000000004128a0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000042d396 : add byte ptr [rbp - 0x7cb700aa], cl ; ret 0x4801
0x000000000042eb64 : add byte ptr [rbp - 0x7cb72faf], cl ; ret
0x00000000004a566f : add byte ptr [rbp - 0x7ccb8a40], al ; ret
0x000000000044ac25 : add byte ptr [rbp - 0xce98a40], al ; ret
0x00000000004c324b : add byte ptr [rbp*4 - 0xf200000], bh ; idiv bh ; ret
0x00000000004afaf3 : add byte ptr [rbp], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdi - 0x1b005801]
0x00000000004c6a63 : add byte ptr [rbp], dl ; add byte ptr [rax + 5], ch ; clc ; jmp rsp
0x0000000000420dbe : add byte ptr [rbx + 0x1142454], cl ; ret 0xc031
0x00000000004135e7 : add byte ptr [rbx + 0x15087], al ; add byte ptr [rcx], al ; ret
0x000000000040a3e6 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000424514 : add byte ptr [rbx + 0x39442444], cl ; ret 0x8c0f
0x0000000000475244 : add byte ptr [rbx + 0x39445c55], cl ; ret 0x9e73
0x00000000004a4f4c : add byte ptr [rbx + 0x440f01f8], al ; ret 0x4389
0x000000000047aa6d : add byte ptr [rbx + 0x440f03e0], al ; ret 0x4388
0x0000000000489674 : add byte ptr [rbx + 0x440f07e0], al ; ret 0x4388
0x000000000046d992 : add byte ptr [rbx + 0x45393045], cl ; xor al, 0x75 ; ret
0x0000000000419cd0 : add byte ptr [rbx + 0x4c], bl ; or eax, esp ; pop rbp ; pop r12 ; ret
0x0000000000486bb5 : add byte ptr [rbx + 0x4f0f08f8], al ; ret 0x8389
0x000000000040cc82 : add byte ptr [rbx + 0x508901ea], al ; xor rax, rax ; ret
0x000000000044f39f : add byte ptr [rbx + 0x558b2045], cl ; sub al, 0x39 ; ret 0x820f
0x0000000000401e81 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408688 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040c6db : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040ddf8 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f679 : add byte ptr [rbx + 0xf], bl ; ret 0x90c3
0x00000000004b8893 : add byte ptr [rbx + rax - 0x161c0000], al ; hlt ; call qword ptr [rbx]
0x00000000004b88b3 : add byte ptr [rbx + rax - 0x16290000], ah ; hlt ; jmp rcx
0x00000000004cc86b : add byte ptr [rbx + rax*2 + 1], bl ; add al, al ; loopne 0x4cc877 ; call rax
0x00000000004c088b : add byte ptr [rbx + rax*4], bh ; add byte ptr [rax], dh ; cmp al, 0xf6 ; call qword ptr [rsi]
0x00000000004b8833 : add byte ptr [rbx + rax], ah ; add byte ptr [rax], al ; or ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b8af7 : add byte ptr [rbx + rbp*8], dh ; hlt ; call qword ptr [rbx]
0x00000000004cd0ab : add byte ptr [rbx + rcx*2 + 0x36700001], bl ; std ; jmp rdi
0x00000000004bd09b : add byte ptr [rbx + rcx*2 - 0x5e300000], cl ; cmc ; call rbx
0x00000000004530c2 : add byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0xc889
0x000000000041e9df : add byte ptr [rbx + rcx*4 + 0x73], cl ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000438cbe : add byte ptr [rbx + rcx*4 - 0x75], cl ; cmp byte ptr [rdx], al ; add byte ptr [rax], al ; call r10
0x00000000004bc09b : add byte ptr [rbx + rdi + 0x78200000], cl ; cmc ; jmp rcx
0x00000000004c808b : add byte ptr [rbx + rdi*8], bh ; add byte ptr [rax], ah ; ret 0xfff8
0x00000000004cd8bb : add byte ptr [rbx + rdx*2 - 0x511fffff], ch ; std ; call qword ptr [rax]
0x00000000004bb863 : add byte ptr [rbx + rsi], dl ; add al, cl ; insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x0000000000409913 : add byte ptr [rbx - 0x1d7c011f], al ; add dword ptr [rcx], ecx ; retf 0x9088
0x0000000000415eff : add byte ptr [rbx - 0x3f7aebb9], cl ; jne 0x415f19 ; ret
0x00000000004a07f2 : add byte ptr [rbx - 0x3f7caf8f], cl ; add dword ptr [rax - 0x7d], ecx ; ret 0x8520
0x000000000040e2df : add byte ptr [rbx - 0x3fcefefe], al ; mov dword ptr [rdi + 0x34], esi ; ret
0x000000000040999a : add byte ptr [rbx - 0x49f0e020], al ; add al, 2 ; ret
0x000000000043feff : add byte ptr [rbx - 0x6af0fd08], al ; ret 0xb60f
0x000000000044d18f : add byte ptr [rbx - 0x75], bl ; xor byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x0000000000402218 : add byte ptr [rbx - 0x76b7dbf4], cl ; ret
0x000000000046053b : add byte ptr [rbx - 0x76bbfe16], al ; retf
0x0000000000450633 : add byte ptr [rbx - 0x76bef7bf], cl ; ret
0x00000000004912f9 : add byte ptr [rbx - 0x76f3dbb4], cl ; retf 0x894c
0x00000000004345f3 : add byte ptr [rbx - 0x7af0dbfc], cl ; retf 2
0x00000000004294a4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0
0x000000000040d7ef : add byte ptr [rbx - 0x7cb67f20], al ; mov byte ptr [rcx], 0x89 ; ret 0xf41
0x000000000040d79f : add byte ptr [rbx - 0x7cb67f20], al ; ret 0x8901
0x000000000047de10 : add byte ptr [rbx - 0x7cb6fe18], al ; ret
0x000000000042746f : add byte ptr [rbx - 0x7cb7df40], al ; ret 0x4801
0x000000000040ae8f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000049709f : add byte ptr [rbx - 0x7cb7fe3e], al ; shr byte ptr [rax], 0x39 ; retf 0x840f
0x0000000000417b2f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret
0x000000000042bb57 : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3920
0x0000000000420b44 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3920
0x000000000040fcec : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x6602
0x0000000000414dd7 : add byte ptr [rbx - 0x9f3dbac], cl ; ret 0x4901
0x000000000041207f : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004add97 : add byte ptr [rbx], al ; hlt ; rol byte ptr [rax], 4 ; ret 0x100
0x00000000004b557b : add byte ptr [rbx], bl ; add esi, ebp ; call qword ptr [rax]
0x0000000000410fa3 : add byte ptr [rbx], ch ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b5473 : add byte ptr [rbx], dh ; retf
0x000000000040d04f : add byte ptr [rcx + 0x2b806], cl ; add byte ptr [rax], al ; ret
0x000000000040a806 : add byte ptr [rcx + 0x39], al ; ret 0x6774
0x000000000040a8e7 : add byte ptr [rcx + 0x39], al ; ret 0x8941
0x0000000000457a2b : add byte ptr [rcx + 0x39], al ; retf 0x840f
0x000000000048f0f7 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041773f : add byte ptr [rcx + 0x39], cl ; ret 0x7b76
0x000000000041adcf : add byte ptr [rcx + 0x39], cl ; ret 0xab73
0x000000000040d03f : add byte ptr [rcx + 0x3b806], cl ; add byte ptr [rax], al ; ret
0x00000000004020c4 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000437ab9 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040d05f : add byte ptr [rcx + 0x4b806], cl ; add byte ptr [rax], al ; ret
0x0000000000489c16 : add byte ptr [rcx + 0x58890458], cl ; sbb al, 0xe9 ; pop rsp ; retf
0x0000000000401fa6 : add byte ptr [rcx + 0x5d5b5ae8], cl ; ret
0x000000000040be30 : add byte ptr [rcx + 0x6348c3d0], cl ; ret 0x8d4c
0x00000000004501df : add byte ptr [rcx + 0xf], al ; mov dh, 0x4d ; adc edi, dword ptr [rcx] ; retf 0xd275
0x00000000004526ff : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; add dword ptr [rcx], eax ; ret 0x6348
0x000000000044e2b6 : add byte ptr [rcx + 0xf], al ; mov esi, 0x83582444 ; ret
0x000000000043491b : add byte ptr [rcx + 0xf], al ; ret
0x000000000047e816 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xbc83
0x0000000000410541 : add byte ptr [rcx + 0xf], cl ; ret 0xae0f
0x0000000000483df3 : add byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000040d772 : add byte ptr [rcx + 1], cl ; retf 0x4c8b
0x000000000040d8f9 : add byte ptr [rcx + 1], cl ; retf 0x67e9
0x00000000004b0c5d : add byte ptr [rcx + rax + 0x17801b3], dh ; ret
0x000000000043280a : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004b7ad8 : add byte ptr [rcx + rax], ah ; add byte ptr [rax - 0x6f], dl ; stc ; jmp qword ptr [rax]
0x00000000004beeab : add byte ptr [rcx + rbp*2 - 0xf200000], bl ; cmc ; call qword ptr [rax]
0x00000000004beec3 : add byte ptr [rcx + rbp*2 - 0xf280000], dh ; cmc ; call qword ptr [rax]
0x00000000004c9e93 : add byte ptr [rcx + rbx + 0x38480001], al ; cli ; jmp qword ptr [rax]
0x0000000000419974 : add byte ptr [rcx + rcx + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000411054 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000467a66 : add byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e63d : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x43b0c6
0x0000000000411edd : add byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000447ab4 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046c0d4 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040291d : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b2bf : add byte ptr [rcx + rcx*4 - 0xa], al ; call rcx
0x00000000004a7f88 : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call r12
0x00000000004787f1 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x455216
0x000000000047d089 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, rbx ; call 0x419b29
0x00000000004774e1 : add byte ptr [rcx + rcx*4 - 1], cl ; xor eax, eax ; call 0x443758
0x0000000000445020 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x401ad6
0x000000000040b783 : add byte ptr [rcx + rcx*8 - 0x76b3c08c], al ; retf 0x10eb
0x00000000004b8e23 : add byte ptr [rcx + rcx], dl ; add byte ptr [rax], al ; div rsp ; jmp rax
0x00000000004bbe93 : add byte ptr [rcx + rdi + 0x76980000], al ; cmc ; call qword ptr [rax]
0x00000000004c3e33 : add byte ptr [rcx + rdi*4], ah ; add byte ptr [rax], al ; call 0xffffffffd54c3564
0x00000000004c7e43 : add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; cwde ; xchg eax, esi ; clc ; call rbx
0x00000000004cbe23 : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x00000000004b966b : add byte ptr [rcx + rdx], bl ; add byte ptr [rax + 9], ah ; cmc ; jmp qword ptr [rbx]
0x00000000004c7683 : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax + 0x66], bl ; clc ; call rcx
0x00000000004bb643 : add byte ptr [rcx + rsi], dh ; add byte ptr [rax], al ; fsubr dword ptr [rax - 0xb] ; jmp rsp
0x00000000004b8937 : add byte ptr [rcx - 0x16], dh ; hlt ; call qword ptr [rbx]
0x0000000000474fc3 : add byte ptr [rcx - 0x17c7dbbc], cl ; ret
0x00000000004802fb : add byte ptr [rcx - 0x17dfdbbc], cl ; retf
0x00000000004666c9 : add byte ptr [rcx - 0x39], cl ; ret
0x000000000046b979 : add byte ptr [rcx - 0x43], al ; adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; call rax
0x000000000040833b : add byte ptr [rcx - 0x47], cl ; retf 0xcccc
0x00000000004a07ce : add byte ptr [rcx - 0x73], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4920
0x000000000041ad45 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [rcx + 0x39] ; ret 0x2273
0x0000000000470d8f : add byte ptr [rcx - 0x75], al ; or byte ptr [r8 + 0x63], r9b ; retf 0xd001
0x0000000000440504 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000000000040ed2f : add byte ptr [rcx - 0x75], cl ; sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000043490a : add byte ptr [rcx - 0x77], al ; ret
0x00000000004839eb : add byte ptr [rcx - 0x77], al ; retf 0xe0d3
0x00000000004122e1 : add byte ptr [rcx - 0x77], al ; sbb al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c095 : add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x000000000047b63f : add byte ptr [rcx - 0x77], cl ; ret 0x8348
0x000000000047b904 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000041b01f : add byte ptr [rcx - 0x77], cl ; retf 0x894d
0x000000000040ba07 : add byte ptr [rcx - 0x77], cl ; rol byte ptr [rbx - 0x7cb7fe40], 1 ; ret 0x4501
0x0000000000426f0f : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4404
0x000000000043bc2f : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000427227 : add byte ptr [rcx - 0x7d], al ; ret 0x4401
0x00000000004a0967 : add byte ptr [rcx - 0x7d], al ; ret 0x4501
0x00000000004605cf : add byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000040b8ff : add byte ptr [rcx - 0x7d], al ; ret 0x8301
0x000000000044e835 : add byte ptr [rcx - 0x7d], cl ; in eax, dx ; add ah, byte ptr [rsi - 0x3f] ; ret
0x000000000042f067 : add byte ptr [rcx - 0x7d], cl ; out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000041c127 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000443607 : add byte ptr [rcx - 0x7d], cl ; ret 0x4d14
0x000000000040d4af : add byte ptr [rcx - 0x7d], cl ; ret 0x8901
0x0000000000464e9e : add byte ptr [rcx - 0x80], al ; call qword ptr [rbx]
0x0000000000477f03 : add byte ptr [rcx - 0x80], al ; jg 0x477f6c ; add byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; retf 0xffff
0x000000000043e5bf : add byte ptr [rcx - 0xa], al ; ret 0xf24
0x000000000043e3af : add byte ptr [rcx - 0xa], al ; ret 0xf82
0x00000000004b6574 : add byte ptr [rcx - 0xa], cl ; jmp rax
0x00000000004bae0f : add byte ptr [rcx], 2 ; retf 0xe0a
0x0000000000458580 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000049b34f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004add9f : add byte ptr [rcx], al ; add dl, 0 ; add esp, ebp ; ret
0x00000000004ca613 : add byte ptr [rcx], al ; add dword ptr [rax], eax ; js 0x4ca632 ; sti ; jmp qword ptr [rbx]
0x00000000004293ac : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004adda3 : add byte ptr [rcx], al ; in al, dx ; ret
0x0000000000404838 : add byte ptr [rcx], al ; ret
0x000000000040796a : add byte ptr [rcx], al ; ret 0x458b
0x00000000004261ed : add byte ptr [rcx], al ; ret 0x6348
0x00000000004162ce : add byte ptr [rcx], al ; retf
0x00000000004ae192 : add byte ptr [rcx], al ; retf 0x201
0x000000000042e493 : add byte ptr [rcx], al ; rol byte ptr [rbp - 0x7b], 1 ; in al, 0xf ; lahf ; ret 0x448d
0x00000000004ba64b : add byte ptr [rcx], bh ; add byte ptr [rax], al ; jo 0x4ba696 ; cmc ; call qword ptr [rcx]
0x00000000004b5750 : add byte ptr [rcx], bh ; add byte ptr [rax], al ; shl byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rax]
0x0000000000415f7f : add byte ptr [rcx], bh ; ja 0x415fad ; jae 0x415f96 ; ret
0x0000000000401fe0 : add byte ptr [rcx], bh ; ret 0x1275
0x0000000000402fd4 : add byte ptr [rcx], bh ; ret 0x77e
0x0000000000477745 : add byte ptr [rcx], bh ; retf
0x00000000004287cf : add byte ptr [rcx], bh ; retf 0x4677
0x0000000000414dc1 : add byte ptr [rcx], ch ; ret
0x00000000004995df : add byte ptr [rcx], ch ; ret 0x29e8
0x0000000000499591 : add byte ptr [rcx], ch ; ret 0x77e8
0x0000000000453345 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000004052cc : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041b1dc : add byte ptr [rcx], ch ; rol bl, 1 ; xor eax, eax ; ret
0x00000000004a3956 : add byte ptr [rcx], dh ; fucomi st(0) ; ret 0xfed6
0x0000000000456f6f : add byte ptr [rcx], dh ; in eax, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000444366 : add byte ptr [rcx], dh ; leave ; jmp 0x44433a
0x000000000040f9b5 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040de1e : add byte ptr [rcx], dh ; retf 0xd031
0x00000000004471f7 : add byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf0d9c8], cl ; ret 0x8348
0x00000000004253e1 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xb ; pop rbx ; ret
0x00000000004118bb : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xd7 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000455b5a : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043b05b : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; retf 0xffda
0x000000000047c787 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; shr al, 0x9f ; ret
0x000000000040dca5 : add byte ptr [rcx], dh ; sal dl, 0xf ; adc dword ptr [rsi + 0x40], ebx ; ret
0x000000000040ecae : add byte ptr [rcx], dh ; sal dl, 0xf ; adc dword ptr [rsi + 0x40], ecx ; ret
0x000000000044e12b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; sal dword ptr [rsi + rbp*8 + 0x39], cl ; retf
0x000000000047c7a6 : add byte ptr [rcx], dh ; shr al, 0x82 ; ret
0x000000000047c76f : add byte ptr [rcx], dh ; shr al, 0xb9 ; ret
0x00000000004765e4 : add byte ptr [rcx], dh ; shr al, 0xe4 ; retf
0x0000000000440c5b : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc2 ; call 0x42d708
0x000000000040f66b : add byte ptr [rdi + 0x12], bh ; pop rbx ; ret
0x00000000004ba3e8 : add byte ptr [rdi + 0xe], bl ; adc byte ptr [rbx + 0xab40202], al ; ret
0x00000000004c8c53 : add byte ptr [rdi + rax + 1], al ; add byte ptr [rax + 0x1f], ch ; stc ; jmp qword ptr [rdi]
0x00000000004b8cb3 : add byte ptr [rdi + rax - 0x11580000], ah ; hlt ; call qword ptr [rdx]
0x00000000004b8c9b : add byte ptr [rdi + rax - 0x11600000], cl ; hlt ; call qword ptr [rbx]
0x000000000041345e : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000004ccc93 : add byte ptr [rdi + rax*2 + 0x6a80001], al ; std ; jmp qword ptr [rax]
0x00000000004bf433 : add byte ptr [rdi + rbp*2], ah ; add byte ptr [rax], al ; pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x00000000004b563b : add byte ptr [rdi + rbx - 0xb], bh ; call qword ptr [rax]
0x00000000004b94ab : add byte ptr [rdi + rcx + 0x6500000], bl ; cmc ; jmp qword ptr [rdx]
0x00000000004672df : add byte ptr [rdi + rcx - 0x4a], al ; ret 0xf43
0x0000000000407ea2 : add byte ptr [rdi + rcx - 0x4a], al ; rol dword ptr [rcx + rbp - 0x38], 0x39 ; ret 0x634c
0x00000000004b944b : add byte ptr [rdi + rcx], bh ; add byte ptr [rax], al ; and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b947b : add byte ptr [rdi + rcx], ch ; add byte ptr [rax + 6], al ; cmc ; call qword ptr [rbx]
0x00000000004b941b : add byte ptr [rdi + rcx], cl ; add byte ptr [rax], al ; adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004c045b : add byte ptr [rdi + rdi*2], cl ; add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rdi]
0x00000000004bdc8b : add byte ptr [rdi + rdx*2], bh ; add al, al ; ret
0x00000000004bbc73 : add byte ptr [rdi + rsi], ah ; add byte ptr [rax + 0x75], ch ; cmc ; call qword ptr [rdx]
0x00000000004b8977 : add byte ptr [rdi - 0x16], dl ; hlt ; call qword ptr [rbx]
0x00000000004afaf5 : add byte ptr [rdi - 0x58005801], ah ; jmp rsp
0x00000000004b556b : add byte ptr [rdi - 1], bh ; hlt ; call rax
0x00000000004b7674 : add byte ptr [rdi - 8], ah ; call rax
0x00000000004c7990 : add byte ptr [rdi - 8], dh ; call qword ptr [rdx]
0x0000000000439d6c : add byte ptr [rdi], 0xf ; ret 0x4389
0x00000000004ae05d : add byte ptr [rdi], al ; add byte ptr [r8], r10b ; je 0x4ae06f ; retf 0xcb00
0x0000000000414ff7 : add byte ptr [rdi], cl ; lahf ; ret 0xb7eb
0x000000000043552f : add byte ptr [rdi], cl ; mov bh, 0x45 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x000000000042fbef : add byte ptr [rdi], cl ; mov bh, 0x57 ; or dh, dh ; ret 0x7402
0x0000000000453307 : add byte ptr [rdi], cl ; mov dh, 0x45 ; add dword ptr [rcx - 0x7d], eax ; ret 0x4901
0x000000000040cc0f : add byte ptr [rdi], cl ; mov dh, 0x47 ; ret
0x000000000042e05a : add byte ptr [rdi], cl ; mov esi, 0x8348014b ; ret
0x000000000040f30f : add byte ptr [rdi], cl ; mov esi, 0x89d189c0 ; ret 0xe1c1
0x0000000000439f3c : add byte ptr [rdi], cl ; ret 0x23e9
0x00000000004a7d8b : add byte ptr [rdi], cl ; ret 0x4389
0x000000000045a177 : add byte ptr [rdi], cl ; ret 0x4489
0x000000000044ffa8 : add byte ptr [rdi], cl ; ret 0x4588
0x0000000000444ff5 : add byte ptr [rdi], cl ; ret 0x55e9
0x0000000000489f7b : add byte ptr [rdi], cl ; ret 0x8341
0x0000000000437035 : add byte ptr [rdi], cl ; ret 0x8348
0x0000000000407c9f : add byte ptr [rdi], cl ; ret 0x83c3
0x000000000040f580 : add byte ptr [rdi], cl ; ret 0x8841
0x0000000000425fae : add byte ptr [rdi], cl ; ret 0x8b48
0x000000000040f6bc : add byte ptr [rdi], cl ; ret 0xc35b
0x000000000043722e : add byte ptr [rdi], cl ; ret 0xc5eb
0x000000000044e93f : add byte ptr [rdi], cl ; retf
0x000000000044b695 : add byte ptr [rdi], cl ; retf 0x5389
0x00000000004822cd : add byte ptr [rdi], cl ; test byte ptr [rbx - 0x76000002], al ; retf 0xeac1
0x00000000004a700f : add byte ptr [rdi], cl ; test byte ptr [rdi*8 - 0xce0001], bh ; call rax
0x000000000042adb7 : add byte ptr [rdi], cl ; test byte ptr [rdx - 0x77000000], bl ; retf 0x8949
0x0000000000477f08 : add byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; retf 0xffff
0x0000000000405347 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x6f000004], esp ; leave ; ret
0x000000000048e93c : add byte ptr [rdi], cl ; test dword ptr [rsi], edi ; ret 0xffff
0x0000000000472c39 : add byte ptr [rdi], cl ; test eax, esp ; retf 0xffff
0x00000000004676ee : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000048772d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5ae8
0x0000000000481a7b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd009
0x000000000048665f : add byte ptr [rdi], cl ; xchg eax, ebp ; shr bl, 0x8c ; xor eax, eax ; jmp 0x48663d
0x000000000047a2ae : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000048267c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x44c7
0x00000000004a1fbe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8545
0x000000000045c19e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x00000000004266c3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc209
0x000000000044a11a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd009
0x000000000041b3f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd029
0x0000000000464e98 : add byte ptr [rdi], cl ; xchg ecx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx]
0x0000000000401de7 : add byte ptr [rdx + 0x5b], bl ; pop rbp ; ret
0x000000000049ad3d : add byte ptr [rdx + 0x63], cl ; add al, 0x98 ; add rax, rcx ; jmp rax
0x0000000000435a76 : add byte ptr [rdx + 0xdf53], bh ; jmp 0x435a48
0x0000000000407c9a : add byte ptr [rdx + 0xfffd], bh ; cmove eax, edx ; ret
0x000000000040273b : add byte ptr [rdx + 1], bh ; mov eax, edx ; pop rbx ; ret
0x00000000004b8753 : add byte ptr [rdx + rax], al ; add byte ptr [rsi], bl ; loope 0x4b8757 ; jmp qword ptr [rcx]
0x00000000004bafb3 : add byte ptr [rdx + rbp + 0x5ab80000], ah ; cmc ; call rsp
0x00000000004befc3 : add byte ptr [rdx + rbp*2 - 0xd980000], dh ; cmc ; call rbx
0x00000000004b8957 : add byte ptr [rdx + rbp*8 - 0xc], ah ; call qword ptr [rbx]
0x0000000000445833 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000004bcfa3 : add byte ptr [rdx + rcx*2 - 0x5fa80000], dl ; cmc ; jmp rdi
0x00000000004ccf13 : add byte ptr [rdx + rcx*2], al ; add dword ptr [rax], eax ; sub bpl, dil ; call rdx
0x00000000004bff53 : add byte ptr [rdx + rdi*2], al ; add byte ptr [rax], ch ; adc esi, esi ; call rax
0x00000000004bbf4b : add byte ptr [rdx + rdi], bh ; add byte ptr [rax], al ; loopne 0x4bbfd0 ; cmc ; jmp qword ptr [rax]
0x00000000004bf7a3 : add byte ptr [rdx + rsi*2 + 0x3f80000], dl ; idiv bh ; ret 1
0x00000000004b8997 : add byte ptr [rdx - 0x16], cl ; hlt ; call qword ptr [rbx]
0x00000000004b7fb4 : add byte ptr [rdx - 4], dl ; jmp qword ptr [rax]
0x00000000004b5f60 : add byte ptr [rdx], ah ; add al, dl ; retf
0x00000000004163c0 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a79a5 : add byte ptr [rdx], al ; add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; ret 0xe725
0x000000000042b59d : add byte ptr [rdx], al ; pop rbx ; ret
0x0000000000407691 : add byte ptr [rdx], dh ; mov eax, 1 ; pop rbp ; ret
0x00000000004b7474 : add byte ptr [rdx], dl ; clc ; jmp qword ptr [rax]
0x00000000004b562b : add byte ptr [rsi + 0x1f], dl ; cmc ; call rax
0x000000000048f5bc : add byte ptr [rsi + 0x34], bh ; call 0x42b7d8
0x0000000000409ec8 : add byte ptr [rsi + 0x38], al ; xor eax, eax ; ret
0x000000000040b882 : add byte ptr [rsi + 0x63], cl ; add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000436e7a : add byte ptr [rsi + 0x63], cl ; add al, 0x81 ; add rcx, r8 ; jmp rcx
0x00000000004c3f88 : add byte ptr [rsi + 0xe], al ; adc byte ptr [rbx + 0xa4d0202], al ; ret
0x0000000000475fee : add byte ptr [rsi + 0xf], ah ; ret
0x000000000049d74d : add byte ptr [rsi + 0xf], ah ; retf 0x860f
0x00000000004b8bb3 : add byte ptr [rsi + rax - 0x14d70000], ah ; hlt ; call qword ptr [rsi]
0x00000000004170f7 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004b8b33 : add byte ptr [rsi + rax], ah ; add byte ptr [rax], al ; sbb ch, bl ; hlt ; call qword ptr [rbx]
0x00000000004be3c3 : add byte ptr [rsi + rbx*2 - 0x23380000], dh ; cmc ; call qword ptr [rsi]
0x00000000004c23b3 : add byte ptr [rsi + rbx*4 - 0x56680000], ah ; idiv bh ; retf
0x00000000004c63cb : add byte ptr [rsi + rbx*8 - 0x16a00000], bh ; idiv edi ; retf 3
0x0000000000407c8d : add byte ptr [rsi + rbx*8 - 0x77], dh ; ret 0xe283
0x00000000004c93ab : add byte ptr [rsi + rcx - 0x41afffff], bl ; stc ; call qword ptr [rbx]
0x00000000004bd39b : add byte ptr [rsi + rcx*2 - 0x57900000], cl ; cmc ; jmp qword ptr [rdi]
0x00000000004bc3c3 : add byte ptr [rsi + rdi + 0x7f680000], dh ; cmc ; call rsi
0x00000000004bdb73 : add byte ptr [rsi + rdx*2], ah ; add byte ptr [rax], bh ; ret 0xfff5
0x00000000004bbbab : add byte ptr [rsi + rsi + 0x72b00000], bl ; cmc ; call qword ptr [rdx]
0x00000000004b8917 : add byte ptr [rsi - 0x16], bh ; hlt ; call qword ptr [rbx]
0x00000000004146da : add byte ptr [rsi - 0x3f], ah ; clc ; xadd edx, edi ; adc ch, byte ptr [rcx] ; ret 0x48d
0x000000000041ffb9 : add byte ptr [rsi - 0x77], ah ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000041104f : add byte ptr [rsi - 0x7d], ah ; jg 0x411093 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000044daef : add byte ptr [rsi - 0x7d], ah ; js 0x44db2a ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004b553b : add byte ptr [rsi], ah ; hlt ; hlt ; call qword ptr [rax]
0x00000000004b9390 : add byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b8757 : add byte ptr [rsi], bl ; loope 0x4b8753 ; jmp qword ptr [rcx]
0x00000000004b8557 : add byte ptr [rsi], cl ; ret
0x00000000004b55bb : add byte ptr [rsi], dh ; adc al, 0xf5 ; call qword ptr [rax]
0x00000000004b8993 : add byte ptr [rsp + rax - 0x15b60000], al ; hlt ; call qword ptr [rbx]
0x00000000004b89b3 : add byte ptr [rsp + rax - 0x15c30000], ah ; hlt ; call qword ptr [rbx]
0x0000000000409cf9 : add byte ptr [rsp + rax - 0x75], dh ; add al, 0xc3 ; xor eax, eax ; ret
0x000000000045a589 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000004b8933 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; jno 0x4b892c ; hlt ; call qword ptr [rbx]
0x00000000004b8973 : add byte ptr [rsp + rax], ah ; add byte ptr [rdi - 0x16], dl ; hlt ; call qword ptr [rbx]
0x00000000004b8913 : add byte ptr [rsp + rax], al ; add byte ptr [rax], al ; jle 0x4b890c ; hlt ; call qword ptr [rbx]
0x00000000004b8953 : add byte ptr [rsp + rax], al ; add byte ptr [rdx + rbp*8 - 0xc], ah ; call qword ptr [rbx]
0x00000000004c417b : add byte ptr [rsp + rdi*4], ch ; add al, ah ; sub al, 0xf7 ; call qword ptr [rdx]
0x00000000004c19b3 : add byte ptr [rsp + rdx*4 - 0x74280000], ah ; idiv bh ; retf 0
0x0000000000418bc1 : add byte ptr [rsp + rsi*4 - 0xd], dh ; ret
0x00000000004c798b : add byte ptr [rsp + rsi*8], bh ; add byte ptr [rax], al ; ja 0x4c7993 ; call qword ptr [rdx]
0x00000000004c29b3 : add byte ptr [rsp - 0x2ec80000], ah ; idiv bh ; ret 0
0x00000000004add9b : add byte ptr [rsp], al ; ret 0x100
0x00000000004ca93b : add byte ptr [rsp], ch ; add dword ptr [rax], eax ; loopne 0x4ca993 ; sti ; jmp rdi
0x00000000004817fc : add byte ptr es:[rax], al ; add al, ch ; retf
0x000000000046c0d3 : add byte ptr es:[rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b8574 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x3b], cl ; hlt ; call rax
0x0000000000448f89 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004965e9 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; je 0x496601 ; xor eax, eax ; ret
0x00000000004792cc : add byte ptr fs:[rax], al ; add cl, ch ; retf 0xfffe
0x00000000004beaed : add byte ptr gs:[rax], al ; add ah, ch ; cmc ; jmp rsi
0x00000000004802f8 : add byte ptr gs:[rax], al ; add byte ptr [rcx - 0x17dfdbbc], cl ; retf
0x000000000042b771 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000414dc0 : add byte ptr gs:[rcx], ch ; ret
0x00000000004b56a9 : add byte ptr ss:[rax], al ; jmp qword ptr [rcx]
0x00000000004bbbad : add byte ptr ss:[rax], al ; mov al, 0x72 ; cmc ; call qword ptr [rdx]
0x00000000004b5689 : add byte ptr ss:[rax], al ; retf
0x0000000000411053 : add byte ptr ss:[rcx + rcx - 0xd], dh ; ret
0x000000000042963f : add ch, al ; retf
0x000000000043208f : add ch, bl ; fcomp st(5) ; fdiv st(3) ; ret
0x00000000004bc6f5 : add ch, byte ptr [rbp + 0xa] ; ret
0x00000000004b9ba1 : add ch, byte ptr [rbp + 0xe] ; adc byte ptr [rbx + 0xa690202], al ; ret
0x00000000004b9ba7 : add ch, byte ptr [rcx + 0xa] ; ret
0x00000000004083f4 : add ch, byte ptr [rcx] ; ret 0xc26b
0x00000000004087b8 : add ch, cl ; retf
0x000000000047567f : add ch, cl ; retf 0xffdb
0x00000000004baaf7 : add ch, dl ; ret
0x000000000042501c : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b6b94 : add cl, 0xf6 ; ljmp [rax + 0xac] ; ret 0xfff6
0x00000000004b0825 : add cl, ah ; add ecx, dword ptr [rdi] ; add eax, 0x3b202d8 ; syscall
0x000000000042e2e4 : add cl, bl ; ret 0xc9d8
0x000000000042ecc3 : add cl, byte ptr [r8 - 0x7d] ; ret
0x000000000040c3dd : add cl, byte ptr [r9 - 0x77] ; ret
0x00000000004081e9 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004081d2 : add cl, byte ptr [rax + 0x29] ; retf 0x8948
0x00000000004263b8 : add cl, byte ptr [rax - 0x77] ; ret
0x000000000042ecc4 : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004913f6 : add cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000004479b2 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000004273b8 : add cl, byte ptr [rax - 0x7d] ; ret 0xa801
0x0000000000473752 : add cl, byte ptr [rax - 0x7d] ; ret 0xa838
0x0000000000481675 : add cl, byte ptr [rax - 0x7d] ; ret 0xd030
0x000000000041b80c : add cl, byte ptr [rax] ; ret
0x000000000040d7dc : add cl, byte ptr [rax] ; ret 0xef75
0x0000000000465b43 : add cl, byte ptr [rbp + 0x39] ; retf
0x00000000004c3f8e : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000041ad74 : add cl, byte ptr [rcx + 0x39] ; ror dword ptr [rax + 0xf], cl ; ret 0x1f0f
0x000000000045028d : add cl, byte ptr [rcx - 0x6bf0be33] ; ret 0x8041
0x000000000040c3de : add cl, byte ptr [rcx - 0x77] ; ret
0x000000000040d7ac : add cl, byte ptr [rcx] ; ret 0xe281
0x0000000000434a75 : add cl, byte ptr [rdi + rcx - 0x51] ; retf
0x000000000043a2e3 : add cl, byte ptr [rdi] ; mov bh, 0x43 ; xor bl, ch ; ret
0x0000000000484d74 : add cl, byte ptr [rdi] ; test ah, bl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x74fe
0x000000000046bb99 : add cl, byte ptr [rdi] ; test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x0000000000410b36 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000043ff02 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xb60f
0x00000000004bbab2 : add cl, byte ptr [rdx + 0xa] ; ret
0x000000000042ec92 : add cl, ch ; ret
0x0000000000472c58 : add cl, ch ; ret 0xffca
0x000000000047720a : add cl, ch ; ret 0xffd0
0x00000000004a4020 : add cl, ch ; ret 0xffe1
0x000000000042f298 : add cl, ch ; ret 0xfffc
0x0000000000498344 : add cl, ch ; ret 0xfffd
0x00000000004247cc : add cl, ch ; ret 0xfffe
0x000000000047daa4 : add cl, ch ; retf
0x00000000004323d0 : add cl, ch ; retf 0xfd77
0x000000000048f630 : add cl, ch ; retf 0xffca
0x00000000004618c0 : add cl, ch ; retf 0xffda
0x000000000043808b : add cl, ch ; retf 0xfffd
0x0000000000420c90 : add cl, ch ; retf 0xfffe
0x000000000040328e : add cl, ch ; syscall
0x0000000000405915 : add cl, cl ; ret
0x0000000000415cef : add dh, al ; adc al, 1 ; sub dword ptr [rdx + 0x28], 1 ; ret
0x000000000044e32f : add dh, al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000042b80c : add dh, al ; add dword ptr [r8], r8d ; ret
0x0000000000416ff2 : add dh, al ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000041d69a : add dh, al ; jno 0x41d6a9 ; mov rax, rdx ; pop rbx ; ret
0x0000000000472c54 : add dh, al ; push r14 ; add cl, ch ; ret 0xffca
0x000000000041ccff : add dh, al ; sbb al, 1 ; xor eax, eax ; ret
0x000000000041154a : add dh, al ; sub byte ptr [r9], r8b ; ret
0x00000000004b81c5 : add dh, bh ; jmp rax
0x000000000046c224 : add dh, bl ; ret
0x00000000004bae48 : add dh, byte ptr [rax + 0xa] ; ret
0x0000000000415093 : add dh, byte ptr [rbp + 0xa] ; ret
0x0000000000484dd2 : add dh, byte ptr [rbx - 0xa] ; ret 0x74fe
0x00000000004b6174 : add dh, ch ; cmc ; jmp qword ptr [rax]
0x00000000004af747 : add dh, cl ; call qword ptr [rdi]
0x00000000004b624d : add dh, dh ; call qword ptr [rax]
0x00000000004ac1c1 : add dh, dh ; call rsp
0x00000000004ac205 : add dh, dh ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x0000000000423df9 : add dh, dh ; ret
0x000000000045b387 : add dh, dh ; ret 0x4120
0x00000000004178a0 : add dh, dh ; ret 0x7408
0x0000000000484d7a : add dh, dh ; ret 0x74fe
0x000000000040fb07 : add dh, dh ; ret 0xf04
0x000000000045b240 : add dh, dh ; ret 0xf05
0x000000000041508f : add dh, dh ; sub al, 2 ; jne 0x4150a7 ; ret
0x00000000004998eb : add dil, byte ptr [rcx] ; ret
0x000000000041b40f : add dil, r15b ; ret
0x00000000004adda1 : add dl, 0 ; add esp, ebp ; ret
0x00000000004b7d54 : add dl, ah ; cli ; call rax
0x00000000004b5ef4 : add dl, al ; cmc ; push qword ptr [rax - 0x2fffffa1] ; ret 0xfff5
0x000000000048d7b9 : add dl, bh ; inc dword ptr [rbp - 0x75] ; xor al, 0x24 ; jmp 0x48a201
0x00000000004af3bf : add dl, bl ; add ebx, dword ptr [rax] ; add eax, 0x5180518 ; ret 0xc204
0x00000000004c328f : add dl, byte ptr [rbx + 0xa] ; ret
0x00000000004bb65e : add dl, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000004bf068 : add dl, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000040dbda : add dl, dh ; movups xmmword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; pop rbx ; ret
0x00000000004191f0 : add dword ptr [r8 + 0xc], 1 ; xor eax, eax ; ret
0x00000000004191e6 : add dword ptr [r8 + 8], 1 ; xor eax, eax ; ret
0x0000000000419622 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000004cc8e5 : add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rax]
0x00000000004cc905 : add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004cc86d : add dword ptr [r8], eax ; shl al, 0xfc ; call rax
0x00000000004b7e51 : add dword ptr [r8], r8d ; adc byte ptr [rbx - 5], bl ; call qword ptr [rax]
0x00000000004ccce5 : add dword ptr [r8], r8d ; js 0x4cccfc ; std ; call qword ptr [rdx]
0x00000000004b7e99 : add dword ptr [r8], r8d ; mov al, 0x6c ; sti ; jmp rax
0x000000000042b80e : add dword ptr [r8], r8d ; ret
0x00000000004ccc95 : add dword ptr [r8], r8d ; test al, 6 ; std ; jmp qword ptr [rax]
0x000000000045330a : add dword ptr [r9 - 0x7d], r8d ; ret 0x4901
0x000000000047868a : add dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000040efbf : add dword ptr [rax + 0x2e], 1 ; ret
0x00000000004397d5 : add dword ptr [rax + 0x39], ecx ; ret 0xf375
0x0000000000441304 : add dword ptr [rax + 0x63], ecx ; add eax, dword ptr [rbx - 0x7cb7fe3f] ; ret 0x390c
0x000000000049aab7 : add dword ptr [rax + 0x63], ecx ; ret
0x00000000004191f1 : add dword ptr [rax + 0xc], 1 ; xor eax, eax ; ret
0x0000000000471830 : add dword ptr [rax + 0xf], ecx ; retf 0x8b41
0x000000000044c101 : add dword ptr [rax + 1], ecx ; ret
0x00000000004b0c61 : add dword ptr [rax + 1], edi ; ret
0x00000000004191e7 : add dword ptr [rax + 8], 1 ; xor eax, eax ; ret
0x000000000042988c : add dword ptr [rax + rcx - 0x7d], esi ; ret
0x00000000004a68d8 : add dword ptr [rax + rcx*2], -0x73 ; ret
0x000000000049a130 : add dword ptr [rax + rcx*2], -0x77 ; ror dword ptr [rcx - 0x77], cl ; retf 0x1f0f
0x000000000041b494 : add dword ptr [rax + rcx*4 + 2], eax ; mov dword ptr [rdi + 8], eax ; ret
0x00000000004adda0 : add dword ptr [rax - 0x13feff3e], eax ; ret
0x000000000040b2fd : add dword ptr [rax - 0x68], ecx ; movzx eax, byte ptr [rdx + rax] ; ret
0x000000000040e01b : add dword ptr [rax - 0x73], ecx ; add dword ptr [rax - 0x77], ecx ; ret 0xe074
0x000000000044cab7 : add dword ptr [rax - 0x75], ecx ; jl 0x44cadc ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000451e28 : add dword ptr [rax - 0x76b7fead], ecx ; insb byte ptr [rdi], dx ; ret
0x000000000042588f : add dword ptr [rax - 0x77], ecx ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041ec09 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000451e2b : add dword ptr [rax - 0x77], ecx ; insb byte ptr [rdi], dx ; ret
0x000000000044daf4 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000043152a : add dword ptr [rax - 0x77], ecx ; ret 0x2076
0x000000000043f685 : add dword ptr [rax - 0x77], ecx ; ret 0x214c
0x0000000000419c3e : add dword ptr [rax - 0x77], ecx ; ret 0x3975
0x000000000044f3d9 : add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x0000000000437c44 : add dword ptr [rax - 0x77], ecx ; ret 0x875
0x00000000004a23ed : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x000000000040e01f : add dword ptr [rax - 0x77], ecx ; ret 0xe074
0x0000000000428334 : add dword ptr [rax - 0x77], ecx ; retf
0x00000000004a0146 : add dword ptr [rax - 0x77], ecx ; retf 0xf8d1
0x0000000000429a0f : add dword ptr [rax - 0x77], ecx ; std ; test rax, rax ; je 0x429a23 ; call rax
0x00000000004a4846 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0xc], 1 ; retf 0x8941
0x0000000000461f28 : add dword ptr [rax - 0x7d], ecx ; mov byte ptr [rcx], 0xeb ; fisttp word ptr [rax - 0x77] ; ret
0x000000000040a68e : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000486d63 : add dword ptr [rax - 0x7d], ecx ; ret 0x3902
0x000000000047d274 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x000000000044130a : add dword ptr [rax - 0x7d], ecx ; ret 0x390c
0x0000000000420b47 : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x000000000044a8b0 : add dword ptr [rax - 0x7d], ecx ; ret 0x3930
0x000000000042f06b : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000040a058 : add dword ptr [rax - 0x7d], ecx ; ret 0x4120
0x000000000040b986 : add dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000045898b : add dword ptr [rax - 0x7d], ecx ; ret 0x4202
0x0000000000449af7 : add dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x000000000040ba0d : add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x0000000000460153 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041ba9a : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000000000485146 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000045cf42 : add dword ptr [rax - 0x7d], ecx ; ret 0x4870
0x00000000004a07d2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4920
0x000000000040fcef : add dword ptr [rax - 0x7d], ecx ; ret 0x6602
0x00000000004a07f8 : add dword ptr [rax - 0x7d], ecx ; ret 0x8520
0x000000000040b8bd : add dword ptr [rax - 0x7d], ecx ; ret 0xf601
0x00000000004970a2 : add dword ptr [rax - 0x7d], ecx ; shr byte ptr [rax], 0x39 ; retf 0x840f
0x00000000004c088d : add dword ptr [rax], 0 ; xor byte ptr [rsi + rsi*8], bh ; call qword ptr [rsi]
0x00000000004293ab : add dword ptr [rax], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b809a : add dword ptr [rax], eax ; adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x00000000004b82f2 : add dword ptr [rax], eax ; adc byte ptr [rbp - 2], ch ; jmp rax
0x00000000004b7e52 : add dword ptr [rax], eax ; adc byte ptr [rbx - 5], bl ; call qword ptr [rax]
0x00000000004b7a62 : add dword ptr [rax], eax ; adc byte ptr [rsi - 7], bh ; call rax
0x00000000004b7c2a : add dword ptr [rax], eax ; adc byte ptr [rsi], al ; cli ; jmp rax
0x000000000042e31e : add dword ptr [rax], eax ; add al, bl ; retf
0x00000000004a2e45 : add dword ptr [rax], eax ; add al, ch ; ret
0x000000000046d646 : add dword ptr [rax], eax ; add al, ch ; ret 0xfa49
0x00000000004a55c6 : add dword ptr [rax], eax ; add al, ch ; ret 0xfc6a
0x00000000004b7d8a : add dword ptr [rax], eax ; add bh, ch ; cli ; call rax
0x00000000004598b9 : add dword ptr [rax], eax ; add bh, dh ; ret
0x0000000000453bbb : add dword ptr [rax], eax ; add bl, ch ; retf 0x8d48
0x00000000004a45dd : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x149
0x0000000000494074 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; retf 0x8b41
0x000000000040bab2 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x00000000004303b3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x76b6d2c8], al ; ret 0x44c7
0x0000000000412adc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000403ec2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000046a27e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000469fda : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x000000000045a56c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000040b266 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049b127 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000000000046d287 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000461e40 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe838
0x00000000004a1eee : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c7
0x000000000040c5c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000418a80 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cdqe ; pop rbx ; ret
0x00000000004a5563 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x4a5578 ; xor eax, eax ; ret
0x000000000041b184 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x41b196 ; ret
0x0000000000405912 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x0000000000420589 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rbx], 0xa0 ; pop rbx ; ret
0x0000000000411547 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000040bac2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040273d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000416759 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x0000000000411eda : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call r12
0x0000000000429e1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rdi + 8], ax ; pop rbx ; ret
0x000000000042121c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rdi + 8], ax ; ret
0x0000000000408812 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419b02 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000041a11b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r14 ; ret
0x00000000004071d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040dea7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418127 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041fa21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000401e78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004711a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000419d19 : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; ret
0x000000000041b1d9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; sub eax, edx ; ret
0x000000000040e943 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041b7d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, edx ; pop rbx ; ret
0x000000000040a7d8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], al ; retf 0x840f
0x0000000000491382 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000040206e : add dword ptr [rax], eax ; add byte ptr [rbp + rbx + 0x79], dh ; sbb byte ptr [rax + 0x69], cl ; ret
0x000000000044725e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x1be
0x000000000042eb62 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb72faf], cl ; ret
0x00000000004119a3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000041189b : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000460539 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76bbfe16], al ; retf
0x0000000000483df1 : add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000408339 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x47], cl ; retf 0xcccc
0x00000000004a07cc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4920
0x000000000041ad43 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [rcx + 0x39] ; ret 0x2273
0x00000000004135eb : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x000000000049912b : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000045454f : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000444ff3 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x55e9
0x0000000000489f79 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8341
0x00000000004b7fb2 : add dword ptr [rax], eax ; add byte ptr [rdx - 4], dl ; jmp qword ptr [rax]
0x000000000049d74b : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; retf 0x860f
0x000000000045a587 : add dword ptr [rax], eax ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000467767 : add dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000484d78 : add dword ptr [rax], eax ; add dh, dh ; ret 0x74fe
0x00000000004b7d52 : add dword ptr [rax], eax ; add dl, ah ; cli ; call rax
0x00000000004b7caa : add dword ptr [rax], eax ; and byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x00000000004b7f9a : add dword ptr [rax], eax ; and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x00000000004cc786 : add dword ptr [rax], eax ; call 0x244cc468
0x00000000004cc785 : add dword ptr [rax], eax ; call 0x244cc469
0x00000000004cbe26 : add dword ptr [rax], eax ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x00000000004c9e96 : add dword ptr [rax], eax ; cmp dl, dil ; jmp qword ptr [rax]
0x00000000004c9cf6 : add dword ptr [rax], eax ; cwde ; cli ; call rsp
0x00000000004b775a : add dword ptr [rax], eax ; jo 0x4b7717 ; clc ; jmp rax
0x00000000004b7c6a : add dword ptr [rax], eax ; jo 0x4b7c88 ; cli ; call rax
0x00000000004b7d5a : add dword ptr [rax], eax ; jo 0x4b7d45 ; cli ; call qword ptr [rax]
0x00000000004b7dc2 : add dword ptr [rax], eax ; jo 0x4b7dcc ; sti ; call qword ptr [rax]
0x00000000004b80da : add dword ptr [rax], eax ; jo 0x4b8090 ; std ; jmp qword ptr [rax]
0x00000000004cc4de : add dword ptr [rax], eax ; jo 0x4cc49e ; cld ; jmp rdx
0x00000000004cd0ae : add dword ptr [rax], eax ; jo 0x4cd0ed ; std ; jmp rdi
0x00000000004c8d66 : add dword ptr [rax], eax ; js 0x4c8dd3 ; stc ; call rdx
0x00000000004ca616 : add dword ptr [rax], eax ; js 0x4ca62f ; sti ; jmp qword ptr [rbx]
0x00000000004ccce6 : add dword ptr [rax], eax ; js 0x4cccfb ; std ; call qword ptr [rdx]
0x00000000004b77da : add dword ptr [rax], eax ; loopne 0x4b77bd ; clc ; jmp rax
0x00000000004b7f12 : add dword ptr [rax], eax ; loopne 0x4b7e9f ; sti ; call rax
0x00000000004ca93e : add dword ptr [rax], eax ; loopne 0x4ca990 ; sti ; jmp rdi
0x00000000004ccbfe : add dword ptr [rax], eax ; loopne 0x4ccc0a ; std ; call rdi
0x00000000004cd8be : add dword ptr [rax], eax ; loopne 0x4cd875 ; std ; call qword ptr [rax]
0x00000000004b7a0a : add dword ptr [rax], eax ; mov al, 0x57 ; stc ; jmp rax
0x00000000004b7e9a : add dword ptr [rax], eax ; mov al, 0x6c ; sti ; jmp rax
0x000000000041b181 : add dword ptr [rax], eax ; mov eax, 1 ; jne 0x41b199 ; ret
0x0000000000401fa5 : add dword ptr [rax], eax ; mov eax, ebp ; pop rdx ; pop rbx ; pop rbp ; ret
0x00000000004020c3 : add dword ptr [rax], eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495d04 : add dword ptr [rax], eax ; mov rdi, rbx ; xor eax, eax ; call 0x441fa9
0x000000000049ad3c : add dword ptr [rax], eax ; movsxd rax, dword ptr [rax + r11*4] ; add rax, rcx ; jmp rax
0x00000000004989e5 : add dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000004b8262 : add dword ptr [rax], eax ; nop ; and bh, dh ; call qword ptr [rax]
0x00000000004b7a2a : add dword ptr [rax], eax ; nop ; movsxd rdi, ecx ; call rax
0x00000000004b792a : add dword ptr [rax], eax ; nop ; sbb edi, ecx ; jmp qword ptr [rax]
0x00000000004cd06e : add dword ptr [rax], eax ; nop ; std ; call qword ptr [rax]
0x000000000042b597 : add dword ptr [rax], eax ; or word ptr [rbx + 8], 0x200 ; pop rbx ; ret
0x00000000004cb106 : add dword ptr [rax], eax ; pop rax ; mov dl, 0xfb ; call rdi
0x000000000042508d : add dword ptr [rax], eax ; pop rbx ; ret
0x00000000004b831a : add dword ptr [rax], eax ; push rax ; jae 0x4b8322 ; jmp qword ptr [rax]
0x00000000004b7ada : add dword ptr [rax], eax ; push rax ; xchg eax, ecx ; stc ; jmp qword ptr [rax]
0x00000000004b821a : add dword ptr [rax], eax ; rcl byte ptr [rcx], 0xfe ; call rax
0x00000000004b7c8a : add dword ptr [rax], eax ; rcl byte ptr [rdi], 1 ; cli ; call rax
0x000000000042b80f : add dword ptr [rax], eax ; ret
0x00000000004b81da : add dword ptr [rax], eax ; ror byte ptr [rsi + rdi*8], 1 ; call rax
0x00000000004b786a : add dword ptr [rax], eax ; sar ah, 0xf8 ; jmp qword ptr [rax]
0x00000000004b833a : add dword ptr [rax], eax ; sar byte ptr [rcx - 2], 1 ; jmp qword ptr [rax]
0x00000000004cc8e6 : add dword ptr [rax], eax ; sbb al, bh ; cld ; jmp qword ptr [rax]
0x00000000004cc906 : add dword ptr [rax], eax ; sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004ca0e6 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 6], cl ; call qword ptr [rdx]
0x00000000004b7c92 : add dword ptr [rax], eax ; sbb byte ptr [rdx], 0xfa ; jmp qword ptr [rax]
0x00000000004c85b6 : add dword ptr [rax], eax ; sbb ch, bl ; clc ; call rdx
0x00000000004cc86e : add dword ptr [rax], eax ; shl al, 0xfc ; call rax
0x00000000004b83f2 : add dword ptr [rax], eax ; shr ch, 0xfe ; call rax
0x00000000004ccf16 : add dword ptr [rax], eax ; sub bpl, dil ; call rdx
0x00000000004ccb66 : add dword ptr [rax], eax ; test al, 2 ; std ; call rdi
0x00000000004ccc96 : add dword ptr [rax], eax ; test al, 6 ; std ; jmp qword ptr [rax]
0x00000000004cd08e : add dword ptr [rax], eax ; xor byte ptr [rsi], 0xfd ; call qword ptr [rax]
0x00000000004b7bd2 : add dword ptr [rax], eax ; xor dh, dh ; stc ; jmp qword ptr [rax]
0x00000000004038e1 : add dword ptr [rax], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000482874 : add dword ptr [rax], edi ; ret 0x850f
0x00000000004ccbfd : add dword ptr [rax], r8d ; loopne 0x4ccc0b ; std ; call rdi
0x000000000042508c : add dword ptr [rax], r8d ; pop rbx ; ret
0x00000000004ccb65 : add dword ptr [rax], r8d ; test al, 2 ; std ; call rdi
0x000000000041d6d5 : add dword ptr [rbp + 0x144789c0], eax ; je 0x41d6e8 ; ret
0x0000000000408f7e : add dword ptr [rbp + 0x17], esi ; mov word ptr [rdi + 0x2c], dx ; ret
0x000000000048510d : add dword ptr [rbp + 0x39440150], ecx ; ret 0x8941
0x0000000000420630 : add dword ptr [rbp + rbx - 0xd], esi ; ret
0x0000000000483821 : add dword ptr [rbp + rcx*4 + 0x3d], ecx ; retf 0x276
0x000000000040bbfd : add dword ptr [rbp - 0x10], esi ; mov dword ptr [rsi], 0x9f ; ret
0x000000000040ef05 : add dword ptr [rbp - 0x18], esi ; and eax, 0x7fffffff ; pop rbx ; ret
0x0000000000436ecb : add dword ptr [rbp - 0x2d], edi ; movsx eax, byte ptr [rdx + 0x14] ; ret
0x00000000004107f4 : add dword ptr [rbp - 0x41f02fa9], ecx ; sar byte ptr [rcx], cl ; retf 0x517f
0x0000000000435ad6 : add dword ptr [rbp - 0x77], eax ; retf
0x0000000000426dd1 : add dword ptr [rbp - 0x77], ecx ; std ; jmp 0x426d9f
0x000000000041e0c3 : add dword ptr [rbp - 0x7ca4f8bd], ecx ; loopne 0x41e0cb ; ret
0x000000000041533a : add dword ptr [rbp - 0xcf68a0a], eax ; ret
0x000000000044576d : add dword ptr [rbx + 0x18], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042dd6b : add dword ptr [rbx + 0x18], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042dd6a : add dword ptr [rbx + 0x18], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486936 : add dword ptr [rbx + 0x39302444], ecx ; ret
0x000000000040f140 : add dword ptr [rbx + 0x394980e2], eax ; ret 0xd689
0x000000000047ad34 : add dword ptr [rbx + 0x50], 1 ; mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000040e2a7 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041dc41 : add dword ptr [rbx + 0x60], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b903 : add dword ptr [rbx + 0x634c01c2], eax ; ret 0xf42
0x00000000004b0d9d : add dword ptr [rbx + 3], edx ; sbb byte ptr [rbx], al ; retf
0x0000000000444482 : add dword ptr [rbx + rbp*2 - 0x7d], esi ; ret 0x8101
0x0000000000407e30 : add dword ptr [rbx - 0x258a0007], eax ; xor eax, eax ; ret
0x00000000004199bd : add dword ptr [rbx - 0x75], ebx ; adc al, 0x5d ; pop r12 ; ret
0x0000000000431fe3 : add dword ptr [rbx - 0x76bbfe1f], eax ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004ba52a : add dword ptr [rbx], 2 ; ret
0x00000000004c5855 : add dword ptr [rbx], eax ; ret
0x00000000004c9174 : add dword ptr [rbx], eax ; ret 0xa01
0x00000000004c53ca : add dword ptr [rbx], eax ; retf
0x0000000000444487 : add dword ptr [rcx + 0x1fffe2], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000004614a2 : add dword ptr [rcx + 0x39], eax ; retf 0xed75
0x000000000041ae05 : add dword ptr [rcx + 0x39], ecx ; ret 0xe575
0x000000000041b008 : add dword ptr [rcx + 0x39], ecx ; retf 0xf275
0x00000000004936dd : add dword ptr [rcx + 0x63], ecx ; ret 0x8d48
0x00000000004c9170 : add dword ptr [rcx + 0xe], eax ; nop ; add dword ptr [rbx], eax ; ret 0xa01
0x0000000000426d48 : add dword ptr [rcx + 1], eax ; ret
0x00000000004a1d87 : add dword ptr [rcx + rcx*4 + 0x1c], eax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000004496ad : add dword ptr [rcx + rcx*4 - 0x11], ecx ; call 0x425976
0x0000000000431fe6 : add dword ptr [rcx + rcx*4 - 0x40], eax ; sub eax, ecx ; ret
0x000000000041ad67 : add dword ptr [rcx + rcx*8 + 0x39496475], eax ; ret 0xef72
0x000000000040f95c : add dword ptr [rcx + rdi + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x000000000043d984 : add dword ptr [rcx + rdi - 0x77], esi ; retf 0x8948
0x000000000042fc14 : add dword ptr [rcx + rdx - 0xd], esi ; ret
0x000000000042fdf5 : add dword ptr [rcx - 0x3b7cb7ed], ecx ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040cc85 : add dword ptr [rcx - 0x3fceb7b0], ecx ; ret
0x000000000040d7d6 : add dword ptr [rcx - 0x49f0be3e], ecx ; add cl, byte ptr [rax] ; ret 0xef75
0x000000000040d7a6 : add dword ptr [rcx - 0x49f0be3e], ecx ; add cl, byte ptr [rcx] ; ret 0xe281
0x0000000000419e2d : add dword ptr [rcx - 0x73], ecx ; pop rbp ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000426419 : add dword ptr [rcx - 0x77], eax ; ret 0xc148
0x000000000048e9a8 : add dword ptr [rcx - 0x77], ecx ; ret 0x8d48
0x000000000049584a : add dword ptr [rcx - 0x7d], eax ; call qword ptr [rbx]
0x0000000000450675 : add dword ptr [rcx - 0x7d], eax ; ret 0x4104
0x000000000045070b : add dword ptr [rcx - 0x7d], eax ; ret 0x4504
0x000000000045330b : add dword ptr [rcx - 0x7d], eax ; ret 0x4901
0x000000000047de37 : add dword ptr [rcx - 0x7d], eax ; ret 0x4d01
0x000000000040c1cd : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004a5257 : add dword ptr [rcx - 0x7d], ecx ; ret 0x3904
0x0000000000435537 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000040a5f3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4110
0x000000000043af86 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4120
0x0000000000439443 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4130
0x00000000004370c3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4401
0x0000000000439623 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4430
0x0000000000418ac7 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4520
0x000000000040acae : add dword ptr [rcx - 0x7d], ecx ; ret 0x4904
0x0000000000417725 : add dword ptr [rcx - 0x7d], ecx ; stc ; jg 0x4177aa ; xor dword ptr [rcx - 0x7d], ecx ; ret 0x4108
0x00000000004b8479 : add dword ptr [rcx], 0xff24c000 ; jmp qword ptr [rax]
0x0000000000452704 : add dword ptr [rcx], eax ; ret 0x6348
0x0000000000484c0f : add dword ptr [rcx], eax ; ret 0x8b48
0x000000000042b048 : add dword ptr [rcx], eax ; retf 0x394c
0x000000000040eb94 : add dword ptr [rcx], eax ; retf 0x4783
0x000000000049e8e2 : add dword ptr [rcx], ebp ; ret
0x000000000040a6d4 : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 6 ; ret
0x0000000000409919 : add dword ptr [rcx], ecx ; retf 0x9088
0x000000000046ae5b : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000451558 : add dword ptr [rcx], edi ; ret
0x000000000045153c : add dword ptr [rcx], edi ; ret 0x440f
0x000000000040d240 : add dword ptr [rcx], edi ; ret 0x850f
0x000000000047bfd8 : add dword ptr [rcx], edi ; ret 0x8e0f
0x000000000043e6ce : add dword ptr [rcx], edi ; ret 0x8f0f
0x0000000000451e66 : add dword ptr [rcx], edi ; ret 0x927d
0x0000000000488cd3 : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000004584ff : add dword ptr [rcx], edi ; ret 0xf47f
0x0000000000431280 : add dword ptr [rcx], edi ; retf
0x000000000043e692 : add dword ptr [rcx], edi ; retf 0x8d0f
0x000000000048e2d4 : add dword ptr [rcx], edi ; retf 0xe775
0x00000000004180e4 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407d99 : add dword ptr [rcx], esi ; shr byte ptr [rcx], 0xd0 ; ret
0x000000000049aad5 : add dword ptr [rcx], esp ; retf 0x8348
0x00000000004135e8 : add dword ptr [rdi + 0x150], 1 ; ret
0x000000000040efba : add dword ptr [rdi + 0x18], 1 ; add word ptr [rax + 0x2e], 1 ; ret
0x000000000041538a : add dword ptr [rdi + 0x28], 1 ; mov byte ptr [rax + 0x14], 0 ; ret
0x0000000000417c20 : add dword ptr [rdi + 0xc], edx ; ret
0x000000000040eb97 : add dword ptr [rdi + 8], 1 ; xor eax, eax ; mov dword ptr [rdi + 0x10], edx ; ret
0x00000000004bf25e : add dword ptr [rdi + rdi*2], 0xa ; ret
0x00000000004bc726 : add dword ptr [rdi + rsi*2], 0xa ; ret
0x00000000004b0c5b : add dword ptr [rdi], ecx ; mov ah, 1 ; mov bl, 1 ; js 0x4b0c6e ; ret
0x0000000000407d95 : add dword ptr [rdi], ecx ; mov dh, 0x14 ; add dword ptr [rcx], esi ; shr byte ptr [rcx], 0xd0 ; ret
0x00000000004a4f4f : add dword ptr [rdi], ecx ; ret 0x4389
0x000000000048faeb : add dword ptr [rdi], ecx ; ret 0xf8c1
0x00000000004a0df4 : add dword ptr [rdi], ecx ; retf 0x1089
0x0000000000497838 : add dword ptr [rdi], ecx ; sahf ; ret 0xc031
0x000000000045b23a : add dword ptr [rdi], ecx ; test bh, cl ; add byte ptr [rax], al ; add dh, dh ; ret 0xf05
0x0000000000481622 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc985
0x0000000000420650 : add dword ptr [rdx + 0x18], 1 ; ret
0x000000000040e2cb : add dword ptr [rdx + 0xc], eax ; xor eax, eax ; ret
0x00000000004bf2fe : add dword ptr [rdx + rax], -0x68 ; ret
0x00000000004bf3ce : add dword ptr [rdx + rax], 0x43 ; ret
0x00000000004bd056 : add dword ptr [rdx + rax], 0x49 ; ret
0x00000000004bf32e : add dword ptr [rdx + rax], 0x51 ; ret
0x00000000004c9c8e : add dword ptr [rdx + rax], 0x5e ; ret
0x00000000004c174e : add dword ptr [rdx + rax], 0x7b ; ret
0x00000000004bb6ae : add dword ptr [rdx], 0x41 ; ret
0x00000000004c2b0d : add dword ptr [rdx], 0x43 ; ret
0x00000000004bdbdd : add dword ptr [rdx], 0x49 ; ret
0x00000000004bda1c : add dword ptr [rdx], 0x4b ; ret
0x00000000004bc155 : add dword ptr [rdx], 0x4e ; ret
0x00000000004c325d : add dword ptr [rdx], 0x53 ; ret
0x00000000004be7bd : add dword ptr [rdx], 0x55 ; ret
0x00000000004bbe24 : add dword ptr [rdx], 0x57 ; ret
0x00000000004be7b4 : add dword ptr [rdx], 0x58 ; ret
0x00000000004ca54c : add dword ptr [rdx], 0x5b ; ret
0x00000000004c2b04 : add dword ptr [rdx], 0x5d ; ret
0x00000000004c49e5 : add dword ptr [rdx], 0x60 ; ret
0x00000000004c48ec : add dword ptr [rdx], 0x61 ; ret
0x00000000004bfadc : add dword ptr [rdx], 0x62 ; ret
0x00000000004c327c : add dword ptr [rdx], 0x6a ; ret
0x00000000004bc67c : add dword ptr [rdx], 0x6b ; ret
0x00000000004bdbd4 : add dword ptr [rdx], 0x6e ; ret
0x00000000004bfbc4 : add dword ptr [rdx], 0x70 ; ret
0x00000000004bc14c : add dword ptr [rdx], 0x75 ; ret
0x00000000004c49dc : add dword ptr [rdx], 0x7b ; ret
0x000000000040e2e0 : add dword ptr [rdx], 1 ; xor eax, eax ; mov dword ptr [rdi + 0x34], esi ; ret
0x00000000004ba3ec : add dword ptr [rdx], 2 ; mov ah, 0xa ; ret
0x00000000004c5164 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004ba15c : add dword ptr [rdx], 2 ; ret
0x0000000000407c04 : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004c3722 : add dword ptr [rdx], eax ; ret 0xe0a
0x00000000004bae10 : add dword ptr [rdx], eax ; retf 0xe0a
0x00000000004bae0b : add dword ptr [rip + 0x1800e53], 2 ; retf 0xe0a
0x000000000041a4c7 : add dword ptr [rsi + rax - 0xd], esi ; ret
0x00000000004bdb08 : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; ret
0x0000000000444441 : add dword ptr [rsi - 0x7b], esp ; ror byte ptr [rdi], 0x84 ; retf
0x00000000004c1160 : add dword ptr [rsi], 0x75 ; ret
0x00000000004bba98 : add dword ptr [rsi], 2 ; jne 0x4bbaac ; ret
0x00000000004c4ef8 : add dword ptr [rsi], 2 ; mov ecx, dword ptr [rdx] ; ret
0x00000000004c94d8 : add dword ptr [rsi], 2 ; pop rbp ; ret
0x00000000004be210 : add dword ptr [rsi], 2 ; push rbx ; ret
0x00000000004bf398 : add dword ptr [rsi], 2 ; push rsi ; ret
0x00000000004b9ae0 : add dword ptr [rsi], 2 ; xchg dword ptr [rdx], ecx ; ret
0x00000000004cb078 : add dword ptr [rsi], 3 ; cmp byte ptr [rcx], al ; ret
0x000000000041d4c9 : add dword ptr [rsp + rcx + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004bda46 : add dword ptr [rsp + rsi*2], 0xa ; ret
0x000000000044daf3 : add dword ptr cs:[rax - 0x77], ecx ; ret
0x000000000041a4c6 : add dword ptr cs:[rsi + rax - 0xd], esi ; ret
0x00000000004a68d7 : add dword ptr fs:[rax + rcx*2], -0x73 ; ret
0x00000000004a40ae : add dword ptr ss:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000444ff0 : add eax, 0x105ba ; add byte ptr [rdi], cl ; ret 0x55e9
0x0000000000419095 : add eax, 0x14 ; cmp rax, rdx ; jne 0x419081 ; ret
0x000000000040f60f : add eax, 0x147b60f ; ret
0x0000000000401de3 : add eax, 0x1543c6 ; pop rdx ; pop rbx ; pop rbp ; ret
0x0000000000409427 : add eax, 0x18c48348 ; ret
0x000000000040e185 : add eax, 0x1c8d4801 ; ret 0x1aeb
0x00000000004bc82c : add eax, 0x2300e4a ; or byte ptr [rsi], 0x28 ; ret
0x00000000004bc904 : add eax, 0x2400e47 ; ret
0x00000000004bc434 : add eax, 0x2400e4a ; ret
0x000000000043341b : add eax, 0x28c48348 ; ret
0x000000000046fcfd : add eax, 0x2ba ; add byte ptr [rdi], cl ; ret 0x8841
0x0000000000408cf2 : add eax, 0x2c6e49 ; ret
0x0000000000408ce2 : add eax, 0x2c6ef9 ; ret
0x0000000000408cd2 : add eax, 0x2c6fa9 ; ret
0x0000000000407a6e : add eax, 0x2cad4d ; ret
0x00000000004076d7 : add eax, 0x2cb264 ; mov dword ptr [rdx], eax ; nop ; pop rbp ; ret
0x0000000000404834 : add eax, 0x2cd9ee ; add ebx, esi ; ret
0x000000000040e3b8 : add eax, 0x323c8948 ; ret
0x00000000004b087d : add eax, 0x35c02fa ; pop rsp ; add ecx, dword ptr [rcx + 1] ; retf 0x1003
0x00000000004be4d1 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; ret
0x00000000004b0829 : add eax, 0x3b202d8 ; syscall
0x0000000000421a0b : add eax, 0x48c48348 ; ret
0x00000000004a0717 : add eax, 0x48fffff9 ; add esp, 0x18 ; ret
0x00000000004af3c7 : add eax, 0x4c204c2 ; ret 0x1d04
0x00000000004289b6 : add eax, 0x508b0676 ; add al, 0x83 ; ret 0x101
0x000000000040eadf : add eax, 0x508b0676 ; add al, 0x83 ; ret 0x4101
0x000000000040ea90 : add eax, 0x508b0676 ; add al, 0x83 ; ret 0x4102
0x00000000004afc89 : add eax, 0x514058b ; syscall
0x00000000004af3c3 : add eax, 0x5180518 ; ret 0xc204
0x00000000004afc87 : add eax, 0x58b0579 ; adc al, 5 ; syscall
0x00000000004afd19 : add eax, 0x5c005be ; ret 0xc405
0x000000000043672a : add eax, 0x73638 ; ret
0x0000000000438ad2 : add eax, 0x75979 ; ret
0x0000000000431557 : add eax, 0x75c0854d ; ret
0x00000000004913d0 : add eax, 0x77d03949 ; ret 0x894c
0x000000000043669c : add eax, 0x7af0f ; pop rbx ; pop rbp ; ret
0x000000000045e6e9 : add eax, 0x8300052a ; ret 0x6601
0x00000000004060f6 : add eax, 0x89480003 ; ret 0x8b48
0x000000000041531d : add eax, 0x89482deb ; ret 0x8b48
0x000000000042134a : add eax, 0x8d2b1 ; ret
0x000000000042133b : add eax, 0x8d2c0 ; pop rbx ; pop rbp ; ret
0x0000000000421326 : add eax, 0x8d2d5 ; pop rbx ; pop rbp ; ret
0x000000000041a592 : add eax, 0x8f432 ; ret
0x000000000040c4e2 : add eax, 0xa4ee1 ; ret
0x000000000040c4d2 : add eax, 0xa4ee9 ; ret
0x000000000041b68e : add eax, 0xc47af0f ; ret
0x000000000041f17c : add eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000438088 : add eax, 0xe9000000 ; retf 0xfffd
0x000000000047836d : add eax, 0xe9ffffbf ; push rbx ; retf 0xffff
0x00000000004b8a15 : add eax, 0xea160000 ; hlt ; call qword ptr [rbx]
0x00000000004b8a75 : add eax, 0xea800000 ; hlt ; call qword ptr [rbx]
0x00000000004b8a55 : add eax, 0xea8d0000 ; hlt ; call qword ptr [rbx]
0x00000000004b8ab5 : add eax, 0xeb1f0000 ; hlt ; call qword ptr [rbx]
0x00000000004b8af5 : add eax, 0xeb340000 ; hlt ; call qword ptr [rbx]
0x000000000046ae61 : add eax, 0xf000000 ; ret 0x8348
0x0000000000444ff2 : add eax, 0xf000001 ; ret 0x55e9
0x0000000000412eaf : add eax, 0xfff15be8 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041b492 : add eax, 1 ; mov byte ptr [rdx], r8b ; mov dword ptr [rdi + 8], eax ; ret
0x000000000040c001 : add eax, 1 ; ret
0x000000000040a710 : add eax, 2 ; ret
0x00000000004176c2 : add eax, 4 ; mov word ptr [r8 + 0x16], ax ; ret
0x0000000000449b13 : add eax, dword ptr [rax + rcx*4 + 0x48] ; dec dword ptr [rcx + 0x39] ; ret 0xd375
0x000000000045b605 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000042c5ad : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x00000000004a292b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000044734a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000408975 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000041471d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; sub ecx, edx ; shr rax, cl ; ret
0x000000000040ec8e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424512 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x39442444], cl ; ret 0x8c0f
0x000000000043fefd : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6af0fd08], al ; ret 0xb60f
0x00000000004774e0 : add eax, dword ptr [rax] ; mov rdi, r15 ; xor eax, eax ; call 0x443759
0x0000000000474069 : add eax, dword ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000416ff4 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000041b7f8 : add eax, dword ptr [rax] ; ret
0x00000000004b0bae : add eax, dword ptr [rax] ; ret 0xbf04
0x0000000000477452 : add eax, dword ptr [rax] ; xor eax, eax ; mov rdi, r15 ; call 0x443758
0x0000000000477452 : add eax, dword ptr [rax] ; xor eax, eax ; mov rdi, r15 ; call 0x443759
0x00000000004152e0 : add eax, dword ptr [rbx + 0x5b011468] ; ret
0x0000000000441307 : add eax, dword ptr [rbx - 0x7cb7fe3f] ; ret 0x390c
0x00000000004c0102 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa450204], al ; ret
0x00000000004c97e2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xaf80204], al ; ret
0x000000000040f636 : add eax, dword ptr [rcx + 8] ; movzx eax, byte ptr [rax + 0x29] ; ret
0x00000000004bbaca : add eax, dword ptr [rcx + rax] ; ret
0x000000000041e0c2 : add eax, dword ptr [rcx] ; lea eax, [rbx + 7] ; pop rbx ; and eax, 0xfffffff8 ; ret
0x000000000049f4b9 : add eax, dword ptr [rcx] ; retf 0x3941
0x000000000049f6ff : add eax, dword ptr [rcx] ; retf 0xd539
0x000000000042fc0b : add eax, dword ptr [rdi + 0xc] ; ret
0x00000000004bebc2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bl ; ret
0x0000000000417c34 : add eax, dword ptr [rdi] ; ret
0x00000000004ba52b : add eax, dword ptr [rdx] ; ret
0x00000000004c4874 : add eax, dword ptr [rsi + 0x340002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004bf2fa : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0x68 ; ret
0x00000000004bf3ca : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x43 ; ret
0x00000000004bf32a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x51 ; ret
0x00000000004c174a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x7b ; ret
0x00000000004bda42 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rsi*2], 0xa ; ret
0x000000000041ba74 : add eax, eax ; cmp esi, eax ; jl 0x41ba57 ; ret
0x000000000041baba : add eax, eax ; cmp esi, eax ; jl 0x41ba97 ; ret
0x000000000040b888 : add eax, eax ; jmp rax
0x0000000000435e01 : add eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041c4e8 : add eax, eax ; ret
0x000000000043280c : add eax, ebp ; jmp rax
0x000000000041ab18 : add eax, ebp ; ret 0xff24
0x00000000004a6faf : add eax, ebp ; retf
0x00000000004212d7 : add eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000410607 : add eax, ecx ; jmp rax
0x000000000043689a : add eax, edi ; jmp rax
0x00000000004146c0 : add eax, edi ; ret
0x0000000000403227 : add eax, edx ; jmp rax
0x000000000040e7e7 : add eax, edx ; movzx edx, byte ptr [rdi + 7] ; add rax, rdx ; ret
0x000000000040a700 : add eax, edx ; ret
0x000000000046f552 : add eax, esi ; jmp rax
0x00000000004146a6 : add eax, esi ; ret
0x000000000040c0f3 : add eax, esp ; jmp rax
0x00000000004496ab : add ebp, 1 ; mov rdi, r13 ; call 0x425978
0x00000000004c2f9a : add ebp, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000409267 : add ebp, eax ; ret
0x000000000040d99c : add ebp, ebx ; enter 0x4990, 1 ; add ebp, ebx ; ret 0x56e8
0x000000000040d9a2 : add ebp, ebx ; ret 0x56e8
0x0000000000472bae : add ebp, ecx ; insb byte ptr [rdi], dx ; retf
0x00000000004af3c1 : add ebx, dword ptr [rax] ; add eax, 0x5180518 ; ret 0xc204
0x0000000000410fa5 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004203b9 : add ebx, dword ptr [rip + 0x1f0fffff] ; add bl, dh ; ret
0x000000000040cd44 : add ebx, eax ; mov eax, 0xffffffff ; ret
0x0000000000461f2c : add ebx, ebp ; fisttp word ptr [rax - 0x77] ; ret
0x00000000004b7dc5 : add ebx, edi ; call qword ptr [rax]
0x0000000000404839 : add ebx, esi ; ret
0x0000000000419d09 : add ecx, 1 ; cmp eax, ecx ; jne 0x419d09 ; xor eax, eax ; ret
0x000000000041d9c7 : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x00000000004692b3 : add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046f96a : add ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000421739 : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000432ee3 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000042cdc5 : add ecx, dword ptr [rax - 0x7d] ; ret 0xc604
0x00000000004b0db1 : add ecx, dword ptr [rbx + rax + 0x4c] ; add ecx, dword ptr [rsi + 3] ; adc eax, dword ptr [rax] ; retf 0xc902
0x0000000000411628 : add ecx, dword ptr [rcx + 0x4d0f0c47] ; retf 0x4f89
0x00000000004b0883 : add ecx, dword ptr [rcx + 1] ; retf 0x1003
0x0000000000427238 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004b0827 : add ecx, dword ptr [rdi] ; add eax, 0x3b202d8 ; syscall
0x000000000047aa70 : add ecx, dword ptr [rdi] ; ret 0x4388
0x0000000000456df2 : add ecx, dword ptr [rdi] ; ret 0xc609
0x00000000004bf35a : add ecx, dword ptr [rdx + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004c4982 : add ecx, dword ptr [rdx + 0xe] ; and byte ptr [rsi + rcx + 0x18], bl ; ret
0x00000000004b0db5 : add ecx, dword ptr [rsi + 3] ; adc eax, dword ptr [rax] ; retf 0xc902
0x0000000000420405 : add ecx, eax ; jmp rcx
0x00000000004916a2 : add ecx, ebp ; ret
0x0000000000412280 : add ecx, esi ; jmp rcx
0x0000000000435d22 : add edi, dword ptr [rcx] ; ret 0x407e
0x000000000044e270 : add edi, dword ptr [rcx] ; retf 0x440f
0x00000000004c0382 : add edi, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004ccc01 : add edi, ebp ; call rdi
0x0000000000408568 : add edi, edx ; jmp 0x40853a
0x0000000000434b51 : add edi, esi ; rol byte ptr [rcx], cl ; retf 0xe0c1
0x0000000000425866 : add edx, 0x28 ; call 0x401a85
0x0000000000444361 : add edx, 0x88 ; xor ecx, ecx ; jmp 0x44433f
0x0000000000409ce8 : add edx, 8 ; mov eax, edx ; pop rbx ; ret
0x000000000040381f : add edx, eax ; jmp rdx
0x00000000004278bc : add edx, ecx ; jmp rdx
0x000000000041a7c0 : add edx, ecx ; mov qword ptr [rdi], rdx ; ret
0x000000000040e873 : add edx, edx ; cmp edx, esi ; jg 0x40e847 ; ret
0x0000000000432703 : add edx, esi ; jmp rdx
0x000000000040e102 : add edx, esi ; movups xmmword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; ret
0x0000000000472ea1 : add esi, 0x17 ; call r9
0x000000000048e6fe : add esi, 0x4f ; call 0x43b175
0x0000000000426dcf : add esi, 1 ; mov r13, r15 ; jmp 0x426da1
0x000000000041109d : add esi, dword ptr [rax + 0x50] ; jmp rcx
0x000000000041f15b : add esi, dword ptr [rdx + rcx + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b079 : add esi, dword ptr [rsi + 0xc] ; mov eax, 0x15 ; ret
0x000000000041538d : add esi, eax ; adc al, 0 ; ret
0x0000000000499609 : add esi, ebp ; call 0x426014
0x00000000004b557d : add esi, ebp ; call qword ptr [rax]
0x0000000000425185 : add esi, ebx ; stosq qword ptr [rdi], rax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x000000000044e0c7 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041db68 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004c37a9 : add esi, edi ; call qword ptr [rdi]
0x000000000040bc41 : add esi, esi ; add al, 0x11 ; add al, 0x75 ; ret
0x000000000040bed9 : add esi, esi ; add al, 0x11 ; or byte ptr [rbp - 0x10], dh ; ret
0x000000000040ba4f : add esi, esi ; add al, 0x39 ; jne 0x40ba48 ; ret
0x00000000004bf709 : add esi, esi ; call qword ptr [rdi]
0x00000000004bf729 : add esi, esi ; jmp qword ptr [rsi]
0x0000000000472dcb : add esi, esi ; ret 0x7401
0x00000000004add98 : add esi, esp ; rol byte ptr [rax], 4 ; ret 0x100
0x00000000004105c2 : add esp, 0x10 ; mov eax, 8 ; pop rbx ; ret
0x0000000000411ae0 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x00000000004173a0 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a20e : add esp, 0x10 ; pop rbx ; ret
0x00000000004132f3 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000434fc1 : add esp, 0x130 ; pop rbx ; ret
0x0000000000409936 : add esp, 0x138 ; ret
0x000000000040e78e : add esp, 0x148 ; ret
0x000000000043885f : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000418522 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000404761 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040920b : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409304 : add esp, 0x18 ; ret
0x000000000041d74b : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048d7ed : add esp, 0x20 ; jmp 0x48a1fd
0x0000000000409bee : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e9ec : add esp, 0x20 ; pop rbx ; ret
0x0000000000410d3f : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043443f : add esp, 0x218 ; pop rbx ; pop rbp ; ret
0x00000000004386de : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041caa5 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402463 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004088b3 : add esp, 0x28 ; ret
0x000000000041f59b : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409d55 : add esp, 0x30 ; pop rbx ; ret
0x0000000000410ac4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414d6f : add esp, 0x38 ; ret
0x000000000043a2ce : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004438f2 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041efa8 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000421a0d : add esp, 0x48 ; ret
0x0000000000410363 : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410861 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000409071 : add esp, 0x58 ; ret
0x000000000040aff0 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041be49 : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419753 : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000437c66 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000446ebe : add esp, 0x90 ; pop rbx ; ret
0x0000000000445c52 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000414fcc : add esp, 0xa0 ; pop rbx ; ret
0x000000000041cd85 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000043a451 : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000000000437d71 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000042f997 : add esp, 0xd8 ; ret
0x000000000044708a : add esp, 0xe8 ; ret
0x0000000000407bd0 : add esp, 8 ; cdqe ; ret
0x000000000040c620 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040ad96 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412d17 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000438eb7 : add esp, 8 ; mov eax, r11d ; pop rbx ; pop rbp ; ret
0x0000000000413e70 : add esp, 8 ; mov rax, r10 ; ret
0x00000000004213d2 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000409b64 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416505 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ac0b : add esp, 8 ; movzx eax, al ; ret
0x000000000041044f : add esp, 8 ; not eax ; and eax, 5 ; ret
0x000000000042b6d5 : add esp, 8 ; not eax ; pop rbx ; pop rbp ; ret
0x0000000000421449 : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000040c76e : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000049cea2 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000408fe2 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004018b6 : add esp, 8 ; ret
0x0000000000407a9c : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004adda4 : add esp, ebp ; ret
0x0000000000428352 : add qword ptr [r8 - 0x77], rcx ; retf
0x000000000042e05d : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000004b7fb1 : add qword ptr [r8], r8 ; add byte ptr [rdx - 4], dl ; jmp qword ptr [rax]
0x00000000004cd0ad : add qword ptr [r8], rax ; jo 0x4cd0ee ; std ; jmp rdi
0x00000000004cd06d : add qword ptr [r8], rax ; nop ; std ; call qword ptr [rax]
0x00000000004cd08d : add qword ptr [r8], rax ; xor byte ptr [rsi], 0xfd ; call qword ptr [rax]
0x0000000000426418 : add qword ptr [r9 - 0x77], r8 ; ret 0xc148
0x000000000040c1cc : add qword ptr [r9 - 0x7d], rcx ; ret
0x000000000042988b : add qword ptr [rax + r9 - 0x7d], rsi ; ret
0x000000000049a12f : add qword ptr [rax + rcx*2], -0x77 ; ror dword ptr [rcx - 0x77], cl ; retf 0x1f0f
0x0000000000431529 : add qword ptr [rax - 0x77], rcx ; ret 0x2076
0x00000000004b7f99 : add qword ptr [rax], r8 ; and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x0000000000469fd9 : add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x00000000004b7f11 : add qword ptr [rax], rax ; loopne 0x4b7ea0 ; sti ; call rax
0x00000000004ccf15 : add qword ptr [rax], rax ; sub bpl, dil ; call rdx
0x000000000042062f : add qword ptr [rbp + r11 - 0xd], r14 ; ret
0x000000000044576c : add qword ptr [rbx + 0x18], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dc40 : add qword ptr [rbx + 0x60], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ad66 : add qword ptr [rcx + rcx*8 + 0x39496475], rax ; ret 0xef72
0x00000000004496aa : add r13, 1 ; mov rdi, r13 ; call 0x425979
0x0000000000423e0a : add r14b, r14b ; ret
0x0000000000426dce : add r14d, 1 ; mov r13, r15 ; jmp 0x426da2
0x0000000000435d21 : add r15d, dword ptr [r9] ; ret 0x407e
0x00000000004b8754 : add r8b, byte ptr [rax] ; add byte ptr [rsi], bl ; loope 0x4b8756 ; jmp qword ptr [rcx]
0x0000000000448c1e : add r8b, r13b ; retf
0x00000000004b0db4 : add r9, qword ptr [rsi + 3] ; adc eax, dword ptr [rax] ; retf 0xc902
0x0000000000435b4c : add r9b, r13b ; ret
0x000000000040f635 : add rax, qword ptr [rcx + 8] ; movzx eax, byte ptr [rax + 0x29] ; ret
0x0000000000417c33 : add rax, qword ptr [rdi] ; ret
0x000000000040c0f2 : add rax, r12 ; jmp rax
0x000000000043280b : add rax, r13 ; jmp rax
0x000000000040b887 : add rax, r8 ; jmp rax
0x00000000004212d6 : add rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000410606 : add rax, rcx ; jmp rax
0x0000000000436899 : add rax, rdi ; jmp rax
0x0000000000403226 : add rax, rdx ; jmp rax
0x000000000040e7ed : add rax, rdx ; ret
0x000000000046f551 : add rax, rsi ; jmp rax
0x0000000000436e7f : add rcx, r8 ; jmp rcx
0x0000000000420404 : add rcx, rax ; jmp rcx
0x000000000041227f : add rcx, rsi ; jmp rcx
0x0000000000408567 : add rdi, rdx ; jmp 0x40853b
0x0000000000425865 : add rdx, 0x28 ; call 0x401a86
0x000000000041a7bf : add rdx, r9 ; mov qword ptr [rdi], rdx ; ret
0x000000000040381e : add rdx, rax ; jmp rdx
0x00000000004278bb : add rdx, rcx ; jmp rdx
0x0000000000432702 : add rdx, rsi ; jmp rdx
0x000000000041109c : add rsi, qword ptr [rax + 0x50] ; jmp rcx
0x0000000000499608 : add rsi, r13 ; call 0x426015
0x0000000000499607 : add rsi, r13 ; call 0x426016
0x0000000000411adf : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000041739f : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a20d : add rsp, 0x10 ; pop rbx ; ret
0x00000000004132f2 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000434fc0 : add rsp, 0x130 ; pop rbx ; ret
0x0000000000409935 : add rsp, 0x138 ; ret
0x000000000040e78d : add rsp, 0x148 ; ret
0x000000000043885e : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040920a : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409303 : add rsp, 0x18 ; ret
0x000000000041d74a : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048d7ec : add rsp, 0x20 ; jmp 0x48a1fe
0x0000000000409bed : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e9eb : add rsp, 0x20 ; pop rbx ; ret
0x0000000000410d3e : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043443e : add rsp, 0x218 ; pop rbx ; pop rbp ; ret
0x00000000004386dd : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000402462 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004088b2 : add rsp, 0x28 ; ret
0x000000000041f59a : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409d54 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000414d6e : add rsp, 0x38 ; ret
0x000000000043a2cd : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041efa7 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000421a0c : add rsp, 0x48 ; ret
0x0000000000410860 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000409070 : add rsp, 0x58 ; ret
0x0000000000437c65 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000446ebd : add rsp, 0x90 ; pop rbx ; ret
0x0000000000445c51 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000414fcb : add rsp, 0xa0 ; pop rbx ; ret
0x000000000041cd84 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000043a450 : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000000000437d70 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000042f996 : add rsp, 0xd8 ; ret
0x0000000000447089 : add rsp, 0xe8 ; ret
0x0000000000407bcf : add rsp, 8 ; cdqe ; ret
0x000000000040c61f : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040ad95 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412d16 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000438eb6 : add rsp, 8 ; mov eax, r11d ; pop rbx ; pop rbp ; ret
0x0000000000413e6f : add rsp, 8 ; mov rax, r10 ; ret
0x00000000004213d1 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000409b63 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416504 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ac0a : add rsp, 8 ; movzx eax, al ; ret
0x000000000041044e : add rsp, 8 ; not eax ; and eax, 5 ; ret
0x000000000042b6d4 : add rsp, 8 ; not eax ; pop rbx ; pop rbp ; ret
0x0000000000421448 : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000408fe1 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004018b5 : add rsp, 8 ; ret
0x0000000000407a9b : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040efbe : add word ptr [rax + 0x2e], 1 ; ret
0x00000000004116eb : addps xmm0, xmm1 ; movsd qword ptr [rbx + 0x20], xmm0 ; pop rbx ; ret
0x00000000004b610c : and ah, ah ; cmc ; jmp qword ptr [rax]
0x000000000041e5c8 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c48b0 : and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041e490 : and al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042dd32 : and al, 0 ; je 0x42dd44 ; ret
0x000000000040a252 : and al, 0 ; mov eax, 2 ; ret
0x000000000046eb7a : and al, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000042ecf3 : and al, 0x10 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a2e43 : and al, 0x10 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000004422c6 : and al, 0x10 ; call r14
0x0000000000425eb1 : and al, 0x10 ; call rax
0x0000000000425d87 : and al, 0x10 ; jne 0x425d33 ; mov rdi, rax ; call 0x412019
0x0000000000433468 : and al, 0x10 ; jne 0x433479 ; add rsp, 0x28 ; ret
0x0000000000433467 : and al, 0x10 ; jne 0x43347a ; add rsp, 0x28 ; ret
0x000000000046aeab : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call 0x4170f9
0x0000000000497a95 : and al, 0x10 ; mov r13d, dword ptr [r12 + 0x24] ; call 0x423d59
0x000000000047465e : and al, 0x10 ; mov rdi, qword ptr [rsi + 0x1a0] ; call rax
0x000000000046b6b4 : and al, 0x10 ; mov rdi, r12 ; call rax
0x000000000040906c : and al, 0x18 ; jne 0x409099 ; add rsp, 0x58 ; ret
0x000000000040906b : and al, 0x18 ; jne 0x40909a ; add rsp, 0x58 ; ret
0x00000000004a19b0 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004a29f1 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a19b5 : and al, 0x20 ; call rax
0x000000000044a2f1 : and al, 0x20 ; mov rsi, r15 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000040dd87 : and al, 0x20 ; xor eax, eax ; jmp 0x40dd5d
0x0000000000437c42 : and al, 0x24 ; add dword ptr [rax - 0x77], ecx ; ret 0x875
0x0000000000497a9a : and al, 0x24 ; call 0x423d54
0x00000000004839c4 : and al, 0x24 ; or cl, byte ptr [rax + rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042f296 : and al, 0x28 ; add cl, ch ; ret 0xfffc
0x000000000041219e : and al, 0x28 ; call r9
0x000000000041715a : and al, 0x28 ; jg 0x41713f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495658 : and al, 0x28 ; mov rdi, rbp ; call 0x4120c7
0x00000000004166d8 : and al, 0x28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414ff5 : and al, 0x30 ; add byte ptr [rdi], cl ; lahf ; ret 0xb7eb
0x000000000048267a : and al, 0x30 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x44c7
0x0000000000481620 : and al, 0x30 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc985
0x0000000000455531 : and al, 0x30 ; call 0x412014
0x0000000000455530 : and al, 0x30 ; call 0x412015
0x000000000048e625 : and al, 0x30 ; call 0x43b0c4
0x000000000048e560 : and al, 0x30 ; jmp 0x48afa9
0x000000000048ed32 : and al, 0x30 ; jmp 0x48b020
0x000000000048e5fc : and al, 0x30 ; jmp 0x48b02d
0x000000000048ee20 : and al, 0x30 ; jmp 0x48b0a2
0x000000000048fc34 : and al, 0x30 ; mov rdi, qword ptr [r13] ; call 0x42bf28
0x000000000043c0d4 : and al, 0x30 ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x438b39
0x0000000000415061 : and al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004676ec : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000048e9a6 : and al, 0x38 ; add dword ptr [rcx - 0x77], ecx ; ret 0x8d48
0x000000000046fcc2 : and al, 0x38 ; call 0x41bee4
0x000000000046fcc1 : and al, 0x38 ; call 0x41bee5
0x000000000048e950 : and al, 0x38 ; jmp 0x48ab85
0x000000000048e94f : and al, 0x38 ; jmp 0x48ab86
0x0000000000402673 : and al, 0x38 ; jne 0x402685 ; jmp 0x402649
0x0000000000402672 : and al, 0x38 ; jne 0x402686 ; jmp 0x40264a
0x000000000045e969 : and al, 0x38 ; mov ecx, dword ptr [r15 + 0x40] ; call 0x40b428
0x000000000049e826 : and al, 0x39 ; retf 0x257d
0x0000000000412dcd : and al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000042e66d : and al, 0x3c ; add byte ptr [rbp - 0x6af00089], cl ; ret 0x8348
0x000000000046a019 : and al, 0x40 ; test rdi, rdi ; je 0x46a038 ; call rax
0x000000000046fbf7 : and al, 0x44 ; mov rdi, qword ptr [rbx + 0x1a0] ; call rcx
0x000000000043791a : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d7eb : and al, 0x48 ; add esp, 0x20 ; jmp 0x48a1ff
0x0000000000409181 : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000415fa5 : and al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045558c : and al, 0x48 ; mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004979f7 : and al, 0x48 ; mov edi, dword ptr [rsp + 0x50] ; call 0x4244c8
0x000000000047a136 : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4363d8
0x000000000047a135 : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4363d9
0x0000000000448f87 : and al, 0x50 ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000499129 : and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x00000000004979fb : and al, 0x50 ; call 0x4244c4
0x000000000047c093 : and al, 0x58 ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x000000000044e2c8 : and al, 0x58 ; lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000004122e5 : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000045b603 : and al, 0x5c ; add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000045086c : and al, 0x60 ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x26e9
0x0000000000481a79 : and al, 0x60 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd009
0x0000000000461e3e : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe838
0x00000000004acf38 : and al, 0x61 ; sti ; jmp rsp
0x00000000004bf434 : and al, 0x6f ; add byte ptr [rax], al ; pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x0000000000425eac : and al, 0x70 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000049f1a7 : and al, 0x74 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000043c41b : and al, 0x75 ; mov dl, 0x48 ; mov eax, dword ptr [rbp + 0x10] ; jmp 0x43c3ef
0x000000000047e814 : and al, 0x78 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xbc83
0x0000000000485890 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000046c1d3 : and al, 0x83 ; ret
0x000000000044bcc7 : and al, 0x83 ; ret 0xe801
0x000000000045dde0 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000004711a6 : and al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000453b37 : and al, 0x89 ; push rax ; or cl, ch ; ret 0xfff5
0x00000000004839b7 : and al, 0x89 ; ret
0x0000000000462f84 : and al, 0x89 ; ret 0x10b9
0x000000000047e04d : and al, 0x89 ; ret 0xc083
0x00000000004531aa : and al, 0x89 ; retf 0xc889
0x0000000000414643 : and al, 0x89 ; ror dword ptr [rax + 0x39], 1 ; retf 0xffb9
0x0000000000404546 : and al, 0x8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000049ceff : and al, 0x8b ; and byte ptr [r9], r15b ; ret 0x8d0f
0x000000000045837e : and al, 0x8e ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000453341 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x000000000045b383 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4120
0x00000000004839c5 : and al, 0xa ; or al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004536ad : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045853f : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047d221 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004c3e34 : and al, 0xb9 ; add byte ptr [rax], al ; call 0xffffffffd54c3563
0x00000000004172ee : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042bca6 : and al, 0xc ; jne 0x42bc85 ; add rsp, 0x18 ; ret
0x000000000046d644 : and al, 0xc8 ; add dword ptr [rax], eax ; add al, ch ; ret 0xfa49
0x0000000000468333 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000441cf3 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048c62b : and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000452ac8 : and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000048d823 : and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004a1fba : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8545
0x000000000048bb23 : and al, 0xe0 ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000469d9f : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000486af7 : and al, 0xe8 ; ret
0x0000000000496ce8 : and al, 0xe8 ; ret 0xf98f
0x0000000000445268 : and al, 0xe8 ; ret 0xfe4e
0x0000000000456980 : and al, 0xe8 ; retf 0xfc0c
0x00000000004a40e0 : and al, 0xe8 ; retf 0xfd4e
0x0000000000497a9b : and al, 0xe8 ; scasd eax, dword ptr [rdi] ; ret 0xfff8
0x000000000048d798 : and al, 0xe9 ; pop rdx ; retf 0xffff
0x000000000048ec30 : and al, 0xe9 ; ret 0xffb5
0x000000000048c828 : and al, 0xe9 ; retf 0xffd9
0x00000000004266c1 : and al, 0xf ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc209
0x00000000004a351a : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040910e : and al, 0xf3 ; ret
0x0000000000411843 : and al, 0xf8 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004a375c : and al, 0xf8 ; add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x000000000047f6b1 : and al, 0xfa ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004b847d : and al, 0xff ; jmp qword ptr [rax]
0x00000000004ca93d : and al, 1 ; add al, ah ; sti ; jmp rdi
0x00000000004b7ad9 : and al, 1 ; add byte ptr [rax - 0x6f], dl ; stc ; jmp qword ptr [rax]
0x000000000040e872 : and al, 1 ; sar byte ptr [rcx], cl ; bnd jg 0x40e848 ; ret
0x00000000004199f5 : and al, 1 ; xor eax, eax ; ret
0x0000000000419a02 : and al, 2 ; xor eax, eax ; ret
0x00000000004b8834 : and al, 3 ; add byte ptr [rax], al ; or ebp, edx ; hlt ; call qword ptr [rbx]
0x0000000000412a6f : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000004b8934 : and al, 4 ; add byte ptr [rax], al ; jno 0x4b892b ; hlt ; call qword ptr [rbx]
0x00000000004357ce : and al, 4 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b8b34 : and al, 6 ; add byte ptr [rax], al ; sbb ch, bl ; hlt ; call qword ptr [rbx]
0x00000000004260dc : and al, 7 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000421377 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000429103 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046aeb0 : and al, 8 ; call 0x4170f4
0x000000000046aeaf : and al, 8 ; call 0x4170f5
0x000000000044709b : and al, 8 ; call 0x423334
0x0000000000413011 : and al, 8 ; call rax
0x0000000000415b79 : and al, 8 ; call rdx
0x00000000004109fd : and al, 8 ; jmp 0x4109c7
0x00000000004109fc : and al, 8 ; jmp 0x4109c8
0x000000000040917e : and al, 8 ; jne 0x4091ae ; add rsp, 0x28 ; ret
0x000000000040917d : and al, 8 ; jne 0x4091af ; add rsp, 0x28 ; ret
0x0000000000433418 : and al, 8 ; jne 0x433429 ; add rsp, 0x28 ; ret
0x0000000000433417 : and al, 8 ; jne 0x43342a ; add rsp, 0x28 ; ret
0x000000000045dd0e : and al, 8 ; mov rsi, r15 ; call 0x419f87
0x000000000047d676 : and al, 8 ; mov rsi, rax ; call 0x469937
0x000000000047d675 : and al, 8 ; mov rsi, rax ; call 0x469938
0x00000000004c6e71 : and al, bh ; jmp rsi
0x00000000004a76f0 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a778d : and al, byte ptr [rax] ; call rax
0x00000000004a7f87 : and al, byte ptr [rax] ; mov rsi, r14 ; mov rdi, rbx ; call r12
0x00000000004a77b4 : and al, byte ptr [rax] ; test rax, rax ; je 0x4a77c4 ; call rax
0x0000000000413547 : and al, ch ; ret
0x0000000000491108 : and al, ch ; ret 0xfb5e
0x000000000047fea8 : and al, ch ; ret 0xfffd
0x0000000000432cf7 : and al, ch ; retf
0x0000000000403300 : and al, ch ; retf 0x284
0x000000000042508a : and al, dh ; add dword ptr [rax], r8d ; pop rbx ; ret
0x000000000040c1f4 : and bh, byte ptr [rax] ; retf 0x1275
0x000000000049c778 : and bh, ch ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004ad514 : and bh, ch ; std ; call rax
0x00000000004b8265 : and bh, dh ; call qword ptr [rax]
0x00000000004672eb : and bh, dh ; shl dword ptr [rcx], 1 ; retf 0xf42
0x0000000000418e26 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000040faae : and byte ptr [r8 + 0x63], r9b ; fimul dword ptr [rcx - 0x77] ; retf 0x850f
0x000000000041cd25 : and byte ptr [r8 + 0x80a], dil ; pop rbx ; ret
0x000000000040f72a : and byte ptr [r8 + rsi + 0x10], al ; ret
0x000000000043b4ae : and byte ptr [r8 - 0x77], r9b ; or byte ptr [r8 + 0x63], cl ; ret
0x000000000047ac76 : and byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004207f6 : and byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x00000000004a480b : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042aa65 : and byte ptr [r9], al ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x000000000049cf01 : and byte ptr [r9], r15b ; ret 0x8d0f
0x0000000000411495 : and byte ptr [r9], r8b ; retf 0x6348
0x00000000004addc0 : and byte ptr [rax + 0x282700c9], al ; retf 0x3f00
0x0000000000418e27 : and byte ptr [rax + 0x39], cl ; ret
0x00000000004a0f37 : and byte ptr [rax + 0x39], cl ; ret 0xf575
0x0000000000459a2d : and byte ptr [rax + 0x39], cl ; retf 0xe575
0x0000000000461498 : and byte ptr [rax + 0x3b], cl ; push rax ; loopne 0x46151b ; or dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x000000000040faaf : and byte ptr [rax + 0x63], cl ; fimul dword ptr [rcx - 0x77] ; retf 0x850f
0x0000000000414d07 : and byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000004a3c57 : and byte ptr [rax + 0x63], cl ; retf 0x8d48
0x000000000041cd26 : and byte ptr [rax + 0x80a], bh ; pop rbx ; ret
0x00000000004731aa : and byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000040f72b : and byte ptr [rax + rsi + 0x10], al ; ret
0x000000000046f966 : and byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000477834 : and byte ptr [rax - 0x3f], cl ; jmp qword ptr [rax]
0x00000000004247f4 : and byte ptr [rax - 0x75], cl ; je 0x424825 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048a8e5 : and byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048a8e4 : and byte ptr [rax - 0x75], r9b ; or byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000043b4af : and byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0x63], cl ; ret
0x0000000000440d05 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000408ab2 : and byte ptr [rax - 0x77], cl ; ret 0xb60f
0x000000000043f25b : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000427472 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004bc0a0 : and byte ptr [rax - 0xb], bh ; jmp rcx
0x00000000004c6e70 : and byte ptr [rax], 0xf8 ; jmp rsi
0x00000000004207f7 : and byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x00000000004a480c : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e115 : and byte ptr [rax], al ; sete al ; ret
0x0000000000463c68 : and byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0xf], 0x89 ; ret 0x8948
0x0000000000418acb : and byte ptr [rbp + 0x39], al ; fnstenv [rbp - 0x21] ; xor eax, eax ; pop rbx ; ret
0x0000000000439747 : and byte ptr [rbp + 0x39], al ; retf 0xdb75
0x0000000000439593 : and byte ptr [rbp + 0x39], cl ; retf 0x840f
0x00000000004a68d4 : and byte ptr [rbp + rcx*4 + 0x64], cl ; add dword ptr [rax + rcx*2], -0x73 ; ret
0x0000000000496a9c : and byte ptr [rbp - 0x3f7a0001], 0x89 ; ret 0x850f
0x000000000048f695 : and byte ptr [rbp - 0x75], al ; xor al, 0x24 ; jmp 0x48b8a8
0x0000000000497039 : and byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x94 ; ret 0x8941
0x0000000000454aa5 : and byte ptr [rbx + 0x54], 0xf1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040e37e : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409bf0 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0105 : and byte ptr [rbx + 0xa450204], al ; ret
0x00000000004bae45 : and byte ptr [rbx + 0xa700204], al ; ret
0x00000000004c97e5 : and byte ptr [rbx + 0xaf80204], al ; ret
0x000000000047d998 : and byte ptr [rbx + rcx*4 + 4], cl ; sbb byte ptr [rax - 0x39], cl ; ret
0x000000000049adf4 : and byte ptr [rbx - 0x76b7fe18], al ; retf
0x0000000000417b0d : and byte ptr [rbx - 0x7cb7d791], cl ; ret
0x0000000000454374 : and byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000004acfa4 : and byte ptr [rbx - 0xb], ah ; call qword ptr [rbx]
0x00000000004acfa0 : and byte ptr [rbx - 0xb], ah ; jmp qword ptr [rax]
0x00000000004ad024 : and byte ptr [rbx], dh ; cld ; call rax
0x0000000000427298 : and byte ptr [rcx + 0x39], al ; ret 0xda7f
0x000000000043af8a : and byte ptr [rcx + 0x39], al ; retf
0x000000000049df7e : and byte ptr [rcx + 0x39], cl ; vpmuludq ymm9, ymm1, ymmword ptr [rax - 0x7d] ; ret 0x4920
0x000000000040fb9f : and byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x000000000043d209 : and byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; movsxd rsi, dword ptr [rsi + rcx - 0x77] ; ret 0xe283
0x000000000043a5de : and byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000040d569 : and byte ptr [rcx + 1], cl ; ret 0x8b48
0x000000000044a2f2 : and byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; call qword ptr [rax]
0x00000000004254bd : and byte ptr [rcx - 0x75], cl ; jle 0x4254e0 ; call r12
0x000000000045121c : and byte ptr [rcx - 0x77], al ; fisttp word ptr [rax - 0x77] ; retf
0x00000000004696d4 : and byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000480f36 : and byte ptr [rcx - 0x77], al ; ret 0xd0e9
0x0000000000428f5a : and byte ptr [rcx - 0x77], cl ; ret
0x00000000004a07d6 : and byte ptr [rcx - 0x77], cl ; retf
0x0000000000439582 : and byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000004b7cac : and byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x00000000004b7a69 : and byte ptr [rcx], al ; add byte ptr [rax - 0x7d], al ; stc ; jmp qword ptr [rax]
0x00000000004a1f99 : and byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x46ea36
0x00000000004b7a61 : and byte ptr [rcx], al ; add byte ptr [rax], dl ; jle 0x4b7a66 ; call rax
0x000000000042aa66 : and byte ptr [rcx], al ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x0000000000453baa : and byte ptr [rcx], al ; retf 0x5401
0x0000000000411496 : and byte ptr [rcx], al ; retf 0x6348
0x00000000004020af : and byte ptr [rcx], bh ; ret 0x4d0f
0x000000000049cf02 : and byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004051a7 : and byte ptr [rcx], bpl ; ret 0xd089
0x00000000004051a8 : and byte ptr [rcx], ch ; ret 0xd089
0x0000000000497a73 : and byte ptr [rdi], cl ; pushfq ; ret 0xd308
0x0000000000454b44 : and byte ptr [rdx + 0x54], 0xdf ; xor eax, eax ; ret
0x00000000004b7f9c : and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x00000000004292f7 : and byte ptr [rsi + rax + 0x48], dh ; mov eax, dword ptr [rax + 0x10] ; ret
0x00000000004bf35d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bebc5 : and byte ptr [rsi + rcx + 0x18], bl ; ret
0x00000000004b62b4 : and byte ptr [rsi + rsi*8], cl ; call rax
0x00000000004bbda0 : and byte ptr [rsi - 0xb], dh ; call qword ptr [rax]
0x00000000004b5b3c : and byte ptr [rsi - 0xb], dh ; jmp rax
0x00000000004b9450 : and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004c2e60 : and ch, 0xf6 ; call qword ptr [rbx]
0x00000000004047c2 : and ch, byte ptr [rbp] ; jmp rax
0x000000000041d532 : and ch, byte ptr [rdi] ; sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004b567d : and ch, dh ; call qword ptr [rax]
0x00000000004b5685 : and ch, dh ; push qword ptr [rax] ; add byte ptr ss:[rax], al ; retf
0x000000000040bb98 : and cl, byte ptr [rax + 0x63] ; ret 0x8d48
0x00000000004614ff : and cl, byte ptr [rax - 0x75] ; adc byte ptr [r8 - 0x77], cl ; ret
0x000000000042ecc0 : and cl, byte ptr [rdi] ; mov esi, 0x8348024b ; ret
0x000000000040a6bd : and dh, byte ptr [rcx] ; shl byte ptr [rsi - 0x7b], 0xc9 ; js 0x40a711 ; ret
0x00000000004b56bd : and dh, ch ; call qword ptr [rax]
0x00000000004c0461 : and dh, dh ; jmp qword ptr [rdi]
0x00000000004c8090 : and dl, al ; clc ; jmp qword ptr [rcx]
0x0000000000401fd1 : and dword ptr [r9], r14d ; rol byte ptr [rbp - 0x7c], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xbd41
0x0000000000408f75 : and dword ptr [rax + rbx - 0x77], esi ; ret 0xe283
0x00000000004ba64d : and dword ptr [rax], eax ; add byte ptr [rax + 0x3c], dh ; cmc ; call qword ptr [rcx]
0x0000000000445832 : and dword ptr [rax], eax ; je 0x445848 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407eb7 : and dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004ca615 : and dword ptr [rcx], eax ; add byte ptr [rax + 0x10], bh ; sti ; jmp qword ptr [rbx]
0x0000000000401fd2 : and dword ptr [rcx], esi ; rol byte ptr [rbp - 0x7c], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xbd41
0x0000000000408cc7 : and eax, 0x1000 ; ret
0x000000000040999b : and eax, 0x1f ; movzx eax, byte ptr [rdx + rax] ; ret
0x00000000004119f1 : and eax, 0x2bea52 ; pop rax ; ret
0x000000000041b7f5 : and eax, 0x361f8 ; ret
0x0000000000413b07 : and eax, 0x438b4804 ; adc byte ptr [rbx - 0xd], bl ; ret
0x000000000044d48f : and eax, 0x48002853 ; test eax, eax ; je 0x44d4a3 ; call rax
0x0000000000413ac9 : and eax, 0x480b7404 ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000415aab : and eax, 0x4d0d8b44 ; retf 0x2b
0x00000000004bab05 : and eax, 0x4d180000 ; cmc ; call rcx
0x00000000004ad175 : and eax, 0x69a7fffc ; cld ; jmp rax
0x000000000040ef08 : and eax, 0x7fffffff ; pop rbx ; ret
0x000000000040de28 : and eax, 0x7fffffff ; ret
0x000000000041b809 : and eax, 0x8029fdf ; ret
0x000000000046eada : and eax, 0x89484523 ; ret
0x00000000004b7b19 : and eax, 0x9f300001 ; stc ; jmp qword ptr [rax]
0x00000000004ad320 : and eax, 0xaefffdaf ; mov dh, 0xfd ; call rbx
0x00000000004447ef : and eax, 0xe50d8d48 ; retf
0x0000000000445922 : and eax, 0xffffffdf ; cmp al, 0x5b ; jne 0x445938 ; ret
0x00000000004323b8 : and eax, 0xfffffff3 ; mov word ptr [rbx + 8], ax ; pop rbx ; ret
0x0000000000407af3 : and eax, 0xfffffff8 ; ret
0x0000000000408dc1 : and eax, 1 ; ret
0x000000000042153d : and eax, 2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f5f2 : and eax, 4 ; ud2 ; xor eax, eax ; ret
0x0000000000410454 : and eax, 5 ; ret
0x000000000040a6d9 : and eax, 6 ; ret
0x000000000046befd : and eax, dword ptr [rbp + 0x48] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004364a6 : and eax, dword ptr [rbx + 0x48] ; pop rbx ; ret
0x000000000045065f : and ebp, ecx ; retf
0x00000000004b89f8 : and ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b56ad : and ebp, esi ; call rax
0x0000000000431fe4 : and ecx, 1 ; mov eax, r8d ; sub eax, ecx ; ret
0x000000000049ddfc : and ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045a7e8 : and ecx, dword ptr [rax - 0x7d] ; ret 0x3138
0x00000000004473d0 : and ecx, dword ptr [rdi] ; test byte ptr [rsi + rdi*8 - 0x7cb70001], ah ; ret 0x8001
0x00000000004b74cd : and edi, eax ; call rax
0x0000000000418bbc : and edx, 0x80000 ; je 0x418b81 ; ret
0x0000000000409ce5 : and edx, 0xfffffffc ; add edx, 8 ; mov eax, edx ; pop rbx ; ret
0x000000000042fc12 : and edx, 1 ; je 0x42fc2e ; ret
0x00000000004a98c9 : and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7] ; ret
0x00000000004b7cad : and edx, edi ; jmp qword ptr [rax]
0x000000000040a356 : and esi, 0xfd ; sete al ; ret
0x0000000000472e9e : and esi, 0xfffffffb ; add esi, 0x17 ; call r9
0x00000000004b825d : and esi, edi ; jmp rax
0x00000000004b63dd : and esi, esi ; call rax
0x00000000004c03b1 : and esi, esi ; jmp rbx
0x000000000042fbfe : and esi, esi ; ret 0x7410
0x00000000004364a5 : and r8d, dword ptr [rbx + 0x48] ; pop rbx ; ret
0x0000000000413b06 : and rax, 0x438b4804 ; adc byte ptr [rbx - 0xd], bl ; ret
0x000000000042011d : bnd jae 0x420138 ; mov eax, 0x12 ; ret
0x000000000040e876 : bnd jg 0x40e844 ; ret
0x00000000004afed3 : bnd jl 0x4afe88 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004afed2 : bnd jl 0x4afe89 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004bf898 : call 0x124beea5
0x00000000004ad5a8 : call 0x214ad3a5
0x00000000004cc788 : call 0x244cc466
0x0000000000404e99 : call 0x401922
0x0000000000405734 : call 0x401962
0x00000000004a570f : call 0x401a02
0x000000000040574f : call 0x401a32
0x0000000000405792 : call 0x401a42
0x0000000000425869 : call 0x401a82
0x000000000040508b : call 0x401a92
0x0000000000405061 : call 0x401ab2
0x0000000000445024 : call 0x401ad2
0x0000000000405873 : call 0x401b22
0x00000000004950be : call 0x401b32
0x00000000004950bd : call 0x401b33
0x0000000000405152 : call 0x401b82
0x000000000049b2d1 : call 0x407dd2
0x000000000045e96f : call 0x40b422
0x000000000045e96e : call 0x40b423
0x000000000045e96d : call 0x40b424
0x00000000004a1820 : call 0x40e252
0x00000000004430eb : call 0x40f372
0x0000000000403429 : call 0x40f652
0x0000000000415da0 : call 0x412012
0x0000000000415df8 : call 0x412013
0x000000000049565d : call 0x4120c2
0x0000000000416abd : call 0x412d52
0x000000000041737a : call 0x413652
0x000000000045a14e : call 0x4163b2
0x000000000046aeb2 : call 0x4170f2
0x000000000046a6a8 : call 0x417112
0x000000000047d090 : call 0x419b22
0x000000000045dd13 : call 0x419f82
0x000000000046fcc4 : call 0x41bee2
0x0000000000462077 : call 0x41e312
0x0000000000403b09 : call 0x4205e2
0x000000000044709d : call 0x423332
0x0000000000497a9c : call 0x423d52
0x00000000004979fd : call 0x4244c2
0x00000000004496b1 : call 0x425972
0x0000000000499594 : call 0x426012
0x000000000042ce46 : call 0x4290a2
0x000000000048f5c2 : call 0x42b7d2
0x000000000048fc3a : call 0x42bf22
0x0000000000440c61 : call 0x42d702
0x00000000004760d1 : call 0x432332
0x000000000047a13c : call 0x4363d2
0x000000000043c0db : call 0x438b32
0x000000000048e627 : call 0x43b0c2
0x000000000048e701 : call 0x43b172
0x000000000048e700 : call 0x43b173
0x0000000000495d0b : call 0x441fa2
0x0000000000477459 : call 0x443751
0x0000000000477459 : call 0x443752
0x000000000049a5b3 : call 0x446fd2
0x0000000000454290 : call 0x450d02
0x00000000004787f5 : call 0x455212
0x000000000047d67b : call 0x469932
0x00000000004a1f9d : call 0x46ea32
0x000000000044708c : call 0xffffffffc3447095
0x0000000000401fa8 : call 0xffffffffc39d7b0b
0x000000000047de12 : call 0xffffffffc3cb271c
0x000000000049adf6 : call 0xffffffffcbd2f600
0x00000000004c3e38 : call 0xffffffffd54c355f
0x00000000004ac153 : call qword ptr [rax - 0x2f000a09]
0x000000000042a92e : call qword ptr [rax]
0x0000000000464ea1 : call qword ptr [rbx]
0x0000000000407a01 : call qword ptr [rcx]
0x0000000000465df4 : call qword ptr [rdi]
0x00000000004896ad : call qword ptr [rdx]
0x00000000004ad03b : call qword ptr [rip - 0x2c0003d5]
0x00000000004ad633 : call qword ptr [rsi]
0x0000000000438cc6 : call r10
0x0000000000411ee1 : call r12
0x000000000043777b : call r14
0x000000000041d810 : call r8
0x00000000004121a0 : call r9
0x000000000040485e : call rax
0x00000000004acf57 : call rbx
0x000000000040b2c3 : call rcx
0x00000000004ac8cb : call rdi
0x000000000041176c : call rdx
0x000000000042a0ee : call rsi
0x0000000000411ee2 : call rsp
0x00000000004bcd79 : cdq ; cmc ; call qword ptr [rbx]
0x000000000040b2c8 : cdq ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004ad34d : cdq ; std ; call qword ptr [rcx]
0x000000000040514d : cdqe ; mov rdi, rax ; call 0x401b87
0x000000000040b2fe : cdqe ; movzx eax, byte ptr [rdx + rax] ; ret
0x0000000000418a84 : cdqe ; pop rbx ; ret
0x0000000000407bd3 : cdqe ; ret
0x000000000042a270 : clc ; adc dh, byte ptr [rsp + rcx + 0x5b] ; ret
0x0000000000411844 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004a375d : clc ; add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x00000000004a3649 : clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0xfed9
0x00000000004c7d95 : clc ; add byte ptr [rax], al ; xchg rax, rcx ; clc ; call rsi
0x000000000045028c : clc ; add cl, byte ptr [rcx - 0x6bf0be33] ; ret 0x8041
0x000000000043ff01 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xb60f
0x000000000047182f : clc ; add dword ptr [rax + 0xf], ecx ; retf 0x8b41
0x00000000004a4f4e : clc ; add dword ptr [rdi], ecx ; ret 0x4389
0x0000000000444fef : clc ; add eax, 0x105ba ; add byte ptr [rdi], cl ; ret 0x55e9
0x000000000041b68d : clc ; add eax, 0xc47af0f ; ret
0x000000000041d9c6 : clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x000000000046f969 : clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000411627 : clc ; add ecx, dword ptr [rcx + 0x4d0f0c47] ; retf 0x4f89
0x0000000000408dc0 : clc ; and eax, 1 ; ret
0x00000000004b754e : clc ; call qword ptr [rax]
0x00000000004c69fa : clc ; call qword ptr [rdx]
0x00000000004b74ce : clc ; call rax
0x00000000004c7e4a : clc ; call rbx
0x00000000004c6b42 : clc ; call rcx
0x00000000004ac8ca : clc ; call rdi
0x00000000004c85ba : clc ; call rdx
0x00000000004c6b8a : clc ; call rsi
0x00000000004cc8e9 : clc ; cld ; jmp qword ptr [rax]
0x00000000004cc909 : clc ; cld ; jmp qword ptr [rbx]
0x00000000004b5818 : clc ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x3b], dh ; cmc ; call qword ptr [rax]
0x0000000000417c1b : clc ; cmp edx, ecx ; jle 0x417c30 ; add dword ptr [rdi + 0xc], edx ; ret
0x00000000004b772e : clc ; dec dword ptr [rax + 0x60000102] ; lahf ; clc ; call rax
0x00000000004b7866 : clc ; dec dword ptr [rax - 0x3ffffef1] ; cld ; clc ; jmp qword ptr [rax]
0x000000000048e94b : clc ; dec dword ptr [rax - 0x75] ; and al, 0x38 ; jmp 0x48ab8a
0x00000000004954e8 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004905f9 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000048ed2d : clc ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b025
0x000000000048ee1b : clc ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b0a7
0x00000000004b7756 : clc ; inc dword ptr [rax + 4] ; add dword ptr [rax], eax ; jo 0x4b771b ; clc ; jmp rax
0x00000000004b76a6 : clc ; inc dword ptr [rax - 0x3fffff03] ; jo 0x4b76b0 ; call rax
0x00000000004b74c6 : clc ; inc dword ptr [rax - 0x6fffff12] ; and edi, eax ; call rax
0x0000000000499422 : clc ; inc dword ptr [rbp + 0xfc589c0] ; xchg eax, esp ; ret
0x0000000000483739 : clc ; inc dword ptr [rbp - 0x7cc68b40] ; ret
0x000000000048529e : clc ; inc dword ptr [rcx + 1] ; ret 0x8b48
0x0000000000485270 : clc ; inc dword ptr [rcx + 1] ; ret 0x8b49
0x000000000048524f : clc ; inc dword ptr [rcx - 0x77] ; ret 0x1feb
0x00000000004b6120 : clc ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; loopne 0x4b6113 ; cmc ; jmp qword ptr [rax]
0x0000000000413311 : clc ; je 0x4132fb ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000407c6a : clc ; jg 0x407ced ; adc bh, byte ptr [rax + 0xfffd] ; ret
0x00000000004b7476 : clc ; jmp qword ptr [rax]
0x00000000004c71e2 : clc ; jmp qword ptr [rbx]
0x00000000004c8092 : clc ; jmp qword ptr [rcx]
0x00000000004c78da : clc ; jmp qword ptr [rdx]
0x000000000043689b : clc ; jmp rax
0x00000000004c6e02 : clc ; jmp rcx
0x00000000004c6e72 : clc ; jmp rsi
0x00000000004c6a6a : clc ; jmp rsp
0x00000000004b7636 : clc ; lcall [rax - 0x7fffff07] ; pop rsi ; clc ; jmp rax
0x00000000004070fc : clc ; leave ; ret
0x00000000004ac8c6 : clc ; ljmp [rdi + rbx] ; clc ; call rdi
0x00000000004ac8c2 : clc ; ljmp [rdi + rbx] ; clc ; ljmp [rdi + rbx] ; clc ; call rdi
0x0000000000452614 : clc ; mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004070f7 : clc ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000040e067 : clc ; mov dword ptr [rsi], edx ; ret
0x0000000000434b43 : clc ; or al, 0x39 ; ret 0xc189
0x000000000041653c : clc ; or al, 0x74 ; adc byte ptr [rbp + 0x5b0c74c0], al ; ret
0x0000000000486bb7 : clc ; or byte ptr [rdi], cl ; ret 0x8389
0x000000000043685d : clc ; or dword ptr [rax - 0x77], ecx ; ret 0x4489
0x0000000000407a12 : clc ; ret
0x00000000004ad3cd : clc ; std ; call rbx
0x00000000004ad3a9 : clc ; std ; call rdi
0x000000000042a0ea : clc ; std ; ja 0x42a0f4 ; call rsi
0x00000000004ad6c9 : clc ; std ; jmp qword ptr [rsi]
0x000000000041a571 : clc ; test rax, rax ; cmove rax, rdx ; ret
0x00000000004146dd : clc ; xadd edx, edi ; adc ch, byte ptr [rcx] ; ret 0x48d
0x00000000004cbe28 : clc ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x000000000044f3d8 : cld ; add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x000000000040f95b : cld ; add dword ptr [rcx + rdi + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x0000000000409ce7 : cld ; add edx, 8 ; mov eax, edx ; pop rbx ; ret
0x00000000004cb83a : cld ; call qword ptr [rax]
0x00000000004ad236 : cld ; call qword ptr [rdx]
0x00000000004ad03a : cld ; call qword ptr [rip - 0x2c0003d5]
0x00000000004ad026 : cld ; call rax
0x00000000004ad03e : cld ; call rbx
0x00000000004ad0aa : cld ; call rcx
0x00000000004ad066 : cld ; call rdi
0x00000000004ad0ee : cld ; call rsi
0x00000000004b786d : cld ; clc ; jmp qword ptr [rax]
0x000000000049730f : cld ; cli ; dec dword ptr [rax - 0x77] ; ret 0x7b8
0x00000000004bf551 : cld ; cmc ; call rsi
0x00000000004ac171 : cld ; cmc ; jmp qword ptr [rax]
0x00000000004bbf0c : cld ; cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbf0f ; jmp qword ptr [rax]
0x0000000000466d78 : cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000483d60 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004342d3 : cld ; dec dword ptr [rax - 0x77] ; ret 0xab8
0x00000000004ad036 : cld ; dec dword ptr [rbx + 0x2b] ; cld ; call qword ptr [rip - 0x2c0003d5]
0x00000000004ad242 : cld ; dec eax ; cmp al, 0xfc ; lcall [rsp + rdi] ; cld ; jmp qword ptr [rax]
0x00000000004ad27e : cld ; dec esi ; jp 0x4ad288 ; inc ebp ; jp 0x4ad28c ; call rdi
0x0000000000435508 : cld ; fild word ptr [rax] ; add bl, ch ; ret 0x9066
0x0000000000437ea6 : cld ; inc dword ptr [rcx - 0x77] ; ret 0x4c8b
0x0000000000461f6a : cld ; inc dword ptr [rcx - 0x80] ; jg 0x461fca ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ad062 : cld ; inc dword ptr [rdx] ; pop rdx ; cld ; call rdi
0x00000000004b7f96 : cld ; inc eax ; add qword ptr [rax], r8 ; and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x00000000004ad282 : cld ; inc ebp ; jp 0x4ad288 ; call rdi
0x000000000047836a : cld ; jg 0x47427f ; jmp 0x474dd2
0x00000000004ad022 : cld ; jmp qword ptr [rax]
0x00000000004ad17e : cld ; jmp qword ptr [rbx]
0x00000000004ad176 : cld ; jmp qword ptr [rdi - 0x1f000397]
0x00000000004cbe2a : cld ; jmp qword ptr [rdi]
0x00000000004ad17a : cld ; jmp rax
0x00000000004ad1ae : cld ; jmp rbx
0x00000000004ad09e : cld ; jmp rcx
0x00000000004ad216 : cld ; jmp rdi
0x00000000004ad2c2 : cld ; jmp rdx
0x00000000004b7fa6 : cld ; lcall [rax - 0x3ffffeb1] ; cld ; call rax
0x00000000004ad01e : cld ; lcall [rdi + 0x20fffc31] ; xor edi, esp ; call rax
0x00000000004ad212 : cld ; lcall [rsi + 0x4a] ; cld ; jmp rdi
0x00000000004ad246 : cld ; lcall [rsp + rdi] ; cld ; jmp qword ptr [rax]
0x00000000004ad09a : cld ; ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004ad20e : cld ; ljmp [rdx + rcx*2 + 0x4a5efffc] ; cld ; jmp rdi
0x00000000004ad096 : cld ; push qword ptr [rax + 0x54] ; cld ; ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004a98cf : cld ; ret
0x00000000004146e0 : cli ; adc ch, byte ptr [rcx] ; ret 0x48d
0x00000000004b087e : cli ; add bl, byte ptr [rbx + rax + 0x5c] ; add ecx, dword ptr [rcx + 1] ; retf 0x1003
0x00000000004083f3 : cli ; add ch, byte ptr [rcx] ; ret 0xc26b
0x00000000004081e8 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000004081d1 : cli ; add cl, byte ptr [rax + 0x29] ; retf 0x8948
0x0000000000484d73 : cli ; add cl, byte ptr [rdi] ; test ah, bl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x74fe
0x0000000000484dd1 : cli ; add dh, byte ptr [rbx - 0xa] ; ret 0x74fe
0x000000000046b078 : cli ; add esi, dword ptr [rsi + 0xc] ; mov eax, 0x15 ; ret
0x00000000004b7c56 : cli ; call qword ptr [rax]
0x00000000004ca0ea : cli ; call qword ptr [rdx]
0x00000000004b7c6e : cli ; call rax
0x00000000004c9cfa : cli ; call rsp
0x00000000004bf439 : cli ; cmc ; jmp qword ptr [rbx]
0x00000000004734d8 : cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000497310 : cli ; dec dword ptr [rax - 0x77] ; ret 0x7b8
0x000000000047f6b2 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000472551 : cli ; dec dword ptr [rax - 0x77] ; retf
0x000000000048e55b : cli ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48afae
0x000000000048e575 : cli ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b025
0x000000000048e5f7 : cli ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b032
0x000000000048e644 : cli ; dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b0a7
0x00000000004898e6 : cli ; dec dword ptr [rbx - 0x7cdbdb8c] ; ret
0x00000000004b7d86 : cli ; inc dword ptr [rax + 0x13d] ; out dx, eax ; cli ; call rax
0x000000000048fcc9 : cli ; inc dword ptr [rbp - 0x427af040] ; ret 0xffff
0x000000000048d7ba : cli ; inc dword ptr [rbp - 0x75] ; xor al, 0x24 ; jmp 0x48a200
0x0000000000480da9 : cli ; inc dword ptr [rcx - 0xa] ; adc byte ptr [rcx - 0x77], r8b ; ret 0x8b4c
0x000000000040a814 : cli ; jg 0x40a82a ; xchg eax, esi ; ret 0xd184
0x00000000004b7c96 : cli ; jmp qword ptr [rax]
0x00000000004b7c2e : cli ; jmp rax
0x000000000046a08b : cli ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000040e064 : cli ; mov rax, rdi ; mov dword ptr [rsi], edx ; ret
0x000000000040faf1 : cli ; or byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004b7c66 : cli ; push qword ptr [rax + 0x31] ; add dword ptr [rax], eax ; jo 0x4b7c8c ; cli ; call rax
0x00000000004ad0a8 : cli ; push rdx ; cld ; call rcx
0x000000000049b2d2 : cli ; retf 0xfff6
0x0000000000411681 : cli ; sbb dword ptr [rax + 0x29], ecx ; ret 0x6948
0x0000000000411580 : cli ; sbb dword ptr [rax + 0x29], ecx ; retf 0xff2
0x00000000004ac152 : cmc ; call qword ptr [rax - 0x2f000a09]
0x00000000004ac14a : cmc ; call qword ptr [rax]
0x00000000004acfa6 : cmc ; call qword ptr [rbx]
0x00000000004ba652 : cmc ; call qword ptr [rcx]
0x00000000004be9ea : cmc ; call qword ptr [rdi]
0x00000000004bbbb2 : cmc ; call qword ptr [rdx]
0x00000000004be3ca : cmc ; call qword ptr [rsi]
0x00000000004ac156 : cmc ; call rax
0x00000000004bd0a2 : cmc ; call rbx
0x00000000004bab0a : cmc ; call rcx
0x00000000004b95aa : cmc ; call rsi
0x00000000004ac1b2 : cmc ; call rsp
0x00000000004ac17a : cmc ; dec dword ptr [rax - 7] ; cmc ; call rax
0x00000000004b5ad6 : cmc ; dec dword ptr [rax] ; add byte ptr [r8], al ; xor byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x00000000004b5926 : cmc ; dec dword ptr [rax] ; add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004b60e6 : cmc ; dec dword ptr [rax] ; imul eax, dword ptr [rax], 0 ; adc dl, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b5d06 : cmc ; dec dword ptr [rax] ; push rsp ; add byte ptr [rax], al ; nop ; cwde ; cmc ; jmp qword ptr [rax]
0x00000000004b598e : cmc ; dec eax ; add byte ptr [r8], al ; nop ; cmc ; jmp rax
0x00000000004b5806 : cmc ; dec eax ; cmp eax, dword ptr [rax] ; add al, dh ; cmp dh, ch ; jmp rax
0x00000000004b6246 : cmc ; dec eax ; jae 0x4b6254 ; add byte ptr [rax], dh ; add dh, dh ; call qword ptr [rax]
0x00000000004b5776 : cmc ; inc dword ptr [rax + 0x30000039] ; xor ebp, esi ; jmp rax
0x00000000004b6186 : cmc ; inc dword ptr [rax - 0x2fffff91] ; out dx, eax ; cmc ; call rax
0x00000000004b5966 : cmc ; inc dword ptr [rax] ; add byte ptr [r8], al ; mov al, 0x48 ; cmc ; jmp qword ptr [rax]
0x00000000004ac172 : cmc ; jmp qword ptr [rax]
0x00000000004b9282 : cmc ; jmp qword ptr [rbx]
0x00000000004be4fa : cmc ; jmp qword ptr [rcx]
0x00000000004bb41a : cmc ; jmp qword ptr [rdi]
0x00000000004b94b2 : cmc ; jmp qword ptr [rdx]
0x00000000004b577e : cmc ; jmp rax
0x00000000004bb86a : cmc ; jmp rbx
0x00000000004bc0a2 : cmc ; jmp rcx
0x00000000004bc50a : cmc ; jmp rdi
0x00000000004bdc92 : cmc ; jmp rdx
0x00000000004beaf2 : cmc ; jmp rsi
0x00000000004b997a : cmc ; jmp rsp
0x00000000004b5eee : cmc ; lcall [rax + 0x5f] ; ret 0xfff5
0x00000000004b5c0e : cmc ; lcall [rax - 0x6fffffb1] ; mov ch, dh ; call rax
0x00000000004b5c3e : cmc ; lcall [rax - 0x7fffffb0] ; mov dh, ch ; call rax
0x00000000004ac1ae : cmc ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x00000000004ac1aa : cmc ; lcall [rdi + rdi*8 - 0xb] ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x00000000004acf9a : cmc ; lcall [rdx] ; push 0x6320fff5 ; cmc ; jmp qword ptr [rax]
0x000000000041b938 : cmc ; pop rbx ; sete al ; pop rbp ; pop r14 ; ret
0x00000000004b57ae : cmc ; push qword ptr [rax + 0x4000003a] ; cmp ch, dh ; call rax
0x00000000004b5ef6 : cmc ; push qword ptr [rax - 0x2fffffa1] ; ret 0xfff5
0x00000000004b59c6 : cmc ; push qword ptr [rax - 0x4fffffbe] ; cmc ; jmp rax
0x00000000004b5ff6 : cmc ; push qword ptr [rax - 0x6fffff9a] ; fdiv st(5) ; jmp rax
0x00000000004b6056 : cmc ; push qword ptr [rax - 0x7fffff98] ; fdivrp st(5) ; call rax
0x00000000004b56a6 : cmc ; push qword ptr [rax - 0xffffca] ; and ebp, esi ; call rax
0x00000000004b5686 : cmc ; push qword ptr [rax] ; add byte ptr ss:[rax], al ; retf
0x00000000004b609e : cmc ; push rax ; imul eax, dword ptr [rax], 0xf5e09000 ; call qword ptr [rax]
0x00000000004b5636 : cmc ; push rax ; xor al, 0 ; add byte ptr [rdi + rbx - 0xb], bh ; call qword ptr [rax]
0x00000000004b55b6 : cmc ; push rax ; xor al, byte ptr [rax] ; add byte ptr [rsi], dh ; adc al, 0xf5 ; call qword ptr [rax]
0x00000000004b5576 : cmc ; push rax ; xor dword ptr [rax], eax ; add byte ptr [rbx], bl ; add esi, ebp ; call qword ptr [rax]
0x00000000004b5676 : cmc ; push rax ; xor eax, 0x20a50000 ; cmc ; call qword ptr [rax]
0x0000000000445517 : cmc ; retf 0xfffc
0x00000000004ad5a9 : cmc ; std ; jmp qword ptr [rax]
0x0000000000409678 : cmovae eax, ecx ; ret
0x000000000041778c : cmovb eax, ecx ; mov word ptr [rdx + 0x16], ax ; pop rbx ; pop rbp ; ret
0x0000000000417852 : cmovb eax, ecx ; mov word ptr [rdx + 0x16], ax ; ret
0x0000000000411016 : cmove eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000410f2d : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040c53e : cmove eax, ebx ; pop rbx ; ret
0x000000000040f6bd : cmove eax, edx ; pop rbx ; ret
0x0000000000407ca0 : cmove eax, edx ; ret
0x000000000040c53d : cmove eax, r11d ; pop rbx ; ret
0x000000000049a5ae : cmove edx, eax ; xor eax, eax ; call 0x446fd7
0x000000000041a575 : cmove rax, rdx ; ret
0x000000000049a5ad : cmove rdx, rax ; xor eax, eax ; call 0x446fd8
0x000000000040cb0f : cmovg edx, esi ; mov dword ptr [rcx + 0x68], edx ; ret
0x000000000041162c : cmovge ecx, edx ; mov dword ptr [rdi + 8], ecx ; ret
0x000000000043201b : cmovl eax, eax ; ret
0x000000000043201a : cmovl eax, r8d ; ret
0x0000000000402643 : cmovl ebp, dword ptr [rcx] ; ret
0x000000000041b121 : cmovne eax, edx ; call rax
0x0000000000475ff6 : cmovne eax, edx ; jmp 0x4722ac
0x000000000040f67b : cmovne eax, edx ; ret
0x0000000000425562 : cmovne edx, eax ; call rdx
0x000000000041b120 : cmovne rax, rdx ; call rax
0x0000000000425561 : cmovne rdx, rax ; call rdx
0x0000000000408fe0 : cmovs eax, dword ptr [rbx + 0x5d5b08c4] ; ret
0x0000000000429070 : cmovs eax, dword ptr [rbx - 0x3fceef3c] ; pop rbx ; ret
0x000000000041bff4 : cmovs eax, dword ptr [rcx] ; retf 0x8948
0x00000000004ac170 : cmp ah, bh ; cmc ; jmp qword ptr [rax]
0x0000000000441591 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000412dce : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000004c4f78 : cmp al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000045c19c : cmp al, 0x16 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x00000000004ba64c : cmp al, 0x21 ; add byte ptr [rax], al ; jo 0x4ba695 ; cmc ; call qword ptr [rcx]
0x0000000000410b34 : cmp al, 0x24 ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000043c41a : cmp al, 0x24 ; jne 0x43c3d9 ; mov rax, qword ptr [rbp + 0x10] ; jmp 0x43c3f0
0x0000000000418fa4 : cmp al, 0x32 ; add byte ptr [rbp + 7], dh ; ret
0x000000000040e3bb : cmp al, 0x32 ; ret
0x0000000000403a08 : cmp al, 0x39 ; ret
0x00000000004bbf4c : cmp al, 0x3a ; add byte ptr [rax], al ; loopne 0x4bbfcf ; cmc ; jmp qword ptr [rax]
0x0000000000431392 : cmp al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000042cded : cmp al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000445925 : cmp al, 0x5b ; jne 0x445935 ; ret
0x0000000000416a81 : cmp al, 0x5b ; ret
0x000000000040d087 : cmp al, 0x60 ; je 0x40d0a3 ; ret
0x000000000040a283 : cmp al, 0x61 ; je 0x40a2d1 ; mov eax, 1 ; ret
0x00000000004bf54c : cmp al, 0x70 ; add byte ptr [rax], al ; sar ah, 1 ; cmc ; call rsi
0x000000000047bbc6 : cmp al, 0x89 ; ret
0x0000000000428368 : cmp al, 0xa ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004c324c : cmp al, 0xad ; add byte ptr [rax], al ; loopne 0x4c324a ; idiv bh ; ret
0x00000000004284ec : cmp al, 0xe ; add byte ptr [rax - 0x77], cl ; retf 0xec75
0x00000000004285e7 : cmp al, 0xf ; add byte ptr [rax - 0x77], cl ; retf 0x1574
0x00000000004284d0 : cmp al, 0xf ; add byte ptr [rax - 0x77], cl ; retf 0x1c74
0x00000000004b944c : cmp al, 0xf ; add byte ptr [rax], al ; and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004ba651 : cmp al, 0xf5 ; call qword ptr [rcx]
0x00000000004c0891 : cmp al, 0xf6 ; call qword ptr [rsi]
0x00000000004c72c9 : cmp al, 0xf8 ; call rdi
0x00000000004ad249 : cmp al, 0xfc ; jmp qword ptr [rax]
0x00000000004ad245 : cmp al, 0xfc ; lcall [rsp + rdi] ; cld ; jmp qword ptr [rax]
0x000000000040d25d : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046cc08 : cmp al, 7 ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8d4b
0x000000000049b2cf : cmp al, 8 ; call 0x407dd4
0x00000000004bbf4d : cmp al, byte ptr [rax] ; add al, ah ; jbe 0x4bbf4e ; jmp qword ptr [rax]
0x00000000004b57b1 : cmp al, byte ptr [rax] ; add byte ptr [rax + 0x38], al ; cmc ; call rax
0x000000000040b8ba : cmp al, byte ptr [rbx - 0x7cb7fe40] ; ret 0xf601
0x00000000004b7d59 : cmp al, byte ptr [rcx] ; add byte ptr [rax - 0x1e], dh ; cli ; call qword ptr [rax]
0x00000000004b7d51 : cmp al, byte ptr [rcx] ; add byte ptr [rax], al ; loop 0x4b7d57 ; call rax
0x000000000040eb5a : cmp al, byte ptr [rsi] ; je 0x40ebc6 ; xor eax, eax ; ret
0x0000000000474c7f : cmp al, ch ; jmp 0x474c49
0x0000000000474fc7 : cmp al, ch ; ret
0x00000000004628d8 : cmp al, ch ; ret 0x18
0x0000000000470ca8 : cmp al, ch ; ret 0xfa64
0x000000000043f748 : cmp al, ch ; ret 0xffe1
0x000000000047090f : cmp al, ch ; retf
0x0000000000419044 : cmp al, dh ; sete al ; movzx eax, al ; ret
0x0000000000419043 : cmp al, sil ; sete al ; movzx eax, al ; ret
0x0000000000419ef0 : cmp bl, 0x42 ; sete al ; pop rbx ; ret
0x00000000004b57b4 : cmp bpl, sil ; call rax
0x0000000000411719 : cmp byte ptr [r8 + 0x29], 0 ; je 0x411730 ; ret
0x000000000041171a : cmp byte ptr [rax + 0x29], 0 ; je 0x41172f ; ret
0x0000000000408f04 : cmp byte ptr [rax + 0x2c], 0 ; jne 0x408f17 ; ret
0x00000000004150c7 : cmp byte ptr [rax + 0x2c], 0 ; jne 0x4150d7 ; pop rbx ; ret
0x00000000004b6d40 : cmp byte ptr [rax + 0x8600000], 0xf7 ; call rax
0x000000000045c19a : cmp byte ptr [rax + 0xf00163c], al ; xchg eax, esp ; ret 0xb60f
0x000000000042c5ab : cmp byte ptr [rax + 3], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000040cb74 : cmp byte ptr [rax + rax], ch ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004205bd : cmp byte ptr [rax - 0x18], dh ; je 0x4205cf ; xor eax, eax ; ret
0x00000000004205bc : cmp byte ptr [rax - 0x18], sil ; je 0x4205d0 ; xor eax, eax ; ret
0x000000000045495e : cmp byte ptr [rax - 0x77], cl ; fimul dword ptr [rbx - 0x16d7dbb4] ; ret 0xfffe
0x0000000000471da7 : cmp byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000004a72c4 : cmp byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000045e8e9 : cmp byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000479a71 : cmp byte ptr [rax - 0x77], cl ; retf
0x00000000004728d3 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000046fd86 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004096c9 : cmp byte ptr [rax - 1], 0 ; js 0x4096c9 ; sub rax, rsi ; ret
0x00000000004b57cc : cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rax]
0x00000000004b5739 : cmp byte ptr [rax], al ; add byte ptr [rax + 0x27], dh ; cmc ; call rax
0x00000000004bbd9d : cmp byte ptr [rax], al ; add byte ptr [rax], ah ; jbe 0x4bbd9e ; call qword ptr [rax]
0x000000000046e994 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004a401c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xffe1
0x00000000004bbdb5 : cmp byte ptr [rax], al ; add byte ptr [rax], bl ; jbe 0x4bbdb6 ; call qword ptr [rax]
0x0000000000402674 : cmp byte ptr [rbp + 9], dh ; jmp 0x402648
0x0000000000439d67 : cmp byte ptr [rbp - 0x48], dh ; add byte ptr [rax], al ; add byte ptr [rdi], 0xf ; ret 0x4389
0x00000000004c78d8 : cmp byte ptr [rbp - 8], dh ; jmp qword ptr [rdx]
0x0000000000410ac6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004b99cc : cmp byte ptr [rbx + 0xa5b0207], al ; ret
0x0000000000416550 : cmp byte ptr [rbx + 0xb], 0 ; je 0x416569 ; xor eax, eax ; pop rbx ; ret
0x00000000004c371c : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; ret 0xe0a
0x00000000004c53c4 : cmp byte ptr [rbx - 0x6ff1bbf9], al ; add dword ptr [rbx], eax ; retf
0x0000000000437ea4 : cmp byte ptr [rbx - 0x76be0004], bl ; ret 0x4c8b
0x000000000044ea18 : cmp byte ptr [rbx - 0x7ccbdba4], cl ; ret
0x000000000041b280 : cmp byte ptr [rbx], 0 ; jne 0x41b29a ; pop rbx ; ret
0x000000000041b310 : cmp byte ptr [rbx], 0 ; jne 0x41b32a ; pop rbx ; ret
0x000000000041b2c2 : cmp byte ptr [rbx], 0 ; pop rbx ; sete al ; ret
0x000000000041b352 : cmp byte ptr [rbx], 0 ; pop rbx ; setne al ; ret
0x000000000041b232 : cmp byte ptr [rbx], 0 ; setne al ; pop rbx ; ret
0x00000000004561aa : cmp byte ptr [rcx + 4], 0 ; je 0x4561d0 ; xor eax, eax ; ret
0x000000000045e96a : cmp byte ptr [rcx - 0x75], al ; call 0x40b427
0x000000000049b694 : cmp byte ptr [rcx - 0x76b70006], bh ; ret
0x00000000004b5778 : cmp byte ptr [rcx], 0 ; add byte ptr [rax], dh ; xor ebp, esi ; jmp rax
0x0000000000409938 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000040cb95 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004cb07b : cmp byte ptr [rcx], al ; ret
0x000000000040f94d : cmp byte ptr [rcx], bh ; ret 0x4f0f
0x0000000000457c84 : cmp byte ptr [rcx], ch ; ret 0xc283
0x00000000004170f4 : cmp byte ptr [rdi + 0x12], 0 ; je 0x417107 ; ret
0x000000000042dd30 : cmp byte ptr [rdi + 0x24], 0 ; je 0x42dd46 ; ret
0x0000000000413635 : cmp byte ptr [rdi + 0x51], 0 ; je 0x413648 ; xor eax, eax ; ret
0x0000000000413fac : cmp byte ptr [rdi + 0x51], 0 ; je 0x413fc9 ; xor eax, eax ; pop rbx ; ret
0x0000000000414335 : cmp byte ptr [rdi + 0x51], 0 ; je 0x414348 ; xor eax, eax ; ret
0x0000000000420550 : cmp byte ptr [rdi + 0x51], 0 ; je 0x420568 ; xor eax, eax ; ret
0x0000000000421f95 : cmp byte ptr [rdi + 0x51], 0 ; je 0x421fa8 ; xor eax, eax ; ret
0x000000000042210c : cmp byte ptr [rdi + 0x51], 0 ; je 0x422120 ; xor eax, eax ; ret
0x0000000000422305 : cmp byte ptr [rdi + 0x51], 0 ; je 0x422318 ; xor eax, eax ; ret
0x00000000004290b0 : cmp byte ptr [rdi + 0x51], 0 ; je 0x4290c8 ; xor eax, eax ; ret
0x000000000042fcd9 : cmp byte ptr [rdi + 0xa], dh ; jne 0x42fcd0 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000408e36 : cmp byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000004b55ac : cmp byte ptr [rdi], cl ; cmc ; call rax
0x000000000048134d : cmp byte ptr [rdi], cl ; ret
0x0000000000466b7a : cmp byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x000000000047ad15 : cmp byte ptr [rdx + 0xa1], 0 ; je 0x47ad29 ; ret
0x0000000000454a0b : cmp byte ptr [rdx + rcx + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418fa3 : cmp byte ptr [rdx + rsi], 0 ; jne 0x418fb7 ; ret
0x000000000040eb59 : cmp byte ptr [rdx], 6 ; je 0x40ebc7 ; xor eax, eax ; ret
0x0000000000438cc2 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; call r10
0x00000000004b7d50 : cmp byte ptr [rdx], bh ; add dword ptr [rax], eax ; add dl, ah ; cli ; call rax
0x00000000004289b5 : cmp byte ptr [rip + 0x508b0676], al ; add al, 0x83 ; ret 0x101
0x000000000040eade : cmp byte ptr [rip + 0x508b0676], al ; add al, 0x83 ; ret 0x4101
0x000000000040ea8f : cmp byte ptr [rip + 0x508b0676], al ; add al, 0x83 ; ret 0x4102
0x00000000004b7d88 : cmp byte ptr [rip - 0x10ffffff], 0xfa ; call rax
0x00000000004199d0 : cmp byte ptr [rsi], 0x98 ; je 0x4199e7 ; xor eax, eax ; ret
0x00000000004b76a8 : cmp ch, 0 ; add al, al ; jo 0x4b76ae ; call rax
0x00000000004b6224 : cmp ch, 0xf5 ; jmp qword ptr [rax]
0x00000000004b57b5 : cmp ch, dh ; call rax
0x00000000004b57cd : cmp ch, dh ; jmp qword ptr [rax]
0x000000000041ea5a : cmp cl, byte ptr [rax + 0x63] ; ret
0x00000000004861b5 : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000477d9d : cmp cl, ch ; ret 0xff95
0x00000000004a755a : cmp cl, ch ; ret 0xfffd
0x00000000004c29b8 : cmp cl, dl ; idiv bh ; ret 0
0x000000000040a37b : cmp dh, 0x42 ; sete al ; ret
0x000000000040a31a : cmp dh, 1 ; setbe al ; ret
0x00000000004b580d : cmp dh, ch ; jmp rax
0x00000000004b64bd : cmp dh, dh ; call rax
0x0000000000418b63 : cmp dl, 4 ; je 0x418b7f ; xor eax, eax ; ret
0x00000000004c9e99 : cmp dl, bh ; jmp qword ptr [rax]
0x00000000004c9e98 : cmp dl, dil ; jmp qword ptr [rax]
0x0000000000409a05 : cmp dword ptr [rax + 4], esi ; jne 0x409a01 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004335dd : cmp dword ptr [rax - 0x77], ecx ; retf 0x894c
0x00000000004bbeed : cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbeee ; call qword ptr [rdx]
0x00000000004bbf0d : cmp dword ptr [rax], eax ; add al, al ; jbe 0x4bbf0e ; jmp qword ptr [rax]
0x00000000004bbe15 : cmp dword ptr [rax], eax ; add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rbx]
0x000000000047173a : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x00000000004b5779 : cmp dword ptr [rax], eax ; add byte ptr [rax], dh ; xor ebp, esi ; jmp rax
0x0000000000404e93 : cmp dword ptr [rbp - 0x1c], -1 ; jne 0x404eb1 ; call 0x401928
0x000000000040f95e : cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000485ae3 : cmp dword ptr [rcx - 7], ebx ; dec dword ptr [rax + 0xf] ; ret 0x894c
0x00000000004cbe25 : cmp dword ptr [rcx], eax ; add al, bh ; xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x000000000040eb03 : cmp dword ptr [rdi + 0x10], eax ; setae al ; movzx eax, al ; ret
0x0000000000409cf6 : cmp dword ptr [rdi + 0x18], 0 ; je 0x409d09 ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000040e113 : cmp dword ptr [rdi + 0x20], 0 ; sete al ; ret
0x0000000000415f80 : cmp dword ptr [rdi + 0x24], esi ; jae 0x415f95 ; ret
0x0000000000411051 : cmp dword ptr [rdi + 0x36], 0 ; je 0x411067 ; ret
0x0000000000419ea2 : cmp dword ptr [rdi + 0xc], edx ; je 0x419eb5 ; ret
0x0000000000409973 : cmp dword ptr [rdi + 8], 0 ; js 0x409987 ; ret
0x0000000000417954 : cmp dword ptr [rdi], eax ; jg 0x417966 ; xor eax, eax ; ret
0x000000000040b58f : cmp dword ptr [rdx + 0x16], ebx ; jg 0x40b551 ; xor eax, eax ; ret
0x000000000040b55e : cmp dword ptr [rdx + 0x16], ecx ; jl 0x40b518 ; mov rax, rdi ; ret
0x000000000040b58e : cmp dword ptr [rdx + 0x16], r11d ; jg 0x40b552 ; xor eax, eax ; ret
0x000000000042a0e9 : cmp eax, -3 ; ja 0x42a0f5 ; call rsi
0x000000000042a26f : cmp eax, 0x12 ; je 0x42a286 ; pop rbx ; ret
0x00000000004a77de : cmp eax, 0x228c3d ; call rax
0x00000000004a778a : cmp eax, 0x228ce9 ; call rax
0x00000000004238ae : cmp eax, 0x2acbc5 ; call rax
0x00000000004095b1 : cmp eax, 0x2c6f6e ; xor eax, eax ; ret
0x000000000040c6aa : cmp eax, 0x315b002c ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000041d2bf : cmp eax, 0x39ffffff ; ret
0x0000000000447b9f : cmp eax, 0x89fffb9e ; ret 0xe281
0x00000000004350cf : cmp eax, 0x89ffffec ; ret
0x0000000000437852 : cmp eax, 0x8ec8348 ; mov rdi, rdx ; call r8
0x00000000004b7d89 : cmp eax, 0xef000001 ; cli ; call rax
0x00000000004b7d91 : cmp eax, 0xf4f00001 ; cli ; jmp qword ptr [rax]
0x000000000040e8fd : cmp eax, 2 ; je 0x40e90f ; xor eax, eax ; ret
0x00000000004b5809 : cmp eax, dword ptr [rax] ; add al, dh ; cmp dh, ch ; jmp rax
0x00000000004b5819 : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x3b], dh ; cmc ; call qword ptr [rax]
0x000000000047023e : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bc09d : cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; js 0x4bc09e ; jmp rcx
0x000000000041b281 : cmp eax, dword ptr [rax] ; jne 0x41b299 ; pop rbx ; ret
0x000000000041b311 : cmp eax, dword ptr [rax] ; jne 0x41b329 ; pop rbx ; ret
0x000000000041b2c3 : cmp eax, dword ptr [rax] ; pop rbx ; sete al ; ret
0x000000000041b353 : cmp eax, dword ptr [rax] ; pop rbx ; setne al ; ret
0x00000000004aef83 : cmp eax, dword ptr [rax] ; retf 0x3b9a
0x000000000041b233 : cmp eax, dword ptr [rax] ; setne al ; pop rbx ; ret
0x0000000000436eca : cmp eax, dword ptr [rcx] ; jge 0x436ea9 ; movsx eax, byte ptr [rdx + 0x14] ; ret
0x0000000000466d74 : cmp eax, ebp ; xchg byte ptr [rcx - 4], ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419d0c : cmp eax, ecx ; jne 0x419d06 ; xor eax, eax ; ret
0x000000000041a534 : cmp eax, ecx ; jne 0x41a526 ; xor eax, eax ; ret
0x000000000041c281 : cmp eax, ecx ; jne 0x41c276 ; xor eax, eax ; ret
0x0000000000419099 : cmp eax, edx ; jne 0x41907d ; ret
0x000000000041ba0d : cmp eax, edx ; jne 0x41ba01 ; mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x000000000040b49f : cmp eax, esi ; jne 0x40b476 ; ret
0x0000000000462076 : cmp ebp, eax ; xchg eax, esp ; ret 0xfffb
0x00000000004207b1 : cmp ebp, ebx ; ja 0x4207a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b937 : cmp ebp, esi ; pop rbx ; sete al ; pop rbp ; pop r14 ; ret
0x0000000000407e31 : cmp ecx, -1 ; jne 0x407e17 ; xor eax, eax ; ret
0x0000000000409675 : cmp ecx, 4 ; cmovae eax, ecx ; ret
0x0000000000412cb2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409107 : cmp ecx, dword ptr [rdi + 0x24] ; jbe 0x409118 ; mov dword ptr [rdi + 0x24], ecx ; ret
0x000000000040975e : cmp ecx, eax ; je 0x409756 ; mov eax, ecx ; ret
0x000000000040975d : cmp ecx, eax ; je 0x409757 ; mov eax, ecx ; ret
0x0000000000418acd : cmp ecx, ebx ; jne 0x418ab7 ; xor eax, eax ; pop rbx ; ret
0x000000000041b742 : cmp edi, eax ; setae al ; movzx eax, al ; ret
0x000000000041b7c4 : cmp edi, ecx ; jle 0x41b7b0 ; xor edx, edx ; xor eax, edx ; pop rbx ; ret
0x000000000040de24 : cmp edi, esi ; jne 0x40de19 ; and eax, 0x7fffffff ; ret
0x000000000041c4e3 : cmp edi, esi ; setne al ; add eax, eax ; ret
0x0000000000414677 : cmp edx, eax ; jle 0x4146b7 ; lea eax, [rdi + 1] ; ret
0x0000000000417c1c : cmp edx, ecx ; jle 0x417c2f ; add dword ptr [rdi + 0xc], edx ; ret
0x000000000040cb0d : cmp edx, esi ; cmovg edx, esi ; mov dword ptr [rcx + 0x68], edx ; ret
0x000000000042011c : cmp edx, esi ; jae 0x420139 ; mov eax, 0x12 ; ret
0x000000000040e875 : cmp edx, esi ; jg 0x40e845 ; ret
0x000000000041ba76 : cmp esi, eax ; jl 0x41ba55 ; ret
0x000000000041babc : cmp esi, eax ; jl 0x41ba95 ; ret
0x00000000004b581d : cmp esi, ebp ; call qword ptr [rax]
0x000000000040f818 : cmp esi, ecx ; jne 0x40f7c6 ; pop rbx ; ret
0x00000000004b6ded : cmp esi, edi ; call qword ptr [rax]
0x00000000004b64cd : cmp esi, esi ; call qword ptr [rax]
0x000000000040f95a : cmp esp, 1 ; je 0x40f9a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416872 : cmp esp, dword ptr [rbp + 0x28] ; jl 0x416859 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e112 : cmp qword ptr [rdi + 0x20], 0 ; sete al ; ret
0x000000000040d086 : cmp r8b, 0x60 ; je 0x40d0a4 ; ret
0x0000000000418acc : cmp r9d, r11d ; jne 0x418ab8 ; xor eax, eax ; pop rbx ; ret
0x000000000042a0e8 : cmp rax, -3 ; ja 0x42a0f6 ; call rsi
0x0000000000436ec9 : cmp rax, qword ptr [rcx] ; jge 0x436eaa ; movsx eax, byte ptr [rdx + 0x14] ; ret
0x000000000041a533 : cmp rax, rcx ; jne 0x41a527 ; xor eax, eax ; ret
0x000000000041c280 : cmp rax, rcx ; jne 0x41c277 ; xor eax, eax ; ret
0x0000000000419098 : cmp rax, rdx ; jne 0x41907e ; ret
0x000000000040b49e : cmp rax, rsi ; jne 0x40b477 ; ret
0x00000000004207b0 : cmp rbp, rbx ; ja 0x4207a2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c4e2 : cmp rdi, rsi ; setne al ; add eax, eax ; ret
0x000000000040f817 : cmp rsi, r9 ; jne 0x40f7c7 ; pop rbx ; ret
0x000000000040a37a : cmp sil, 0x42 ; sete al ; ret
0x000000000040a319 : cmp sil, 1 ; setbe al ; ret
0x0000000000411050 : cmp word ptr [rdi + 0x36], 0 ; je 0x411068 ; ret
0x0000000000409972 : cmp word ptr [rdi + 8], 0 ; js 0x409988 ; ret
0x000000000040b55d : cmp word ptr [rdx + 0x16], cx ; jl 0x40b519 ; mov rax, rdi ; ret
0x000000000040b58d : cmp word ptr [rdx + 0x16], r11w ; jg 0x40b553 ; xor eax, eax ; ret
0x00000000004303b2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x76b6d2c8], al ; ret 0x44c7
0x0000000000424511 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x39442444], cl ; ret 0x8c0f
0x00000000004734d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bd281 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rbx]
0x0000000000405e56 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004b54c4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sal ah, cl ; call qword ptr [rax]
0x00000000004a98c8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and edx, dword ptr [rbx + rbp*4 - 0x36c5fc7] ; ret
0x00000000004ad178 : cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esp, 0xfc68e0ff ; jmp qword ptr [rbx]
0x00000000004afaf6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdi - 0x1b005801]
0x00000000004afafa : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rsp
0x0000000000407d25 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov eax, 0xffffffff ; ret
0x00000000004ad338 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; std ; call qword ptr [rcx]
0x0000000000419c7c : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000445025 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfffb
0x00000000004b5c10 : cwde ; add byte ptr [r8], r8b ; nop ; mov ch, dh ; call rax
0x00000000004184a3 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc7f
0x000000000044e56c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x74000478], al ; retf 0xb70f
0x0000000000455ab4 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x13eb
0x000000000044d85b : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x5b1474d2], al ; ret
0x0000000000445c54 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b7e50 : cwde ; add dword ptr [r8], r8d ; adc byte ptr [rbx - 5], bl ; call qword ptr [rax]
0x00000000004c916f : cwde ; add dword ptr [rcx + 0xe], eax ; nop ; add dword ptr [rbx], eax ; ret 0xa01
0x000000000049ad41 : cwde ; add rax, rcx ; jmp rax
0x00000000004c9cf8 : cwde ; cli ; call rsp
0x00000000004b5d0d : cwde ; cmc ; jmp qword ptr [rax]
0x00000000004b62b0 : cwde ; jbe 0x4b62ba ; add byte ptr [rax], ah ; or al, 0xf6 ; call rax
0x00000000004bbe98 : cwde ; jbe 0x4bbe93 ; call qword ptr [rax]
0x00000000004199d2 : cwde ; je 0x4199e5 ; xor eax, eax ; ret
0x00000000004199d1 : cwde ; je 0x4199e6 ; xor eax, eax ; ret
0x000000000041fa1d : cwde ; mov dword ptr [rdx + 8], 1 ; pop rbx ; ret
0x0000000000410678 : cwde ; mov qword ptr [rdx], rax ; mov eax, 2 ; ret
0x00000000004106a5 : cwde ; mov qword ptr [rdx], rax ; mov eax, 3 ; ret
0x00000000004106da : cwde ; mov qword ptr [rdx], rax ; mov eax, 4 ; ret
0x000000000040514e : cwde ; mov rdi, rax ; call 0x401b86
0x000000000040b2ff : cwde ; movzx eax, byte ptr [rdx + rax] ; ret
0x00000000004b8c88 : cwde ; out dx, al ; hlt ; call qword ptr [rdx]
0x0000000000418a85 : cwde ; pop rbx ; ret
0x0000000000423aa8 : cwde ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000407bd4 : cwde ; ret
0x00000000004b7a08 : cwde ; sbb eax, 0x57b00001 ; stc ; jmp rax
0x00000000004b010e : cwde ; sbb ebx, dword ptr [rax + 0x3332bdbd] ; ret
0x00000000004b7b98 : cwde ; sub al, byte ptr [rcx] ; add byte ptr [rax - 0x37], ah ; stc ; jmp rax
0x00000000004c7e48 : cwde ; xchg eax, esi ; clc ; call rbx
0x0000000000449cf8 : dec byte ptr [rax + 0x63] ; or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000049b2cc : dec byte ptr [rax - 0x75] ; cmp al, 8 ; call 0x407dd7
0x0000000000432ae2 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rdi + rcx + 0x44] ; ret 0x71e8
0x000000000048e3f8 : dec byte ptr [rax - 0x77] ; ret 0x8348
0x0000000000492d9b : dec byte ptr [rax - 0x77] ; ret 0x894c
0x000000000040e181 : dec byte ptr [rcx - 0x73] ; add eax, 0x1c8d4801 ; ret 0x1aeb
0x000000000043b6a1 : dec dword ptr [rax + 0x39] ; ret
0x00000000004b772f : dec dword ptr [rax + 0x60000102] ; lahf ; clc ; call rax
0x00000000004b84a7 : dec dword ptr [rax + 0x60000183] ; xor bh, bh ; call rax
0x0000000000422abf : dec dword ptr [rax + 0x63] ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000411822 : dec dword ptr [rax + 0x63] ; ret
0x000000000040f970 : dec dword ptr [rax + 0x63] ; ret 0x8b48
0x000000000044bb42 : dec dword ptr [rax + 0x63] ; ret 0xf48
0x00000000004a5a69 : dec dword ptr [rax + 0x63] ; xor byte ptr [r11 + r9*4 + 0x6c], r9b ; retf
0x0000000000485ae6 : dec dword ptr [rax + 0xf] ; ret 0x894c
0x000000000044576b : dec dword ptr [rax + 1] ; imul ebx, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000408566 : dec dword ptr [rax + 1] ; xlatb ; jmp 0x40853c
0x000000000040d360 : dec dword ptr [rax - 0x39] ; ret
0x0000000000432ad3 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004b7867 : dec dword ptr [rax - 0x3ffffef1] ; cld ; clc ; jmp qword ptr [rax]
0x00000000004b5477 : dec dword ptr [rax - 0x6a] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x00000000004913f2 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x0000000000415814 : dec dword ptr [rax - 0x73] ; je 0x415844 ; or al, 0x83 ; retf 0x4cff
0x0000000000407a0e : dec dword ptr [rax - 0x75] ; add al, 0xf8 ; ret
0x000000000048e94c : dec dword ptr [rax - 0x75] ; and al, 0x38 ; jmp 0x48ab89
0x00000000004109f9 : dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x4109cb
0x000000000047f65b : dec dword ptr [rax - 0x75] ; je 0x47f68c ; xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047f833 : dec dword ptr [rax - 0x75] ; je 0x47f864 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000042df55 : dec dword ptr [rax - 0x75] ; jl 0x42df86 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000415dfd : dec dword ptr [rax - 0x75] ; jnp 0x415e41 ; call 0x412017
0x0000000000415df4 : dec dword ptr [rax - 0x75] ; jnp 0x415e48 ; call 0x412017
0x00000000004430e4 : dec dword ptr [rax - 0x75] ; jnp 0x4430fa ; xor esi, esi ; call 0x40f379
0x0000000000436768 : dec dword ptr [rax - 0x77] ; add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000436589 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044952c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x00000000004847b9 : dec dword ptr [rax - 0x77] ; je 0x4847eb ; adc byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000434398 : dec dword ptr [rax - 0x77] ; loop 0x434330 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000414590 : dec dword ptr [rax - 0x77] ; out 0x89, al ; ret 0x8948
0x0000000000402089 : dec dword ptr [rax - 0x77] ; ret
0x000000000047fa9b : dec dword ptr [rax - 0x77] ; ret 0x13e9
0x0000000000449906 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000046ec2d : dec dword ptr [rax - 0x77] ; ret 0x4466
0x000000000041d6c3 : dec dword ptr [rax - 0x77] ; ret 0x48e9
0x000000000042514d : dec dword ptr [rax - 0x77] ; ret 0x7b8
0x000000000047fb30 : dec dword ptr [rax - 0x77] ; ret 0x7ee9
0x0000000000447df6 : dec dword ptr [rax - 0x77] ; ret 0x80eb
0x000000000041d610 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000041da2f : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000049060e : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000405156 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004905fa : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000048fa69 : dec dword ptr [rax - 0x77] ; ret 0xa8eb
0x00000000004342d4 : dec dword ptr [rax - 0x77] ; ret 0xab8
0x000000000043c601 : dec dword ptr [rax - 0x77] ; ret 0xbe5b
0x000000000044977a : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000040ef14 : dec dword ptr [rax - 0x77] ; ret 0xc689
0x00000000004615c4 : dec dword ptr [rax - 0x77] ; ret 0xce83
0x000000000047edce : dec dword ptr [rax - 0x77] ; ret 0xce89
0x000000000045d1fb : dec dword ptr [rax - 0x77] ; ret 0xffbe
0x00000000004341f8 : dec dword ptr [rax - 0x77] ; retf
0x0000000000475106 : dec dword ptr [rax - 0x77] ; retf 0x8b48
0x000000000047c08f : dec dword ptr [rax - 0x7d] ; jl 0x47c0c1 ; pop rax ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x000000000047c2c1 : dec dword ptr [rax - 0x7d] ; jl 0x47c2f3 ; pop rax ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x0000000000411934 : dec dword ptr [rax - 0x7d] ; ret
0x00000000004274a9 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000459a29 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000004473d6 : dec dword ptr [rax - 0x7d] ; ret 0x8001
0x00000000004674fb : dec dword ptr [rax - 0x7d] ; retf 0x83ff
0x00000000004676d7 : dec dword ptr [rax - 0x7d] ; retf 0xe9ff
0x00000000004388dd : dec dword ptr [rax - 0x7f] ; ret 0x358
0x000000000049743f : dec dword ptr [rax - 0x7f] ; retf 0x3ff
0x00000000004acf53 : dec dword ptr [rax - 5] ; call rbx
0x00000000004ac17b : dec dword ptr [rax - 7] ; cmc ; call rax
0x0000000000402086 : dec dword ptr [rax - 9] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b5ad7 : dec dword ptr [rax] ; add byte ptr [r8], al ; xor byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x00000000004b5927 : dec dword ptr [rax] ; add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004ad3cb : dec dword ptr [rax] ; clc ; std ; call rbx
0x00000000004b60e7 : dec dword ptr [rax] ; imul eax, dword ptr [rax], 0 ; adc dl, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b83e7 : dec dword ptr [rax] ; jge 0x4b83f2 ; add byte ptr [rax], dh ; retf 0xfffe
0x00000000004b5d07 : dec dword ptr [rax] ; push rsp ; add byte ptr [rax], al ; nop ; cwde ; cmc ; jmp qword ptr [rax]
0x000000000042f134 : dec dword ptr [rbp + rcx*4 + 0x3d] ; ret
0x00000000004463fc : dec dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000046251f : dec dword ptr [rbp - 0x49f000b0] ; retf 0x5388
0x0000000000460aeb : dec dword ptr [rbp - 0x49f000b0] ; retf 0x8841
0x000000000048254a : dec dword ptr [rbp - 0x49f000b0] ; retf 0xd284
0x000000000041a09d : dec dword ptr [rbp - 0x75] ; add byte ptr [rax + 0x63], cl ; retf 0xd289
0x0000000000428f56 : dec dword ptr [rbp - 0x75] ; push rsi ; and byte ptr [rcx - 0x77], cl ; ret
0x0000000000449777 : dec dword ptr [rbp - 0x76b700be] ; ret 0xc148
0x00000000004ad037 : dec dword ptr [rbx + 0x2b] ; cld ; call qword ptr [rip - 0x2c0003d5]
0x0000000000407942 : dec dword ptr [rbx + 0x458bf455] ; loopne 0x407953 ; ret 0x458b
0x0000000000495583 : dec dword ptr [rbx + 0x8495] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004acf4f : dec dword ptr [rbx + rbx*2 + 0x604cfffb] ; sti ; call rbx
0x000000000043957e : dec dword ptr [rbx + rcx*4 + 0x4a] ; and byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000048e55c : dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48afad
0x000000000048ed2e : dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b024
0x000000000048e5f8 : dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b031
0x000000000048ee1c : dec dword ptr [rbx + rcx*4 + 0x5c] ; and al, 0x30 ; jmp 0x48b0a6
0x00000000004839b3 : dec dword ptr [rbx - 0x76dbdbac] ; ret
0x000000000042995a : dec dword ptr [rbx - 0x76f7dbb4] ; retf
0x00000000004898e7 : dec dword ptr [rbx - 0x7cdbdb8c] ; ret
0x000000000041ad49 : dec dword ptr [rcx + 0x39] ; ret 0x2273
0x0000000000449b17 : dec dword ptr [rcx + 0x39] ; ret 0xd375
0x000000000042b8db : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000042b8a2 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000045428c : dec dword ptr [rcx + rcx*4 - 0x1e] ; call 0x450d06
0x000000000045a14a : dec dword ptr [rcx + rcx*4 - 0x29] ; call 0x4163b6
0x0000000000403b03 : dec dword ptr [rcx - 0x1876b33a] ; call 0x4205e8
0x0000000000461cd8 : dec dword ptr [rcx - 0x75] ; je 0x461d09 ; xor byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000413e63 : dec dword ptr [rcx - 0x77] ; ret 0x8948
0x000000000047c302 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000049130a : dec dword ptr [rcx - 0x77] ; ret 0xc031
0x000000000047c0d0 : dec dword ptr [rcx - 0x77] ; ret 0xc748
0x00000000004a65e6 : dec dword ptr [rcx - 0x7d] ; jge 0x4a664b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c17b : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004955d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000004ad50f : dec dword ptr [rcx] ; out dx, eax ; std ; jmp qword ptr [rdx]
0x0000000000424961 : dec dword ptr [rcx] ; ret
0x000000000047786e : dec dword ptr [rdi + rcx - 0x51] ; retf 0xc148
0x0000000000474f6f : dec dword ptr [rdi] ; mov bh, 0x45 ; or bl, ch ; ret 0x2e66
0x00000000004213ed : dec dword ptr [rdi] ; mov bh, 0x50 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000044ca3c : dec dword ptr [rdi] ; mov dh, 0xc2 ; ret
0x00000000004560f3 : dec dword ptr [rdi] ; mov esi, 0x63485853 ; retf 0xd089
0x00000000004750c5 : dec dword ptr [rdi] ; mov esi, 0x63485855 ; retf 0xd089
0x000000000041961f : dec dword ptr [rdi] ; mov esi, 0x83480143 ; ret
0x000000000043d69b : dec dword ptr [rdi] ; ret
0x0000000000482d01 : dec dword ptr [rdi] ; ret 0x7e80
0x0000000000437064 : dec dword ptr [rdi] ; ret 0xb9eb
0x00000000004a79aa : dec dword ptr [rdi] ; ret 0xe725
0x000000000046d283 : dec dword ptr [rdi] ; test cl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000042e672 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x0000000000497a6c : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000048294e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000047a2aa : dec dword ptr [rdx] ; or al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b598f : dec eax ; add byte ptr [r8], al ; nop ; cmc ; jmp rax
0x00000000004ad243 : dec eax ; cmp al, 0xfc ; lcall [rsp + rdi] ; cld ; jmp qword ptr [rax]
0x00000000004b5807 : dec eax ; cmp eax, dword ptr [rax] ; add al, dh ; cmp dh, ch ; jmp rax
0x00000000004ae0c5 : dec eax ; dec edx ; call rax
0x00000000004b6247 : dec eax ; jae 0x4b6253 ; add byte ptr [rax], dh ; add dh, dh ; call qword ptr [rax]
0x00000000004b6337 : dec eax ; jns 0x4b6343 ; add al, ah ; adc esi, esi ; jmp rax
0x00000000004b62ff : dec eax ; js 0x4b630b ; add al, al ; adc esi, esi ; jmp rax
0x00000000004b5497 : dec eax ; retf
0x0000000000404b8d : dec ecx ; ret
0x00000000004ae0c7 : dec edx ; call rax
0x00000000004ad4bb : dec edx ; hlt ; std ; jmp rax
0x00000000004ad27f : dec esi ; jp 0x4ad287 ; inc ebp ; jp 0x4ad28b ; call rdi
0x000000000044bb41 : dec qword ptr [r8 + 0x63] ; ret 0xf48
0x0000000000449b16 : dec qword ptr [rcx + 0x39] ; ret 0xd375
0x00000000004848fb : div byte ptr [rax + rsi - 0x75] ; or byte ptr [rcx], dil ; ret
0x000000000041533c : div byte ptr [rbp + 9] ; ret
0x000000000041a4c2 : div byte ptr [rbp + rax - 0x7d] ; add dword ptr cs:[rsi + rax - 0xd], esi ; ret
0x0000000000497fcb : div byte ptr [rsi + rdi*4 + 0x39] ; retf 0xba7d
0x00000000004b61cd : div ch ; call qword ptr [rax]
0x000000000040de25 : div dword ptr [rbp - 0x18] ; and eax, 0x7fffffff ; ret
0x00000000004ac151 : div ebp ; call qword ptr [rax - 0x2f000a09]
0x00000000004ac149 : div ebp ; call qword ptr [rax]
0x00000000004ac155 : div ebp ; call rax
0x00000000004b8e29 : div esp ; jmp rax
0x00000000004b8e28 : div rsp ; jmp rax
0x00000000004ad244 : enter -0x3c4, -1 ; sbb al, 0x3c ; cld ; jmp qword ptr [rax]
0x000000000044ec37 : enter -0x3e77, -0x15 ; retf 0x1f0f
0x000000000041d9c3 : enter -0x3eb8, -8 ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x00000000004176c1 : enter -0x3f7d, 4 ; mov word ptr [r8 + 0x16], ax ; ret
0x00000000004a7639 : enter -0x3fcf, -0x7d ; ret 0x8901
0x000000000046c15f : enter -0x3fcf, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000431fae : enter -0x68f1, -0x40 ; ret
0x0000000000491063 : enter -0x72b4, 0x24 ; retf
0x000000000041453e : enter -0x7780, 7 ; mov eax, 2 ; ret
0x0000000000477193 : enter -0x79f1, 0x7c ; ret
0x0000000000471736 : enter -0x7bf1, -0x33 ; cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x000000000040f949 : enter -0x7cb8, -0x3f ; cmp byte ptr [rcx], bh ; ret 0x4f0f
0x000000000044f3d5 : enter -0x7cbf, -4 ; add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x00000000004c3f08 : enter -0x8dd, -1 ; ret 0
0x0000000000411ecd : enter 0, 0 ; call rax
0x000000000043a453 : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x000000000045065d : enter 0x2375, -0x17 ; retf
0x0000000000418e23 : enter 0x348, 0x45 ; and byte ptr [rax + 0x39], cl ; ret
0x0000000000417c32 : enter 0x348, 7 ; ret
0x00000000004b5990 : enter 0x41, 0 ; nop ; cmc ; jmp rax
0x000000000040d99e : enter 0x4990, 1 ; add ebp, ebx ; ret 0x56e8
0x00000000004602d1 : enter 0x4c08, -0x77 ; out 0x83, eax ; ret
0x0000000000432432 : enter 0x6608, -0x77 ; or byte ptr [r11 - 0xd], bl ; ret
0x00000000004b60d8 : enter 0x6a, 0 ; mov al, 0xe1 ; cmc ; jmp rax
0x00000000004b6300 : enter 0x78, 0 ; rcl byte ptr [rcx], 0xf6 ; jmp rax
0x0000000000407968 : enter 0x8b, 1 ; ret 0x458b
0x00000000004089f4 : enter 0x94c, -0x3e ; mov qword ptr [rsi], rdx ; ret
0x000000000049d702 : enter 0xf66, 0x2e ; retf 0x820f
0x0000000000477b03 : enter 0xff2, 0x5c ; retf 0x71e9
0x000000000046f679 : enter 0xff2, 0x5e ; retf 0xf66
0x000000000049fc35 : enter 0xff3, 0x5a ; shl dword ptr [rsi + 0xf], 1 ; ret 0x2676
0x00000000004ae190 : enter 1, 1 ; retf 0x201
0x0000000000437d73 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042f999 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000407c8b : fadd dword ptr [rax] ; add byte ptr [rsi + rbx*8 - 0x77], dh ; ret 0xe283
0x000000000041910b : fadd dword ptr [rbp - 0x77] ; retf 0xc083
0x000000000041bff1 : fadd dword ptr [rbx + 0x1480fe2] ; retf 0x8948
0x000000000042153c : fadd dword ptr [rbx + 0x5d5b02e0] ; pop r12 ; ret
0x00000000004b082a : fadd dword ptr [rdx] ; mov dl, 3 ; syscall
0x00000000004b7269 : fadd qword ptr [rax] ; add byte ptr [rax], dh ; retf
0x00000000004add95 : fadd st(0) ; add byte ptr [rbx], al ; hlt ; rol byte ptr [rax], 4 ; ret 0x100
0x000000000043204e : fadd st(3) ; mov eax, 1 ; ret
0x000000000041251e : fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x0000000000495d08 : fbstp tbyte ptr [rcx] ; shr al, 0x90 ; ret 0xfffa
0x0000000000432ad0 : fcom qword ptr [rax - 3] ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004cd8ec : fcom qword ptr [rbx + 1] ; add al, dl ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x00000000004bdbec : fcom qword ptr [rsi] ; add byte ptr [rax], ah ; ret
0x000000000041909c : fcomi st(3) ; ret
0x00000000004c6231 : fcomip st(7) ; jmp qword ptr [rbx]
0x00000000004283ba : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040a773 : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000040ee10 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004138ac : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000402045 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000409b69 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000042e3bd : fcomp st(1) ; retf 0xe9db
0x0000000000432091 : fcomp st(5) ; fdiv st(3) ; ret
0x000000000042e3b7 : fcomp st(5) ; fsubr st(3) ; add bl, ch ; fcomp st(1) ; retf 0xe9db
0x000000000041f1da : fdiv dword ptr [rbp + 0x33] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049765d : fdiv dword ptr [rbp + 0x62] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041c884 : fdiv dword ptr [rbp + 0x67] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041c074 : fdiv dword ptr [rbp + 6] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004beec8 : fdiv st(0) ; cmc ; call qword ptr [rax]
0x0000000000432093 : fdiv st(3) ; ret
0x00000000004b5ffd : fdiv st(5) ; jmp rax
0x00000000004ac274 : fdiv st(7), st(0) ; cmc ; call rsp
0x000000000047e2be : fdivp st(3) ; inc dword ptr [rcx - 0x77] ; ret 0x75e9
0x00000000004be3c9 : fdivr st(5), st(0) ; call qword ptr [rsi]
0x00000000004b605d : fdivrp st(5) ; call rax
0x00000000004ac839 : fdivrp st(7) ; call qword ptr [rax]
0x00000000004ac831 : fdivrp st(7) ; jmp rax
0x00000000004ac835 : fdivrp st(7) ; push rax ; fdivrp st(7) ; call qword ptr [rax]
0x0000000000437032 : fiadd dword ptr [rax + 0x450f0039] ; ret 0x8348
0x000000000043722b : fiadd dword ptr [rax + 0x450f0039] ; ret 0xc5eb
0x00000000004b7219 : fiadd dword ptr [rax] ; add al, al ; ret 0xfff7
0x000000000040ccd5 : fiadd dword ptr [rbp + 0x31] ; ror byte ptr [rcx + rcx*4 - 0x30], cl ; pop rbx ; ret
0x00000000004af3c0 : fiadd dword ptr [rbx] ; sbb byte ptr [rip + 0x5180518], al ; ret 0xc204
0x000000000045697c : fiadd dword ptr [rcx + rcx*4 + 0xc] ; and al, 0xe8 ; retf 0xfc0c
0x00000000004c63cd : fiadd word ptr [rax] ; add byte ptr [rax - 0x17], ah ; idiv edi ; retf 3
0x0000000000421066 : ficomp dword ptr [rbx - 0xd] ; ret
0x000000000046da05 : fidiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040c53a : fild dword ptr [rbp + 0x440f41c0] ; ret
0x0000000000438ec2 : fild dword ptr [rcx + rcx*4 - 0x28] ; ret
0x0000000000408f7c : fild qword ptr [rax + 0x66177501] ; mov dword ptr [rdi + 0x2c], edx ; ret
0x0000000000499605 : fild qword ptr [rcx] ; add rsi, r13 ; call 0x426018
0x0000000000435a79 : fild word ptr [rax] ; add bl, ch ; ret
0x0000000000435509 : fild word ptr [rax] ; add bl, ch ; ret 0x9066
0x000000000046a6a2 : fild word ptr [rbp + 0x31] ; in al, 0x31 ; in eax, dx ; call 0x417118
0x000000000047182d : fild word ptr [rbx + 0xf4801f8] ; retf 0x8b41
0x000000000041082d : fild word ptr [rcx - 0x7d] ; ret
0x0000000000420acd : fimul dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000454961 : fimul dword ptr [rbx - 0x16d7dbb4] ; ret 0xfffe
0x000000000040b365 : fimul dword ptr [rcx - 0x77] ; ret 0x2149
0x000000000040fab2 : fimul dword ptr [rcx - 0x77] ; retf 0x850f
0x000000000044952f : fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000466d6e : fimul word ptr [rax - 0x77] ; ret 0x8b48
0x0000000000423629 : fimul word ptr [rax - 0x7d] ; ret
0x000000000047023a : fimul word ptr [rdi] ; test byte ptr [rdi], dh ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040a764 : fistp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x0000000000454b02 : fistp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000445924 : fistp qword ptr [rbx + rbx*2] ; jne 0x445936 ; ret
0x00000000004a2930 : fisttp dword ptr [rax + 0xf] ; ret
0x000000000041251b : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x00000000004086ef : fisttp dword ptr [rbp + 0x39] ; ret 0x8d48
0x0000000000446d49 : fisttp dword ptr [rdi] ; lahf ; ret 0xd021
0x0000000000481a41 : fisttp dword ptr [rdi] ; ret
0x00000000004a749d : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000041c1bb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x8548
0x000000000041b0a5 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xed85
0x000000000041ec0c : fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000461a19 : fisttp qword ptr [rax - 0x7d] ; ret 0x4508
0x000000000043d136 : fisttp qword ptr [rcx - 0x768bdba4] ; ret
0x000000000042eeb1 : fisttp qword ptr [rdi] ; lahf ; ret 0x8341
0x0000000000409264 : fisttp word ptr [rax - 0x77] ; add ebp, eax ; ret
0x0000000000461f2e : fisttp word ptr [rax - 0x77] ; ret
0x0000000000402bb2 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x000000000046722b : fisttp word ptr [rax - 0x77] ; ret 0x61be
0x0000000000462ab6 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000043b29d : fisttp word ptr [rax - 0x77] ; ret 0x9ae8
0x000000000045121f : fisttp word ptr [rax - 0x77] ; retf
0x0000000000410872 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000494e47 : fisttp word ptr [rbx + rcx*4 + 0x7d] ; or al, ch ; jmp rdi
0x00000000004a7cfb : fisttp word ptr [rcx - 0x17f7dbbc] ; retf
0x000000000047a9ec : fisttp word ptr [rcx - 0x17f7dbbc] ; retf 0xf976
0x000000000049958c : fisttp word ptr [rcx - 0x73] ; je 0x49959d ; add byte ptr [rcx], ch ; ret 0x77e8
0x00000000004995da : fisttp word ptr [rcx - 0x73] ; je 0x4995eb ; add byte ptr [rcx], ch ; ret 0x29e8
0x0000000000432ae5 : fisttp word ptr [rdi + rcx + 0x44] ; ret 0x71e8
0x00000000004ad1ac : fisub dword ptr [rdi] ; cld ; jmp rbx
0x000000000046366c : fld dword ptr [rbp + 0x31] ; rcr byte ptr [rbx + 0x5d], 0x89 ; ret 0x1fbe
0x00000000004298a7 : fld dword ptr [rcx] ; ret
0x000000000047e6a7 : fld1 ; ret
0x0000000000404836 : fldcw word ptr [rax + rax] ; add ebx, esi ; ret
0x000000000044cf47 : fmul dword ptr [rax + 0x39] ; ret
0x000000000048a9a2 : fmul dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000487abb : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000401f27 : fmul dword ptr [rax - 1] ; ret
0x000000000048f0e5 : fmul dword ptr [rcx + 0x39] ; ret
0x000000000041afea : fmul dword ptr [rcx + 0x39] ; retf 0x8941
0x00000000004a348e : fmul dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xc283
0x000000000045454b : fmul dword ptr [rdi] ; xchg dword ptr [rsi + 0x29000001], ebx ; ret
0x0000000000456613 : fmul qword ptr [r8 + 0x63] ; retf
0x0000000000456614 : fmul qword ptr [rax + 0x63] ; retf
0x000000000045b79b : fmul qword ptr [rax - 0x77] ; ret
0x00000000004a876c : fmul qword ptr [rax - 0x7d] ; ret
0x00000000004207b2 : fnsave dword ptr [rdi - 0x1c] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004038df : fnsave dword ptr [rsi - 0x3fceffff] ; pop rbx ; ret
0x0000000000418ace : fnstenv [rbp - 0x21] ; xor eax, eax ; pop rbx ; ret
0x000000000040982e : fpatan ; ret
0x00000000004b6005 : fprem1 ; call qword ptr [rax]
0x000000000044a98e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000416876 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000432090 : fstp st(0) ; fstp st(0) ; ret
0x0000000000432092 : fstp st(0) ; ret
0x0000000000432079 : fstp st(0) ; seta al ; ret
0x00000000004b7b18 : fsub dword ptr [rip - 0x60cfffff] ; stc ; jmp qword ptr [rax]
0x00000000004beaec : fsub qword ptr [rbp] ; add byte ptr [rax], al ; in al, dx ; cmc ; jmp rsi
0x00000000004bb648 : fsubr dword ptr [rax - 0xb] ; jmp rsp
0x0000000000434908 : fsubr dword ptr [rcx] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004b6170 : fsubr dword ptr [rsi] ; add byte ptr [rax], al ; out dx, al ; cmc ; jmp qword ptr [rax]
0x00000000004c2fec : fsubr qword ptr [rdx - 0x13f00000] ; idiv bh ; ret 0
0x0000000000440415 : fsubr st(1) ; ret 0xfffd
0x000000000042e3b9 : fsubr st(3) ; add bl, ch ; fcomp st(1) ; retf 0xe9db
0x00000000004a3958 : fucomi st(0) ; ret 0xfed6
0x000000000041af2d : fucomi st(3) ; mov dl, 0xe8 ; retf
0x000000000048529a : fucomip st(0) ; jo 0x485322 ; clc ; inc dword ptr [rcx + 1] ; ret 0x8b48
0x000000000045ec1d : fucomip st(0) ; lodsd eax, dword ptr [rsi] ; retf
0x000000000045ebdc : fucomip st(0) ; out dx, al ; retf
0x00000000004760d0 : fucomip st(0) ; pop rdx ; ret 0xfffb
0x0000000000464817 : fucomip st(0) ; ret
0x00000000004a84b8 : fucomip st(0) ; ret 0xf8af
0x000000000047e708 : fucomip st(0) ; ret 0xfad0
0x000000000043fcd8 : fucomip st(0) ; ret 0xfe1c
0x0000000000401fff : fucomip st(0) ; retf
0x000000000043b6f0 : fucomip st(0) ; retf 0xfe2c
0x0000000000443500 : fucomip st(0) ; retf 0xfe82
0x000000000048526c : fucomip st(0) ; sahf ; jl 0x485271 ; inc dword ptr [rcx + 1] ; ret 0x8b49
0x000000000047615f : fucomip st(0) ; sbb ebx, dword ptr [rsi + 0x1ce9fffa] ; retf 0xffff
0x000000000047f6ae : fucomip st(0) ; sub al, 0x24 ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000491305 : fucomip st(0) ; xchg eax, ebp ; sahf ; stc ; dec dword ptr [rcx - 0x77] ; ret 0xc031
0x0000000000432077 : fucomip st(1) ; fstp st(0) ; seta al ; ret
0x00000000004c798d : hlt ; add byte ptr [rax], al ; add byte ptr [rdi - 8], dh ; call qword ptr [rdx]
0x00000000004cc904 : hlt ; add dword ptr [r8], eax ; sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004bab04 : hlt ; and eax, 0x4d180000 ; cmc ; call rcx
0x00000000004b54c6 : hlt ; call qword ptr [rax]
0x00000000004b87fa : hlt ; call qword ptr [rbx]
0x00000000004b8c72 : hlt ; call qword ptr [rdx]
0x00000000004b863a : hlt ; call qword ptr [rsi]
0x00000000004b556e : hlt ; call rax
0x00000000004b7d95 : hlt ; cli ; jmp qword ptr [rax]
0x00000000004b5476 : hlt ; dec dword ptr [rax - 0x6a] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x00000000004b5496 : hlt ; dec eax ; retf
0x00000000004b553d : hlt ; hlt ; call qword ptr [rax]
0x00000000004b8d32 : hlt ; jmp qword ptr [rbx]
0x00000000004b875a : hlt ; jmp qword ptr [rcx]
0x00000000004b8b7a : hlt ; jmp qword ptr [rdx]
0x00000000004b8e2a : hlt ; jmp rax
0x00000000004b88ba : hlt ; jmp rcx
0x00000000004bf704 : hlt ; jno 0x4bf70e ; add byte ptr [rax], cl ; add esi, esi ; call qword ptr [rdi]
0x00000000004b0236 : hlt ; lahf ; ret 0xc245
0x00000000004c3f04 : hlt ; mov ecx, 0x23c80000 ; idiv edi ; ret 0
0x000000000041a594 : hlt ; or byte ptr [rax], al ; ret
0x00000000004a98d9 : hlt ; out dx, eax ; call rcx
0x00000000004b5566 : hlt ; push qword ptr [rax + 0x7f000031] ; push rsp ; call rax
0x00000000004156d8 : hlt ; ret
0x00000000004c4804 : hlt ; ret 0
0x00000000004c5104 : hlt ; retf
0x00000000004add99 : hlt ; rol byte ptr [rax], 4 ; ret 0x100
0x00000000004ad4bd : hlt ; std ; jmp rax
0x00000000004cb104 : hlt ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x4e], bl ; sti ; call rdi
0x00000000004ad3a8 : idiv al ; std ; call rdi
0x00000000004b6636 : idiv bh ; add byte ptr [rax + rax - 0x9a17000], cl ; jmp qword ptr [rax]
0x00000000004b62ae : idiv bh ; cwde ; jbe 0x4b62bc ; add byte ptr [rax], ah ; or al, 0xf6 ; call rax
0x00000000004b62fe : idiv bh ; enter 0x78, 0 ; rcl byte ptr [rcx], 0xf6 ; jmp rax
0x00000000004ac272 : idiv bh ; fdiv st(7), st(0) ; cmc ; call rsp
0x00000000004ac23a : idiv bh ; in al, dx ; push rbp ; call rsp
0x00000000004b633e : idiv bh ; loopne 0x4b63c4 ; add byte ptr [rax], al ; adc al, 0xf6 ; call qword ptr [rax]
0x00000000004b66ee : idiv bh ; or byte ptr [rdi + 0x6d700000], 0xf6 ; call rax
0x00000000004ac206 : idiv bh ; pop rsp ; push rbp ; call rsp
0x00000000004ac1b6 : idiv bh ; pop rsp ; push rbp ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x00000000004ac2f2 : idiv bh ; pushfq ; push rbp ; call rsp
0x00000000004c05b2 : idiv bh ; ret
0x00000000004c29ba : idiv bh ; ret 0
0x00000000004bf7aa : idiv bh ; ret 1
0x00000000004c23ba : idiv bh ; retf
0x00000000004c19ba : idiv bh ; retf 0
0x00000000004b646e : idiv bh ; rol byte ptr [rax + 0x31400000], 0xf6 ; call qword ptr [rax]
0x00000000004b6526 : idiv bh ; rol byte ptr [rax + rax - 0x9bc8000], 1 ; call qword ptr [rax]
0x00000000004b69a6 : idiv bh ; shl byte ptr [rdx - 0x5a100000], 0xf6 ; jmp rax
0x00000000004b64b6 : idiv bh ; test al, 0x82 ; add byte ptr [rax], al ; push rax ; cmp dh, dh ; call rax
0x0000000000415044 : idiv byte ptr [rax + 0x29] ; mov rdi, r12 ; call rcx
0x00000000004b7bd5 : idiv cl ; jmp qword ptr [rax]
0x00000000004b6d3e : idiv edi ; cmp byte ptr [rax + 0x8600000], 0xf7 ; call rax
0x0000000000443f63 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000489d62 : idiv edi ; jmp 0x486782
0x00000000004b6e3e : idiv edi ; mov al, 0xc0 ; add byte ptr [rax], al ; xor byte ptr [rax - 9], al ; call rax
0x00000000004b6f66 : idiv edi ; mov al, 0xc6 ; add byte ptr [rax], al ; rcl byte ptr [rsi - 9], 1 ; jmp rax
0x00000000004ac66a : idiv edi ; mov byte ptr [rbp - 9], al ; jmp rax
0x000000000049c90d : idiv edi ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b6fce : idiv edi ; nop ; leave ; add byte ptr [rax], al ; nop ; movsxd rsi, edi ; jmp rax
0x00000000004b6ff6 : idiv edi ; nop ; retf 0
0x00000000004ac666 : idiv edi ; pop rax ; idiv r15d ; mov byte ptr [rbp - 9], al ; jmp rax
0x00000000004ac77a : idiv edi ; ret
0x00000000004b6e76 : idiv edi ; ret 0
0x00000000004c5bea : idiv edi ; retf
0x00000000004c63d2 : idiv edi ; retf 3
0x00000000004ac77e : idiv edi ; test al, 0xb3 ; idiv edi ; ret
0x00000000004a7703 : idiv edi ; test eax, eax ; je 0x4a76d2 ; pop rbx ; ret
0x00000000004ac82a : idiv edi ; xor byte ptr [rdi + rsi*8 - 0x8214f01], dh ; jmp rax
0x00000000004b6e9d : idiv r15 ; ret
0x00000000004ac669 : idiv r15d ; mov byte ptr [rbp - 9], al ; jmp rax
0x000000000040257f : imul al ; retf
0x0000000000420dbb : imul byte ptr [r10] ; add byte ptr [rbx + 0x1142454], cl ; ret 0xc031
0x0000000000444230 : imul byte ptr [rcx] ; ret 0x8d49
0x0000000000420dbc : imul byte ptr [rdx] ; add byte ptr [rbx + 0x1142454], cl ; ret 0xc031
0x0000000000420dd6 : imul byte ptr es:[rdx] ; add byte ptr [rbx + 0x1142454], cl ; ret 0xc031
0x0000000000445023 : imul eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfffb
0x00000000004156d6 : imul eax ; hlt ; ret
0x0000000000438af3 : imul eax ; push rdi ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004408d7 : imul eax ; ret
0x00000000004631d8 : imul eax ; ret 0xfc9a
0x000000000045d108 : imul eax ; ret 0xfce6
0x0000000000444428 : imul eax ; ret 0xfffe
0x000000000047b0ff : imul eax ; retf
0x0000000000445b70 : imul eax ; retf 0xfffd
0x00000000004018b1 : imul eax, dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x00000000004b60e9 : imul eax, dword ptr [rax], 0 ; adc dl, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b6109 : imul eax, dword ptr [rax], 0 ; and ah, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b6101 : imul eax, dword ptr [rax], 0 ; nop ; jrcxz 0x4b6102 ; jmp rax
0x00000000004b6091 : imul eax, dword ptr [rax], 0xf5e04000 ; call rax
0x00000000004b60a1 : imul eax, dword ptr [rax], 0xf5e09000 ; call qword ptr [rax]
0x00000000004beedd : imul eax, dword ptr [rax], 0xf5f0d000 ; call qword ptr [rax]
0x00000000004beec5 : imul eax, dword ptr [rax], 0xf5f0d800 ; call qword ptr [rax]
0x00000000004beead : imul eax, dword ptr [rax], 0xf5f0e000 ; call qword ptr [rax]
0x00000000004b81c1 : imul eax, dword ptr [rcx], 0xfe00e000 ; jmp rax
0x000000000041b6b3 : imul eax, dword ptr [rdi + 0xc] ; lea eax, [rax + rax*2] ; ret
0x000000000041b68f : imul eax, dword ptr [rdi + 0xc] ; ret
0x000000000043669d : imul eax, dword ptr [rdi] ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000415338 : imul ebp, dword ptr [rcx + rax], 0x975f685 ; ret
0x000000000044576e : imul ebx, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004260ca : imul ecx, dword ptr [rax + rcx*2], -0x77 ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000420451 : imul ecx, dword ptr [rax - 0x7d], 0x5d5b08c4 ; ret
0x0000000000415f69 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000486064 : imul ecx, dword ptr [rbp + rcx*4 + 0x44], 0x89485024 ; ret 0x8941
0x00000000004bdbd1 : imul ecx, dword ptr [rsi], 0x6e028310 ; ret
0x00000000004bc149 : imul ecx, dword ptr [rsi], 0x75028310 ; ret
0x0000000000416175 : imul edi, dword ptr [rcx + rax*2], 0xf ; retf 0x8944
0x000000000042a4ea : imul edi, edi, -1 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000042a6cc : imul edi, edi, 0x48c031ff ; add esp, 8 ; ret
0x00000000004ad179 : imul edi, esp, 0xfc68e0ff ; jmp qword ptr [rbx]
0x00000000004ac709 : imul esi, edi, 0xf76860ff ; jmp rax
0x000000000041940a : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000415060 : imul esp, dword ptr [rcx + rsi], -0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046bbd8 : imul esp, dword ptr [rsi], 0 ; test rax, rax ; je 0x46bbea ; call rax
0x000000000046bc21 : imul esp, dword ptr [rsi], 0 ; test rax, rax ; je 0x46bc33 ; call rax
0x00000000004c69f5 : in al, 0 ; add byte ptr [rax], bl ; add al, 0xf8 ; call qword ptr [rdx]
0x00000000004c9cf4 : in al, 0x17 ; add dword ptr [rax], eax ; cwde ; cli ; call rsp
0x000000000046a6a5 : in al, 0x31 ; in eax, dx ; call 0x417115
0x000000000040a60b : in al, 0x44 ; mov eax, ecx ; pop rbx ; ret
0x000000000046c0e2 : in al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040514c : in al, 0x48 ; cwde ; mov rdi, rax ; call 0x401b88
0x000000000040514b : in al, 0x48 ; cwde ; mov rdi, rax ; call 0x401b89
0x0000000000419ab0 : in al, 0x49 ; mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x000000000041c65b : in al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004207b4 : in al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004be4f4 : in al, 0x5f ; add byte ptr [rax], al ; test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x000000000041eb59 : in al, 0x75 ; mov ah, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000404e92 : in al, 0x83 ; jge 0x404e83 ; push qword ptr [rbp + 0x10] ; call 0x401929
0x000000000041e0d9 : in al, 0x83 ; ret
0x0000000000410a5b : in al, 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000415bc8 : in al, 0xcb ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x415bdc ; call rax
0x00000000004211f9 : in al, 0xe3 ; or edx, eax ; mov word ptr [rdi + 8], dx ; ret
0x00000000004c69f4 : in al, 0xe4 ; add byte ptr [rax], al ; sbb byte ptr [rax + rdi*8], al ; call qword ptr [rdx]
0x00000000004b8898 : in al, 0xe9 ; hlt ; call qword ptr [rbx]
0x000000000049bff8 : in al, 0xe9 ; ret
0x0000000000429679 : in al, 0xef ; mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x000000000042e498 : in al, 0xf ; lahf ; ret 0x448d
0x0000000000401fd7 : in al, 0xf ; xchg eax, ebp ; ret 0xbd41
0x00000000004a04d5 : in al, 0xf ; xchg eax, esp ; ret 0x8349
0x0000000000413126 : in al, 0xf ; xchg eax, esp ; ret 0xf221
0x00000000004b610d : in al, 0xf5 ; jmp qword ptr [rax]
0x00000000004258b3 : in al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x7b8
0x0000000000404e95 : in al, 0xff ; jne 0x404eaf ; call 0x401926
0x0000000000405218 : in al, 1 ; ret 0x8b48
0x00000000004b87f4 : in al, 2 ; add byte ptr [rax], al ; shr ecx, 1 ; hlt ; call qword ptr [rbx]
0x00000000004b88f4 : in al, 3 ; add byte ptr [rax], al ; mov ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b89f4 : in al, 4 ; add byte ptr [rax], al ; and ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b8af4 : in al, 5 ; add byte ptr [rax], al ; xor al, 0xeb ; hlt ; call qword ptr [rbx]
0x000000000049cefb : in al, dx ; adc byte ptr [rbx + 0x478b2457], cl ; and byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004c71dd : in al, dx ; add byte ptr [rax], al ; loopne 0x4c721f ; clc ; jmp qword ptr [rbx]
0x00000000004ccbfc : in al, dx ; add dword ptr [rax], r8d ; loopne 0x4ccc0c ; std ; call rdi
0x00000000004beaf1 : in al, dx ; cmc ; jmp rsi
0x000000000040b49d : in al, dx ; cmp rax, rsi ; jne 0x40b478 ; ret
0x00000000004c2ff1 : in al, dx ; idiv bh ; ret 0
0x000000000044371d : in al, dx ; or al, ch ; mov esp, 0x39fffffe ; ret
0x00000000004213b7 : in al, dx ; or al, ch ; ret 0xfffe
0x000000000049c17d : in al, dx ; or byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004203fe : in al, dx ; or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000004377f5 : in al, dx ; or byte ptr [rax - 0x77], cl ; xlatb ; call r8
0x000000000049c3f9 : in al, dx ; or byte ptr [rdi], cl ; mov dh, 0x47 ; or dword ptr [rcx], ebp ; ret 0x6348
0x00000000004ac23c : in al, dx ; push rbp ; call rsp
0x00000000004adda5 : in al, dx ; ret
0x00000000004a5710 : in al, dx ; ret 0xfff5
0x0000000000499420 : in al, dx ; retf
0x0000000000404b50 : in al, dx ; sbb al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004c6a65 : in eax, 0 ; add byte ptr [rax + 5], ch ; clc ; jmp rsp
0x000000000040b3c1 : in eax, 0x31 ; shl byte ptr [rsi + 0x44], 0x39 ; retf 0x197d
0x0000000000466a8a : in eax, 0x3b ; push rbp ; adc byte ptr [rax + rdx - 0x7d], dh ; ret
0x000000000042deaa : in eax, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041019d : in eax, 0xeb ; or al, 0x83 ; ret
0x000000000040d5a3 : in eax, 0xf ; lahf ; ret 0xd184
0x00000000004c2e61 : in eax, 0xf6 ; call qword ptr [rbx]
0x00000000004759d4 : in eax, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad651 : in eax, 0xfd ; jmp qword ptr [rdx]
0x00000000004257fb : in eax, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x7b8
0x000000000044e838 : in eax, dx ; add ah, byte ptr [rsi - 0x3f] ; ret
0x00000000004c72c5 : in eax, dx ; add byte ptr [rax], al ; sub byte ptr [rax + rdi*8], bh ; call rdi
0x000000000040c641 : in eax, dx ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046a6a7 : in eax, dx ; call 0x417113
0x000000000041601f : in eax, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417a0e : in eax, dx ; mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x000000000040de72 : in eax, dx ; test rcx, rcx ; je 0x40dea3 ; mov rdi, rbx ; call rcx
0x000000000040da52 : inc byte ptr [rax - 0x287c3177] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000044a116 : inc byte ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd009
0x0000000000455521 : inc byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040a31b : inc byte ptr [rcx] ; setbe al ; ret
0x00000000004b7d87 : inc dword ptr [rax + 0x13d] ; out dx, eax ; cli ; call rax
0x00000000004b5777 : inc dword ptr [rax + 0x30000039] ; xor ebp, esi ; jmp rax
0x00000000004b6d3f : inc dword ptr [rax + 0x600000b8] ; or bh, dh ; call rax
0x00000000004b7757 : inc dword ptr [rax + 4] ; add dword ptr [rax], eax ; jo 0x4b771a ; clc ; jmp rax
0x00000000004ad7b7 : inc dword ptr [rax - 0x2c] ; std ; jmp qword ptr [rsi]
0x00000000004b81d7 : inc dword ptr [rax - 0x2ffffe96] ; or al, 0xfe ; call rax
0x00000000004b6187 : inc dword ptr [rax - 0x2fffff91] ; out dx, eax ; cmc ; call rax
0x00000000004b76a7 : inc dword ptr [rax - 0x3fffff03] ; jo 0x4b76af ; call rax
0x00000000004b7a27 : inc dword ptr [rax - 0x6ffffee2] ; movsxd rdi, ecx ; call rax
0x00000000004b74c7 : inc dword ptr [rax - 0x6fffff12] ; and edi, eax ; call rax
0x0000000000454e83 : inc dword ptr [rax - 0x79f0fe07] ; ret
0x0000000000407c70 : inc dword ptr [rax] ; add bl, al ; nop dword ptr [rax] ; ret
0x00000000004b5967 : inc dword ptr [rax] ; add byte ptr [r8], al ; mov al, 0x48 ; cmc ; jmp qword ptr [rax]
0x0000000000407c9d : inc dword ptr [rax] ; add byte ptr [rdi], cl ; ret 0x83c3
0x00000000004b7ad7 : inc dword ptr [rax] ; and al, 1 ; add byte ptr [rax - 0x6f], dl ; stc ; jmp qword ptr [rax]
0x000000000041345d : inc dword ptr [rax] ; je 0x41346d ; ret
0x000000000041d545 : inc dword ptr [rax] ; je 0x41d555 ; ret
0x000000000042125f : inc dword ptr [rax] ; je 0x42126d ; pop rbx ; ret
0x00000000004096cb : inc dword ptr [rax] ; js 0x4096c7 ; sub rax, rsi ; ret
0x00000000004312f4 : inc dword ptr [rbp + 0x158d48ed] ; ret 0x7fe
0x0000000000464eff : inc dword ptr [rbp + 0x31] ; rol byte ptr [rcx + rcx*4 - 0x17], 0x89 ; ret 0x8944
0x0000000000464a43 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rcx + rcx*4 - 0xf], 0x89 ; ret 0x8944
0x000000000040a607 : inc dword ptr [rbp + 0x44e475c0] ; mov eax, ecx ; pop rbx ; ret
0x0000000000408bd4 : inc dword ptr [rbp + 0x4ce775c0] ; mov eax, ecx ; ret
0x000000000041b3b2 : inc dword ptr [rbp + 0x5b0975c0] ; ret
0x00000000004954cf : inc dword ptr [rbp + 0x5b0c74c0] ; ret
0x0000000000454b14 : inc dword ptr [rbp + 0x5bbc74c0] ; pop rbp ; pop r12 ; ret
0x000000000044e5d7 : inc dword ptr [rbp + 0x5bbc74c0] ; ret
0x00000000004a7704 : inc dword ptr [rbp + 0x5bc274c0] ; ret
0x0000000000499423 : inc dword ptr [rbp + 0xfc589c0] ; xchg eax, esp ; ret
0x000000000048fcca : inc dword ptr [rbp - 0x427af040] ; ret 0xffff
0x000000000048fcdd : inc dword ptr [rbp - 0x557af040] ; ret 0xffff
0x000000000048d7bb : inc dword ptr [rbp - 0x75] ; xor al, 0x24 ; jmp 0x48a1ff
0x000000000049c3c8 : inc dword ptr [rbp - 0x76668b40] ; ret
0x000000000047419a : inc dword ptr [rbp - 0x77] ; xlatb ; jmp 0x4703e6
0x000000000048373a : inc dword ptr [rbp - 0x7cc68b40] ; ret
0x0000000000410312 : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000004ad7cf : inc dword ptr [rbx + 0x26fffdd1] ; sar ebp, cl ; call qword ptr [rsi]
0x0000000000445921 : inc dword ptr [rbx + 0x5b3cdfe0] ; jne 0x445939 ; ret
0x000000000042a26e : inc dword ptr [rbx + 0xc7412f8] ; pop rbx ; ret
0x0000000000434a72 : inc dword ptr [rbx + 0xf4c02e2] ; scasd eax, dword ptr [rdi] ; retf
0x000000000040a68b : inc dword ptr [rbx - 0x7cb7fe3b] ; ret
0x000000000040c537 : inc dword ptr [rcx + 0x29] ; fild dword ptr [rbp + 0x440f41c0] ; ret
0x000000000042eea2 : inc dword ptr [rcx + 0x29] ; ret
0x000000000040c3d9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add cl, byte ptr [rcx - 0x77] ; ret
0x000000000040c1c8 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000486d3b : inc dword ptr [rcx + 0xf] ; mov dh, 0x55 ; sub esi, esi ; ret 0x7502
0x000000000048529f : inc dword ptr [rcx + 1] ; ret 0x8b48
0x0000000000485271 : inc dword ptr [rcx + 1] ; ret 0x8b49
0x0000000000421bc9 : inc dword ptr [rcx + 9] ; ret 0x945
0x000000000042dd69 : inc dword ptr [rcx + rax + 0x63] ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413eb7 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042bace : inc dword ptr [rcx - 0x3a] ; add byte ptr [r8], r8b ; jmp 0x42baa8
0x0000000000477204 : inc dword ptr [rcx - 0x42] ; or eax, 0xe9000000 ; ret 0xffd0
0x00000000004792c9 : inc dword ptr [rcx - 0x44] ; add byte ptr fs:[rax], al ; add cl, ch ; retf 0xfffe
0x000000000048126e : inc dword ptr [rcx - 0x75] ; or byte ptr [r8 - 0x7d], r9b ; ret 0x3910
0x0000000000415824 : inc dword ptr [rcx - 0x77] ; lodsd eax, dword ptr [rsi] ; mov eax, 0x89000000 ; ret 0x8b49
0x000000000042ec59 : inc dword ptr [rcx - 0x77] ; ret
0x0000000000485250 : inc dword ptr [rcx - 0x77] ; ret 0x1feb
0x000000000040a888 : inc dword ptr [rcx - 0x77] ; ret 0x41e9
0x0000000000437ea7 : inc dword ptr [rcx - 0x77] ; ret 0x4c8b
0x000000000047e2c0 : inc dword ptr [rcx - 0x77] ; ret 0x75e9
0x0000000000450b30 : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000476091 : inc dword ptr [rcx - 0x77] ; shr ecx, 0x70 ; ret
0x000000000046ddd0 : inc dword ptr [rcx - 0x7d] ; mov dword ptr [rcx], 0x850fc085 ; ret
0x0000000000461f6b : inc dword ptr [rcx - 0x80] ; jg 0x461fc9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000480daa : inc dword ptr [rcx - 0xa] ; adc byte ptr [rcx - 0x77], r8b ; ret 0x8b4c
0x0000000000407954 : inc dword ptr [rcx] ; ret 0x458b
0x000000000045f9ff : inc dword ptr [rdi + rcx + 0x48] ; ret 0x7980
0x000000000042c179 : inc dword ptr [rdi + rcx + 0x48] ; retf 0x7980
0x00000000004ad063 : inc dword ptr [rdx] ; pop rdx ; cld ; call rdi
0x00000000004ad7bf : inc dword ptr [rsi - 0x7300022d] ; sar ch, cl ; jmp qword ptr [rsi]
0x00000000004b646f : inc eax ; add byte ptr [rax], 0 ; xor esi, esi ; call qword ptr [rax]
0x00000000004b7f97 : inc eax ; add qword ptr [rax], r8 ; and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x00000000004b81bf : inc eax ; imul eax, dword ptr [rcx], 0xfe00e000 ; jmp rax
0x00000000004b8097 : inc eax ; pop rbx ; add dword ptr [rax], eax ; adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x00000000004b6ebf : inc eax ; ret
0x00000000004ad283 : inc ebp ; jp 0x4ad287 ; call rdi
0x00000000004ac783 : inc ebx ; mov cl, 0xf7 ; lcall [rax - 0x4c] ; idiv edi ; ret
0x00000000004ac79f : inc ebx ; mov cl, 0xf7 ; ljmp [rax - 0x4c] ; idiv edi ; ret
0x00000000004207f4 : inc edi ; and byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x00000000004ae0c3 : inc esi ; dec eax ; dec edx ; call rax
0x00000000004ae0c1 : inc esp ; inc esi ; dec eax ; dec edx ; call rax
0x00000000004accdb : inc esp ; sar cl, 1 ; call rsp
0x0000000000454e82 : inc qword ptr [rax - 0x79f0fe07] ; ret
0x000000000045ec17 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; lodsd eax, dword ptr [rsi] ; retf
0x00000000004b6121 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; loopne 0x4b6112 ; cmc ; jmp qword ptr [rax]
0x00000000004b8219 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; rcl byte ptr [rcx], 0xfe ; call rax
0x0000000000409d53 : insb byte ptr [rdi], dx ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000497a99 : insb byte ptr [rdi], dx ; and al, 0x24 ; call 0x423d55
0x00000000004bb869 : insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x00000000004b927c : insb byte ptr [rdi], dx ; or eax, 0x4300000 ; cmc ; jmp qword ptr [rbx]
0x0000000000451e2e : insb byte ptr [rdi], dx ; ret
0x0000000000472bb0 : insb byte ptr [rdi], dx ; retf
0x00000000004c4f7c : insb byte ptr [rdi], dx ; retf 0
0x00000000004b7e9d : insb byte ptr [rdi], dx ; sti ; jmp rax
0x00000000004762ef : insd dword ptr [rdi], dx ; mov cl, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0x000000000047c2ff : insd dword ptr [rdi], dx ; out dx, al ; sti ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000043486b : insd dword ptr [rdi], dx ; retf
0x00000000004950bf : insd dword ptr [rdi], dx ; retf 0xfff6
0x0000000000439f0e : insd dword ptr [rdi], dx ; sub al, ch ; retf
0x000000000046c175 : int 0x80
0x00000000004b029e : int 0xcb
0x00000000004b7549 : int1 ; add byte ptr [rax], al ; mov al, 0x2d ; clc ; call qword ptr [rax]
0x00000000004c7685 : int1 ; add byte ptr [rax], al ; pop rax ; clc ; call rcx
0x0000000000454aa8 : int1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000412281 : int1 ; jmp rcx
0x00000000004096a3 : int1 ; lea eax, [rcx + r8 + 4] ; ret
0x000000000041b0be : int1 ; mov rdx, r13 ; call r12
0x0000000000410601 : int1 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000041a0fe : int1 ; pop rbx ; xor eax, eax ; pop rbp ; pop r14 ; ret
0x0000000000404859 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004096ce : int1 ; sub rax, rsi ; ret
0x00000000004b029b : iretd ; adc esi, ecx ; int 0xcb
0x00000000004158a1 : iretd ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x41592d ; call rax
0x0000000000407c6c : ja 0x407c87 ; mov eax, 0xfffd ; ret
0x0000000000409478 : ja 0x409469 ; mov dword ptr [r8], r10d ; mov dword ptr [r8 + 4], r9d ; ret
0x000000000040e2e6 : ja 0x40e31e ; ret
0x000000000040eb57 : ja 0x40eb7a ; cmp byte ptr [rdx], 6 ; je 0x40ebc9 ; xor eax, eax ; ret
0x0000000000411932 : ja 0x411938 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000415f81 : ja 0x415fab ; jae 0x415f94 ; ret
0x00000000004207b3 : ja 0x42079f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a0ec : ja 0x42a0f2 ; call rsi
0x000000000042dfa6 : ja 0x42e029 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042fcda : ja 0x42fcee ; jne 0x42fccf ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004560f1 : ja 0x4560fb ; dec dword ptr [rdi] ; mov esi, 0x63485853 ; retf 0xd089
0x00000000004bc728 : ja 0x4bc736 ; ret
0x00000000004c7991 : ja 0x4c798d ; call qword ptr [rdx]
0x0000000000415f83 : jae 0x415f92 ; ret
0x000000000042011e : jae 0x420137 ; mov eax, 0x12 ; ret
0x0000000000442d30 : jae 0x442d3d ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000493bfa : jae 0x493c03 ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000004b6249 : jae 0x4b6251 ; add byte ptr [rax], dh ; add dh, dh ; call qword ptr [rax]
0x00000000004b831d : jae 0x4b831f ; jmp qword ptr [rax]
0x00000000004c5281 : jae 0x4c527c ; jmp qword ptr [rax]
0x00000000004c52a1 : jae 0x4c529c ; jmp rsp
0x0000000000496435 : jb 0x49643d ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004a54e8 : jb 0x4a553b ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bbbb1 : jb 0x4bbbaa ; call qword ptr [rdx]
0x00000000004bf725 : jb 0x4bf72d ; add byte ptr [rax], cl ; add esi, esi ; jmp qword ptr [rsi]
0x000000000040910a : jbe 0x409115 ; mov dword ptr [rdi + 0x24], ecx ; ret
0x00000000004254bc : jbe 0x4254e5 ; mov rdi, qword ptr [r14 + 0x18] ; call r12
0x000000000046b07a : jbe 0x46b08f ; mov eax, 0x15 ; ret
0x00000000004b5b3d : jbe 0x4b5b36 ; jmp rax
0x00000000004b62b1 : jbe 0x4b62b9 ; add byte ptr [rax], ah ; or al, 0xf6 ; call rax
0x00000000004b673d : jbe 0x4b6737 ; jmp qword ptr [rax]
0x00000000004b8331 : jbe 0x4b833a ; add al, dh ; js 0x4b833b ; jmp rax
0x00000000004b8339 : jbe 0x4b8342 ; add al, dl ; jns 0x4b8343 ; jmp qword ptr [rax]
0x00000000004bbda1 : jbe 0x4bbd9a ; call qword ptr [rax]
0x00000000004bbdb9 : jbe 0x4bbdb2 ; call qword ptr [rax]
0x00000000004bbe19 : jbe 0x4bbe12 ; jmp qword ptr [rbx]
0x00000000004bbe99 : jbe 0x4bbe92 ; call qword ptr [rax]
0x00000000004bbef1 : jbe 0x4bbeea ; call qword ptr [rdx]
0x00000000004bbf11 : jbe 0x4bbf0a ; jmp qword ptr [rax]
0x00000000004bbf51 : jbe 0x4bbf4a ; jmp qword ptr [rax]
0x00000000004047bd : je 0x4047d8 ; pop rbp ; mov edi, 0x6d2200 ; jmp rax
0x000000000040480b : je 0x404820 ; pop rbp ; mov edi, 0x6d2200 ; jmp rax
0x0000000000404858 : je 0x404851 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000407d24 : je 0x407cd4 ; mov eax, 0xffffffff ; ret
0x0000000000408e37 : je 0x408e43 ; ret
0x0000000000408fdf : je 0x408ff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409760 : je 0x409754 ; mov eax, ecx ; ret
0x000000000040975c : je 0x409758 ; cmp ecx, eax ; je 0x409758 ; mov eax, ecx ; ret
0x0000000000409863 : je 0x409879 ; mov rax, qword ptr [rdi + 0xe0] ; ret
0x0000000000409a33 : je 0x409a49 ; movzx eax, word ptr [rdi + 0x8c] ; ret
0x0000000000409a5a : je 0x409a71 ; movzx eax, word ptr [rdi + 0x8c] ; ret
0x0000000000409a73 : je 0x409a85 ; mov eax, dword ptr [rdi + 0x78] ; ret
0x0000000000409ac3 : je 0x409ad5 ; mov rax, qword ptr [rdi] ; ret
0x0000000000409cfa : je 0x409d05 ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000040a285 : je 0x40a2cf ; mov eax, 1 ; ret
0x000000000040d08a : je 0x40d0a0 ; ret
0x000000000040d084 : je 0x40d0a6 ; cmp r8b, 0x60 ; je 0x40d0a6 ; ret
0x000000000040ddde : je 0x40ddc8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040de76 : je 0x40de9f ; mov rdi, rbx ; call rcx
0x000000000040e900 : je 0x40e90c ; xor eax, eax ; ret
0x000000000040e8fb : je 0x40e939 ; cmp eax, 2 ; je 0x40e911 ; xor eax, eax ; ret
0x000000000040eb5c : je 0x40ebc4 ; xor eax, eax ; ret
0x000000000040f60e : je 0x40f61b ; movzx eax, byte ptr [rdi + 1] ; ret
0x000000000040f95d : je 0x40f99e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410eab : je 0x410ed7 ; add byte ptr [rax + 0x63], cl ; retf 0x7c80
0x0000000000410f45 : je 0x410f57 ; mov eax, 1 ; ret
0x0000000000411055 : je 0x411063 ; ret
0x00000000004113a5 : je 0x4113b7 ; mov eax, 1 ; ret
0x000000000041171e : je 0x41172b ; ret
0x000000000041176a : je 0x41178a ; call rdx
0x0000000000411ca9 : je 0x411cbd ; mov edi, 0x64 ; call rax
0x0000000000411eca : je 0x411f07 ; mov edi, 0xc8 ; call rax
0x00000000004123e7 : je 0x4123f5 ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000412677 : je 0x41267d ; call rax
0x000000000041300d : je 0x413028 ; mov byte ptr [rsp + 8], dl ; call rax
0x0000000000413050 : je 0x413056 ; call rax
0x0000000000413313 : je 0x4132f9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000413312 : je 0x4132fa ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041345f : je 0x41346b ; ret
0x00000000004134db : je 0x4134e9 ; mov rdi, qword ptr [rdi + 0x18] ; call rax
0x0000000000413603 : je 0x413617 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000413639 : je 0x413644 ; xor eax, eax ; ret
0x0000000000413739 : je 0x413747 ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000413acb : je 0x413ade ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000413e00 : je 0x413e19 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413fb0 : je 0x413fc5 ; xor eax, eax ; pop rbx ; ret
0x0000000000414339 : je 0x414344 ; xor eax, eax ; ret
0x0000000000414417 : je 0x414422 ; ret
0x000000000041477f : je 0x4147c9 ; mov qword ptr [rcx], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004148b4 : je 0x4148ba ; call rax
0x00000000004148d0 : je 0x4148d6 ; call rax
0x0000000000414c23 : je 0x414c38 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000414f33 : je 0x414f48 ; sub dword ptr [rdi + 0x4c], 1 ; xor eax, eax ; ret
0x0000000000415817 : je 0x415841 ; or al, 0x83 ; retf 0x4cff
0x000000000041587b : je 0x415890 ; mov qword ptr [rsp + 8], rdi ; call rax
0x00000000004158a7 : je 0x415927 ; call rax
0x0000000000415b57 : je 0x415b5d ; call rax
0x0000000000415b74 : je 0x415b89 ; mov qword ptr [rsp + 8], rax ; call rdx
0x0000000000415bcf : je 0x415bd5 ; call rax
0x0000000000415c1a : je 0x415c20 ; call rax
0x0000000000415d9e : je 0x415db9 ; call 0x412014
0x0000000000415fec : je 0x415fc9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004163f2 : je 0x416402 ; call rax
0x0000000000416451 : je 0x41642d ; pop rbx ; ret
0x0000000000416542 : je 0x416553 ; pop rbx ; ret
0x000000000041653e : je 0x416557 ; test eax, eax ; je 0x416557 ; pop rbx ; ret
0x0000000000416554 : je 0x416565 ; xor eax, eax ; pop rbx ; ret
0x00000000004170f8 : je 0x417103 ; ret
0x00000000004172bf : je 0x4172e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418440 : je 0x418467 ; mov edi, 0xc9 ; call rax
0x00000000004185ab : je 0x4185e7 ; mov edi, 0xca ; call rax
0x0000000000418bc2 : je 0x418b7b ; ret
0x0000000000418b66 : je 0x418b7c ; xor eax, eax ; ret
0x0000000000419235 : je 0x4191ca ; sub bl, dh ; ret
0x0000000000419975 : je 0x419988 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004199d3 : je 0x4199e4 ; xor eax, eax ; ret
0x0000000000419a79 : je 0x419ab7 ; mov rax, rbx ; pop rbx ; ret
0x0000000000419ea5 : je 0x419eb2 ; ret
0x0000000000419fd4 : je 0x419fe7 ; mov eax, 7 ; ret
0x000000000041a4c3 : je 0x41a4d2 ; sub dword ptr [rsi], 1 ; je 0x41a4d8 ; ret
0x000000000041a4c8 : je 0x41a4d3 ; ret
0x000000000041b989 : je 0x41b997 ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000041d4ca : je 0x41d4e0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041d547 : je 0x41d553 ; ret
0x000000000041d6db : je 0x41d6e2 ; ret
0x000000000041dbd7 : je 0x41dc07 ; mov edi, 0x64 ; call rax
0x000000000041e32c : je 0x41e349 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041f15c : je 0x41f170 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041f32c : je 0x41f349 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000420346 : je 0x420357 ; mov eax, 1 ; ret
0x0000000000420450 : je 0x4204c4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420554 : je 0x420564 ; xor eax, eax ; ret
0x00000000004205c0 : je 0x4205cc ; xor eax, eax ; ret
0x0000000000420631 : je 0x420653 ; ret
0x0000000000421261 : je 0x42126b ; pop rbx ; ret
0x0000000000421673 : je 0x42168d ; mov rsi, r13 ; mov rdi, rbp ; call rax
0x00000000004217a7 : je 0x4217b9 ; mov rsi, r13 ; mov rdi, rbp ; call rax
0x0000000000421f99 : je 0x421fa4 ; xor eax, eax ; ret
0x0000000000422110 : je 0x42211c ; xor eax, eax ; ret
0x0000000000422309 : je 0x422314 ; xor eax, eax ; ret
0x0000000000423a18 : je 0x423a24 ; xor eax, eax ; ret
0x0000000000423aa7 : je 0x423a49 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000423c71 : je 0x423c56 ; xor eax, eax ; pop rbx ; ret
0x0000000000423d7f : je 0x423d66 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000004247f7 : je 0x424822 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425995 : je 0x4259a8 ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000425a4f : je 0x425a26 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000042900d : je 0x429028 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000042904f : je 0x42906f ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042906f : je 0x429089 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004290b4 : je 0x4290c4 ; xor eax, eax ; ret
0x00000000004290e4 : je 0x4290f8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004292f8 : je 0x429306 ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000042964e : je 0x42965b ; pop rbx ; ret
0x0000000000429a16 : je 0x429a1c ; call rax
0x0000000000429a4a : je 0x429a50 ; call rax
0x000000000042a153 : je 0x42a197 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042a272 : je 0x42a283 ; pop rbx ; ret
0x000000000042b47b : je 0x42b491 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000042b576 : je 0x42b588 ; mov eax, 7 ; pop rbx ; ret
0x000000000042dd34 : je 0x42dd42 ; ret
0x000000000042de71 : je 0x42dec0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042fb60 : je 0x42fb35 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000042fbd0 : je 0x42fbe6 ; mov eax, dword ptr [rbx + 0xc] ; pop rbx ; ret
0x000000000042fc07 : je 0x42fc27 ; mov eax, dword ptr [rdi] ; add eax, dword ptr [rdi + 0xc] ; ret
0x000000000042fc06 : je 0x42fc28 ; mov eax, dword ptr [rdi] ; add eax, dword ptr [rdi + 0xc] ; ret
0x000000000042fc15 : je 0x42fc2b ; ret
0x000000000042fd4d : je 0x42fd6f ; mov rax, qword ptr [rbx + 0x10] ; pop rbx ; ret
0x00000000004316b6 : je 0x4316e0 ; or al, ch ; ret 0xfe61
0x00000000004323a0 : je 0x4323aa ; ret
0x00000000004362fd : je 0x436303 ; call rax
0x0000000000436352 : je 0x43635c ; call rax
0x00000000004378ca : je 0x4378e0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043d13a : je 0x43d0c7 ; ret
0x000000000043daf5 : je 0x43db08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043f363 : je 0x43f376 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044549e : je 0x4454b8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000445834 : je 0x445846 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b33d : je 0x44b351 ; call rax
0x000000000044c67f : je 0x44c404 ; call rax
0x000000000044c625 : je 0x44c62b ; call rax
0x000000000044c8c2 : je 0x44c8d9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044d14c : je 0x44d15e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d20e : je 0x44d214 ; call rax
0x000000000044d224 : je 0x44d22a ; call rax
0x000000000044d46b : je 0x44d471 ; call rax
0x000000000044d496 : je 0x44d49c ; call rax
0x000000000044d861 : je 0x44d87a ; pop rbx ; ret
0x000000000044e5da : je 0x44e59b ; pop rbx ; ret
0x000000000044f336 : je 0x44f312 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452a05 : je 0x452a30 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000454a0c : je 0x454a20 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000454b17 : je 0x454adb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000454b42 : je 0x454b50 ; and byte ptr [rdx + 0x54], 0xdf ; xor eax, eax ; ret
0x000000000045522e : je 0x455234 ; call rax
0x00000000004552b9 : je 0x4552bf ; call rax
0x00000000004561ae : je 0x4561cc ; xor eax, eax ; ret
0x00000000004589c4 : je 0x4589ef ; sub byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3944
0x0000000000458f95 : je 0x458f9b ; call rax
0x0000000000458fb5 : je 0x458fbb ; call rax
0x00000000004590a8 : je 0x4590ae ; call rax
0x000000000045913c : je 0x459142 ; call rax
0x000000000045a58a : je 0x45a593 ; ret
0x0000000000461cdb : je 0x461d06 ; xor byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000469ce4 : je 0x469d0f ; xor byte ptr [rax - 0x77], cl ; ret 0x51e8
0x000000000046a01e : je 0x46a033 ; call rax
0x000000000046a30e : je 0x46a31c ; mov rdi, qword ptr [rbx - 0x10] ; call rax
0x000000000046a353 : je 0x46a363 ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0x000000000046b0ba : je 0x46b0c0 ; call rax
0x000000000046b0da : je 0x46b0e0 ; call rax
0x000000000046bbde : je 0x46bbe4 ; call rax
0x000000000046bc27 : je 0x46bc2d ; call rax
0x000000000046d6e4 : je 0x46d6f4 ; xor eax, eax ; ret
0x000000000046d95c : je 0x46d979 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046dfc9 : je 0x46dfe6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473195 : je 0x4731d6 ; ror byte ptr [rax + 0xf], 1 ; ret 0xba
0x0000000000473194 : je 0x4731d7 ; ror byte ptr [rax + 0xf], 1 ; ret 0xba
0x000000000047ad1c : je 0x47ad22 ; ret
0x000000000047f65e : je 0x47f689 ; xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047f836 : je 0x47f861 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047fea6 : je 0x47fed0 ; and al, ch ; ret 0xfffd
0x00000000004847bc : je 0x4847e8 ; adc byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000484a6b : je 0x484a4f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004898e9 : je 0x489913 ; and al, 0x83 ; ret
0x0000000000489d5e : je 0x489d50 ; jge 0x489cf0 ; idiv edi ; jmp 0x486786
0x00000000004954d2 : je 0x4954e3 ; pop rbx ; ret
0x0000000000495657 : je 0x495685 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x4120c8
0x000000000049641f : je 0x496438 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004965ee : je 0x4965fc ; xor eax, eax ; ret
0x0000000000496a23 : je 0x496a4e ; or byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000049958f : je 0x49959a ; add byte ptr [rcx], ch ; ret 0x77e8
0x00000000004995dd : je 0x4995e8 ; add byte ptr [rcx], ch ; ret 0x29e8
0x000000000049c40f : je 0x49c428 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a10b7 : je 0x4a10c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a43c2 : je 0x4a43ed ; or byte ptr [rax + 0x63], cl ; ret
0x00000000004a5567 : je 0x4a5574 ; xor eax, eax ; ret
0x00000000004a69df : je 0x4a6a0a ; or byte ptr [rax - 0x77], cl ; ret 0x894d
0x00000000004a7010 : je 0x4a6d5a ; xor edi, edi ; call rax
0x00000000004a7707 : je 0x4a76ce ; pop rbx ; ret
0x00000000004a7786 : je 0x4a779a ; mov rdi, qword ptr [rip + 0x228ce9] ; call rax
0x00000000004a77b9 : je 0x4a77bf ; call rax
0x00000000004a77da : je 0x4a77ee ; mov rdi, qword ptr [rip + 0x228c3d] ; call rax
0x00000000004a78e9 : je 0x4a7879 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae064 : je 0x4ae068 ; retf 0xcb00
0x00000000004ae064 : je 0x4ae06a ; retf 0xcb00
0x00000000004b6261 : je 0x4b6269 ; add al, dh ; add al, 0xf6 ; jmp rax
0x00000000004b6735 : je 0x4b672f ; call rax
0x00000000004b8c84 : je 0x4b8c94 ; add byte ptr [rax], al ; cwde ; out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004bda48 : je 0x4bda56 ; ret
0x00000000004c6b84 : je 0x4c6b73 ; add byte ptr [rax], al ; mov byte ptr [rdx], dl ; clc ; call rsi
0x00000000004c7684 : je 0x4c767e ; add byte ptr [rax], al ; pop rax ; clc ; call rcx
0x00000000004cc784 : je 0x4cc7cf ; add dword ptr [rax], eax ; call 0x244cc46a
0x0000000000407c6b : jg 0x407cec ; adc bh, byte ptr [rax + 0xfffd] ; ret
0x0000000000409974 : jg 0x409984 ; add byte ptr [rax + 7], bh ; ret
0x000000000040a815 : jg 0x40a829 ; xchg eax, esi ; ret 0xd184
0x000000000040b592 : jg 0x40b54e ; xor eax, eax ; ret
0x000000000040c611 : jg 0x40c61d ; call rax
0x000000000040de2c : jg 0x40ddf5 ; xor eax, eax ; ret
0x000000000040e877 : jg 0x40e843 ; ret
0x000000000040ef1e : jg 0x40eeeb ; pop rbx ; ret
0x000000000040ef0c : jg 0x40ef6b ; ret
0x000000000040f66c : jg 0x40f683 ; pop rbx ; ret
0x0000000000411052 : jg 0x411090 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004134df : jg 0x4134fb ; call rax
0x000000000041470c : jg 0x414790 ; xor ebx, esi ; ret
0x00000000004163fe : jg 0x416419 ; mov dword ptr [rbx + 0xb8], edx ; pop rbx ; ret
0x00000000004170f5 : jg 0x41710f ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x000000000041715c : jg 0x41713d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417729 : jg 0x4177a6 ; xor dword ptr [rcx - 0x7d], ecx ; ret 0x4108
0x0000000000417956 : jg 0x417964 ; xor eax, eax ; ret
0x0000000000421060 : jg 0x421083 ; test rdi, rdi ; jne 0x42104a ; pop rbx ; ret
0x000000000042ada3 : jg 0x42adbc ; xchg byte ptr [rsi - 0x77000000], ch ; retf 0xe281
0x000000000042bb62 : jg 0x42bb38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042dea9 : jg 0x42de98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042dea8 : jg 0x42de99 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043b0de : jg 0x43b0f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004420b1 : jg 0x4420be ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000461f6e : jg 0x461fc6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a08a : jg 0x46a08f ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046a97d : jg 0x46a957 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a97c : jg 0x46a958 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046da04 : jg 0x46d9e8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004729f5 : jg 0x47297c ; retf 0x6601
0x000000000047836b : jg 0x47427e ; jmp 0x474dd1
0x0000000000477f06 : jg 0x477f69 ; add byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; retf 0xffff
0x000000000047b902 : jg 0x47b95a ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000499dc6 : jg 0x499dcb ; retf
0x00000000004aef98 : jg 0x4aefa3 ; add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x00000000004b556c : jg 0x4b5570 ; hlt ; call rax
0x00000000004b6775 : jg 0x4b676f ; call rax
0x00000000004bc3c9 : jg 0x4bc3c2 ; call rsi
0x00000000004bf260 : jg 0x4bf26e ; ret
0x00000000004c045d : jg 0x4c0465 ; add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rdi]
0x00000000004c045c : jg 0x4c0466 ; add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rdi]
0x00000000004c1519 : jg 0x4c1513 ; jmp qword ptr [rsi]
0x0000000000404e94 : jge 0x404e81 ; push qword ptr [rbp + 0x10] ; call 0x401927
0x0000000000415d99 : jge 0x415dec ; test rdi, rdi ; je 0x415dbe ; call 0x412019
0x000000000041b5bf : jge 0x41b610 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000425ad1 : jge 0x425adb ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436ecc : jge 0x436ea7 ; movsx eax, byte ptr [rdx + 0x14] ; ret
0x0000000000440c5a : jge 0x440c65 ; xor esi, esi ; mov rdx, rax ; call 0x42d709
0x0000000000445831 : jge 0x44585d ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000446d85 : jge 0x446dd6 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000465ec3 : jge 0x465f1b ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000485dab : jge 0x485dd9 ; call 0x412014
0x0000000000489d60 : jge 0x489cee ; idiv edi ; jmp 0x486784
0x000000000048fc38 : jge 0x48fc3e ; call 0x42bf24
0x00000000004a65e9 : jge 0x4a6648 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a98d8 : jge 0x4a98d1 ; out dx, eax ; call rcx
0x00000000004afaf4 : jge 0x4afafd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdi - 0x1b005801]
0x00000000004afaf2 : jge 0x4afafd ; jge 0x4afaff ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rdi - 0x1b005801]
0x00000000004b83e9 : jge 0x4b83f0 ; add byte ptr [rax], dh ; retf 0xfffe
0x000000000045f9fc : jge 0xf8af959 ; ret 0x7980
0x000000000040b561 : jl 0x40b515 ; mov rax, rdi ; ret
0x000000000040e147 : jl 0x40e171 ; or byte ptr [rcx], ch ; ret 0x8941
0x0000000000410e7d : jl 0x410ebb ; jmp qword ptr [rax]
0x0000000000410eb2 : jl 0x410ee7 ; jmp qword ptr [rax]
0x000000000041181d : jl 0x411804 ; add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax + 0x63] ; ret
0x0000000000415886 : jl 0x4158b0 ; or al, ch ; ret 0xffc3
0x0000000000416875 : jl 0x416856 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b8c1 : jl 0x41b890 ; mov dword ptr [rdx], 1 ; ret
0x000000000041ba78 : jl 0x41ba53 ; ret
0x000000000041babe : jl 0x41ba93 ; ret
0x0000000000425eab : jl 0x425ed9 ; jo 0x425eff ; mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000004266c0 : jl 0x4266ec ; str word ptr [rdi] ; xchg eax, esp ; ret 0xc209
0x00000000004287a2 : jl 0x4287ae ; add byte ptr [rax - 0x77], cl ; ret 0xf641
0x000000000042ba75 : jl 0x42ba93 ; sub dword ptr [rax - 0x7d], ecx ; ret 0x4030
0x000000000042df58 : jl 0x42df83 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043f376 : jl 0x43f388 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000440026 : jl 0x440051 ; and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000442386 : jl 0x442393 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004473ac : jl 0x4473c3 ; jmp qword ptr [rsi]
0x0000000000447b9b : jl 0x447bca ; adc al, ch ; cmp eax, 0x89fffb9e ; ret 0xe281
0x000000000044ac99 : jl 0x44acc3 ; or byte ptr [rcx], bh ; retf
0x000000000044b685 : jl 0x44b698 ; retf 0x5389
0x000000000044b691 : jl 0x44b699 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x5389
0x000000000044b684 : jl 0x44b699 ; retf 0x5389
0x000000000044b690 : jl 0x44b69a ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x5389
0x000000000044caba : jl 0x44cad9 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000454372 : jl 0x4543a0 ; and byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000045dd0d : jl 0x45dd3b ; or byte ptr [rcx + rcx*4 - 2], cl ; call 0x419f88
0x000000000045e8e7 : jl 0x45e912 ; cmp byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045e968 : jl 0x45e997 ; cmp byte ptr [rcx - 0x75], al ; call 0x40b429
0x0000000000467cc5 : jl 0x467cf3 ; adc byte ptr [rcx - 0x76bfdb8c], cl ; ret 0x8c89
0x000000000046a018 : jl 0x46a046 ; test rdi, rdi ; je 0x46a039 ; call rax
0x000000000046cc30 : jl 0x46cc39 ; lcall [rsi + 0xf] ; xchg eax, esp ; ret 0x8d4b
0x0000000000473b53 : jl 0x473b7e ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047c092 : jl 0x47c0be ; pop rax ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x000000000047c2c4 : jl 0x47c2f0 ; pop rax ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x000000000047f4e0 : jl 0x47f50b ; sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004839c3 : jl 0x4839f2 ; and al, 0xa ; or al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000048524e : jl 0x48524d ; inc dword ptr [rcx - 0x77] ; ret 0x1feb
0x000000000048526f : jl 0x48526e ; inc dword ptr [rcx + 1] ; ret 0x8b49
0x000000000048529d : jl 0x48529c ; inc dword ptr [rcx + 1] ; ret 0x8b48
0x0000000000485308 : jl 0x485307 ; inc dword ptr [rcx + 1] ; ret 0x8b48
0x00000000004856a2 : jl 0x4856cd ; or byte ptr [rcx - 0x77], al ; ret
0x0000000000489695 : jl 0x48969e ; add byte ptr [rax + 0x63], cl ; retf 0x3c80
0x0000000000491106 : jl 0x4910d8 ; and al, ch ; ret 0xfb5e
0x00000000004979fa : jl 0x497a25 ; push rax ; call 0x4244c5
0x0000000000497a71 : jl 0x497a9c ; and byte ptr [rdi], cl ; pushfq ; ret 0xd308
0x00000000004a19af : jl 0x4a19dd ; sbb byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004afed4 : jl 0x4afe87 ; scasd eax, dword ptr [rdi] ; ret
0x00000000004b563c : jl 0x4b5660 ; cmc ; call qword ptr [rax]
0x00000000004b938c : jl 0x4b93a3 ; add byte ptr [rax], al ; add byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004bcd8c : jl 0x4bcddd ; add byte ptr [rax], al ; loopne 0x4bcd32 ; cmc ; call qword ptr [rbx]
0x00000000004bdc8c : jl 0x4bdcec ; add byte ptr [rax], al ; rol bl, 0xf5 ; jmp rdx
0x00000000004c088c : jl 0x4c0818 ; add byte ptr [rax], al ; xor byte ptr [rsi + rsi*8], bh ; call qword ptr [rsi]
0x00000000004c5e8c : jl 0x4c5e6c ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000004c798c : jl 0x4c7989 ; add byte ptr [rax], al ; add byte ptr [rdi - 8], dh ; call qword ptr [rdx]
0x00000000004c808c : jl 0x4c8090 ; add byte ptr [rax], al ; and dl, al ; clc ; jmp qword ptr [rcx]
0x00000000004cd08c : jl 0x4cd0e0 ; add dword ptr [rax], eax ; xor byte ptr [rsi], 0xfd ; call qword ptr [rax]
0x0000000000408c42 : jle 0x408cc3 ; sub al, 0 ; test edx, edx ; jne 0x408c58 ; ret
0x0000000000414679 : jle 0x4146b5 ; lea eax, [rdi + 1] ; ret
0x000000000041470d : jle 0x414743 ; ret
0x0000000000417c1e : jle 0x417c2d ; add dword ptr [rdi + 0xc], edx ; ret
0x000000000041b3ee : jle 0x41b465 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd029
0x000000000041b42e : jle 0x41b4a5 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd029
0x000000000041b7c6 : jle 0x41b7ae ; xor edx, edx ; xor eax, edx ; pop rbx ; ret
0x00000000004254c0 : jle 0x4254dd ; call r12
0x0000000000447df4 : jle 0x447df9 ; dec dword ptr [rax - 0x77] ; ret 0x80eb
0x00000000004af416 : jle 0x4af41e ; ret
0x00000000004b7a65 : jle 0x4b7a62 ; call rax
0x00000000004b8918 : jle 0x4b8907 ; hlt ; call qword ptr [rbx]
0x0000000000462cf3 : jmp 0x2004ef83
0x0000000000402677 : jmp 0x402645
0x000000000040856a : jmp 0x408538
0x000000000040b405 : jmp 0x40b3cb
0x000000000040dd8b : jmp 0x40dd59
0x000000000040e39e : jmp 0x40e36c
0x00000000004109ff : jmp 0x4109c5
0x0000000000417af3 : jmp 0x417ab9
0x000000000041a73e : jmp 0x41a704
0x0000000000426dd5 : jmp 0x426d9b
0x000000000042bad4 : jmp 0x42baa2
0x000000000042ff18 : jmp 0x42fee6
0x0000000000435a7c : jmp 0x435a42
0x0000000000438e53 : jmp 0x438e21
0x000000000043a2e8 : jmp 0x43a2ae
0x000000000043c422 : jmp 0x43c3e8
0x0000000000444369 : jmp 0x444337
0x00000000004484af : jmp 0x448475
0x0000000000472c59 : jmp 0x46f722
0x0000000000472d64 : jmp 0x46f840
0x000000000047419e : jmp 0x4703e2
0x0000000000475ff9 : jmp 0x4722a9
0x0000000000476165 : jmp 0x472b88
0x000000000047883f : jmp 0x474aac
0x0000000000474c81 : jmp 0x474c47
0x0000000000478371 : jmp 0x474dcb
0x0000000000475005 : jmp 0x474fd3
0x000000000047ad05 : jmp 0x47accb
0x000000000047ba5b : jmp 0x47ba21
0x0000000000486667 : jmp 0x486635
0x0000000000489d64 : jmp 0x486780
0x000000000048d799 : jmp 0x48a1fa
0x000000000048e952 : jmp 0x48ab83
0x000000000048e562 : jmp 0x48afa7
0x000000000048ed34 : jmp 0x48b01e
0x000000000048e5fe : jmp 0x48b02b
0x000000000048ee22 : jmp 0x48b0a0
0x000000000048e713 : jmp 0x48b1f2
0x000000000048f69a : jmp 0x48b8a3
0x00000000004a4736 : jmp 0x4a46fc
0x00000000004a47de : jmp 0x4a47ac
0x0000000000462ddd : jmp 0x5b04f06d
0x0000000000462d62 : jmp 0xffffffff898aeff2
0x0000000000464f05 : jmp 0xffffffff898b1195
0x000000000040c4d3 : jmp 0xffffffffc340cf2a
0x000000000040982c : jmp 0xffffffffc43471aa
0x00000000004b6ea7 : jmp qword ptr [rax - 0x3d]
0x0000000000410e7f : jmp qword ptr [rax]
0x00000000004ad17f : jmp qword ptr [rbx]
0x000000000047bf54 : jmp qword ptr [rcx]
0x00000000004ad337 : jmp qword ptr [rdi + 0x11fffd9c]
0x00000000004afaf7 : jmp qword ptr [rdi - 0x1b005801]
0x00000000004ad177 : jmp qword ptr [rdi - 0x1f000397]
0x00000000004bb41b : jmp qword ptr [rdi]
0x000000000046c846 : jmp qword ptr [rdx]
0x00000000004473ae : jmp qword ptr [rsi]
0x0000000000403229 : jmp rax
0x0000000000433ce5 : jmp rbx
0x00000000004110a0 : jmp rcx
0x0000000000494e4d : jmp rdi
0x0000000000403821 : jmp rdx
0x00000000004ad37f : jmp rsi
0x00000000004ac447 : jmp rsp
0x0000000000402675 : jne 0x402683 ; jmp 0x402647
0x0000000000404e97 : jne 0x404ead ; call 0x401924
0x0000000000405348 : jne 0x404ffd ; nop ; leave ; ret
0x00000000004071d3 : jne 0x4071cd ; mov eax, 1 ; pop rbp ; ret
0x000000000040724d : jne 0x407247 ; mov eax, 1 ; pop rbp ; ret
0x0000000000407260 : jne 0x40725a ; mov eax, 1 ; pop rbp ; ret
0x0000000000407273 : jne 0x40726d ; mov eax, 1 ; pop rbp ; ret
0x0000000000407286 : jne 0x407280 ; mov eax, 1 ; pop rbp ; ret
0x000000000040737a : jne 0x407374 ; mov eax, 1 ; pop rbp ; ret
0x000000000040738d : jne 0x407387 ; mov eax, 1 ; pop rbp ; ret
0x00000000004073a0 : jne 0x40739a ; mov eax, 1 ; pop rbp ; ret
0x00000000004073b3 : jne 0x4073ad ; mov eax, 1 ; pop rbp ; ret
0x00000000004073c6 : jne 0x4073c0 ; mov eax, 1 ; pop rbp ; ret
0x00000000004073d9 : jne 0x4073d3 ; mov eax, 1 ; pop rbp ; ret
0x00000000004073ec : jne 0x4073e6 ; mov eax, 1 ; pop rbp ; ret
0x00000000004073ff : jne 0x4073f9 ; mov eax, 1 ; pop rbp ; ret
0x0000000000407412 : jne 0x40740c ; mov eax, 1 ; pop rbp ; ret
0x0000000000407425 : jne 0x40741f ; mov eax, 1 ; pop rbp ; ret
0x0000000000407438 : jne 0x407432 ; mov eax, 1 ; pop rbp ; ret
0x00000000004074ef : jne 0x4074e9 ; mov eax, 1 ; pop rbp ; ret
0x0000000000407502 : jne 0x4074fc ; mov eax, 1 ; pop rbp ; ret
0x00000000004075e1 : jne 0x4075db ; mov eax, 1 ; pop rbp ; ret
0x0000000000407636 : jne 0x407630 ; mov eax, 1 ; pop rbp ; ret
0x0000000000407649 : jne 0x407643 ; mov eax, 1 ; pop rbp ; ret
0x000000000040765c : jne 0x407656 ; mov eax, 1 ; pop rbp ; ret
0x000000000040766f : jne 0x407669 ; mov eax, 1 ; pop rbp ; ret
0x0000000000407a4f : jne 0x407a43 ; ret
0x0000000000407e34 : jne 0x407e14 ; xor eax, eax ; ret
0x00000000004088b0 : jne 0x408916 ; add rsp, 0x28 ; ret
0x0000000000408bd7 : jne 0x408bc5 ; mov rax, r9 ; ret
0x0000000000408c08 : jne 0x408c12 ; ret
0x0000000000408c48 : jne 0x408c52 ; ret
0x0000000000408d9c : jne 0x408d7b ; ret
0x0000000000408e44 : jne 0x408e3f ; mov qword ptr [rax + 0x10], rdi ; ret
0x0000000000408f08 : jne 0x408f13 ; ret
0x0000000000408f7f : jne 0x408f9e ; mov word ptr [rdi + 0x2c], dx ; ret
0x000000000040906e : jne 0x409097 ; add rsp, 0x58 ; ret
0x0000000000409180 : jne 0x4091ac ; add rsp, 0x28 ; ret
0x0000000000409208 : jne 0x40922d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004092fe : jne 0x4092d9 ; mov rax, rcx ; add rsp, 0x18 ; ret
0x0000000000409361 : jne 0x4093c4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409426 : jne 0x409433 ; add rsp, 0x18 ; ret
0x000000000040982d : jne 0x40980b ; ret
0x0000000000409933 : jne 0x409946 ; add rsp, 0x138 ; ret
0x0000000000409a08 : jne 0x4099fe ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000409d52 : jne 0x409dc7 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040a0e9 : jne 0x409fe7 ; ret
0x000000000040a20b : jne 0x40a24b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040a60a : jne 0x40a5f6 ; mov eax, r9d ; pop rbx ; ret
0x000000000040b4a1 : jne 0x40b474 ; ret
0x000000000040b8c6 : jne 0x40b8c0 ; mov dword ptr [rsi], 0x1b ; ret
0x000000000040b8c5 : jne 0x40b8c1 ; mov dword ptr [rsi], 0x1b ; ret
0x000000000040ba54 : jne 0x40ba43 ; ret
0x000000000040ba53 : jne 0x40ba44 ; ret
0x000000000040bdff : jne 0x40bb90 ; lea eax, [rdx + 1] ; ret
0x000000000040bbfe : jne 0x40bbf8 ; mov dword ptr [rsi], 0x9f ; ret
0x000000000040bc46 : jne 0x40bc3b ; ret
0x000000000040bcc5 : jne 0x40bcb9 ; mov edx, 0x1b ; mov dword ptr [rsi], edx ; ret
0x000000000040bbbf : jne 0x40be0c ; ret
0x000000000040be66 : jne 0x40be48 ; mov dword ptr [rsi], 0xa0 ; ret
0x000000000040c035 : jne 0x40be71 ; lea eax, [rdx + 2] ; ret
0x000000000040bede : jne 0x40bed3 ; ret
0x000000000040ccd4 : jne 0x40ccb9 ; xor r10d, r10d ; mov rax, r10 ; pop rbx ; ret
0x000000000040cd0c : jne 0x40cd2b ; mov rax, qword ptr [rdx + 0xd0] ; ret
0x000000000040cd58 : jne 0x40cd62 ; ret
0x000000000040cd98 : jne 0x40cda2 ; ret
0x000000000040cfcc : jne 0x40cfae ; mov qword ptr [rsi], rdx ; sub eax, edi ; ret
0x000000000040cfcb : jne 0x40cfaf ; mov qword ptr [rsi], rdx ; sub eax, edi ; ret
0x000000000040d3c9 : jne 0x40d3f3 ; add rsp, 0x18 ; ret
0x000000000040d975 : jne 0x40d9ac ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dae8 : jne 0x40db0c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040de26 : jne 0x40de17 ; and eax, 0x7fffffff ; ret
0x000000000040df9f : jne 0x40e078 ; xor eax, eax ; ret
0x000000000040e223 : jne 0x40e24b ; add rsp, 0x18 ; ret
0x000000000040e78b : jne 0x40e79e ; add rsp, 0x148 ; ret
0x000000000040e9e9 : jne 0x40e9f8 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040ef06 : jne 0x40eef8 ; and eax, 0x7fffffff ; pop rbx ; ret
0x000000000040f23c : jne 0x40f224 ; xor eax, eax ; ret
0x000000000040f81a : jne 0x40f7c4 ; pop rbx ; ret
0x0000000000410406 : jne 0x4103d9 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041085e : jne 0x41088b ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000410d3c : jne 0x410d4f ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000410dce : jne 0x410de1 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000041177c : jne 0x4117af ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000411f7c : jne 0x411fee ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412206 : jne 0x41221b ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000041251f : jne 0x412513 ; pop rbx ; ret
0x00000000004132f0 : jne 0x413309 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000041342d : jne 0x413409 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414312 : jne 0x41432c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004145ac : jne 0x4145bd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004145ff : jne 0x41465c ; add rsp, 0x18 ; ret
0x0000000000414c91 : jne 0x414cf4 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000414d6c : jne 0x414d85 ; add rsp, 0x38 ; ret
0x0000000000415094 : jne 0x4150a2 ; ret
0x00000000004150cb : jne 0x4150d3 ; pop rbx ; ret
0x000000000041533d : jne 0x41534b ; ret
0x0000000000415f05 : jne 0x415f13 ; ret
0x0000000000415f45 : jne 0x415f52 ; ret
0x0000000000415fa4 : jne 0x415fd2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416051 : jne 0x416018 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004170c0 : jne 0x417098 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417373 : jne 0x4173a8 ; movsxd rsi, esi ; xor edi, edi ; call 0x413659
0x0000000000417687 : jne 0x417672 ; ret
0x00000000004178ee : jne 0x41792b ; add rsp, 0x18 ; ret
0x00000000004179e7 : jne 0x4179fc ; add rsp, 0x18 ; ret
0x00000000004186a0 : jne 0x4186bf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418acf : jne 0x418ab5 ; xor eax, eax ; pop rbx ; ret
0x0000000000418c30 : jne 0x418c83 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000418cc2 : jne 0x418cf1 ; add rsp, 0x18 ; ret
0x0000000000418d22 : jne 0x418d51 ; add rsp, 0x18 ; ret
0x0000000000418fa7 : jne 0x418fb3 ; ret
0x000000000041909b : jne 0x41907b ; ret
0x00000000004191e4 : jne 0x4191e1 ; add dword ptr [r8 + 8], 1 ; xor eax, eax ; ret
0x0000000000419d0e : jne 0x419d04 ; xor eax, eax ; ret
0x000000000041a0fd : jne 0x41a0f8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r14 ; ret
0x000000000041a536 : jne 0x41a524 ; xor eax, eax ; ret
0x000000000041a73c : jne 0x41a700 ; jmp 0x41a706
0x000000000041b188 : jne 0x41b192 ; ret
0x000000000041b27e : jne 0x41b278 ; cmp byte ptr [rbx], 0 ; jne 0x41b29c ; pop rbx ; ret
0x000000000041b283 : jne 0x41b297 ; pop rbx ; ret
0x000000000041b30e : jne 0x41b308 ; cmp byte ptr [rbx], 0 ; jne 0x41b32c ; pop rbx ; ret
0x000000000041b313 : jne 0x41b327 ; pop rbx ; ret
0x000000000041b3b5 : jne 0x41b3c3 ; pop rbx ; ret
0x000000000041b5be : jne 0x41b645 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041ba0f : jne 0x41b9ff ; mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x000000000041c075 : jne 0x41c084 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041c283 : jne 0x41c274 ; xor eax, eax ; ret
0x000000000041c885 : jne 0x41c8f6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041dafb : jne 0x41db0c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041e926 : jne 0x41e919 ; mov byte ptr [rdi + 0x10], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041eb5a : jne 0x41eb17 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041efa5 : jne 0x41efb6 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041f1db : jne 0x41f218 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000421065 : jne 0x421045 ; pop rbx ; ret
0x0000000000421a0a : jne 0x421a17 ; add rsp, 0x48 ; ret
0x0000000000421a7a : jne 0x421a87 ; add rsp, 0x48 ; ret
0x0000000000425d89 : jne 0x425d31 ; mov rdi, rax ; call 0x412017
0x000000000042aac9 : jne 0x42aa8a ; pop rbx ; ret
0x000000000042b22b : jne 0x42b23c ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000042b2b7 : jne 0x42b2c6 ; mov rax, rbx ; pop rbx ; ret
0x000000000042bca8 : jne 0x42bc83 ; add rsp, 0x18 ; ret
0x000000000042bf07 : jne 0x42bf18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042d8eb : jne 0x42d900 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042f8bc : jne 0x42f8cb ; add rsp, 0x30 ; pop rbx ; ret
0x000000000042f994 : jne 0x42f9a7 ; add rsp, 0xd8 ; ret
0x000000000042fcdc : jne 0x42fccd ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430f14 : jne 0x430f32 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000431391 : jne 0x4313d6 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004320d3 : jne 0x4320e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043327c : jne 0x43328f ; add rsp, 0xd8 ; ret
0x00000000004333cc : jne 0x4333dd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043341a : jne 0x433427 ; add rsp, 0x28 ; ret
0x000000000043346a : jne 0x433477 ; add rsp, 0x28 ; ret
0x000000000043415a : jne 0x4341dd ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004364a1 : jne 0x43649b ; mov eax, dword ptr [rbx + 0x44] ; and eax, dword ptr [rbx + 0x48] ; pop rbx ; ret
0x0000000000436521 : jne 0x436518 ; mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x0000000000438cd3 : jne 0x438ce4 ; pop rbx ; ret
0x0000000000438f36 : jne 0x438f28 ; mov qword ptr [r11 + 0x68], r9 ; pop rbx ; ret
0x0000000000439d68 : jne 0x439d2a ; add byte ptr [rax], al ; add byte ptr [rdi], 0xf ; ret 0x4389
0x000000000043c41c : jne 0x43c3d7 ; mov rax, qword ptr [rbp + 0x10] ; jmp 0x43c3ee
0x0000000000442042 : jne 0x442055 ; add rsp, 0xd8 ; ret
0x00000000004437f2 : jne 0x443805 ; add rsp, 0xd8 ; ret
0x0000000000445510 : jne 0x445523 ; mov rdi, qword ptr [rbx + 8] ; call 0x412018
0x0000000000445927 : jne 0x445933 ; ret
0x00000000004465d4 : jne 0x446563 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044674c : jne 0x446713 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446d84 : jne 0x446e0b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000447087 : jne 0x4470b8 ; add rsp, 0xe8 ; ret
0x0000000000448dbf : jne 0x448e14 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044ac28 : jne 0x44ac43 ; ret
0x000000000044f255 : jne 0x44f271 ; mov byte ptr [rbx + 0x56], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000454b01 : jne 0x454ae6 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000455a02 : jne 0x455a4a ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000456293 : jne 0x4562cd ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004569b8 : jne 0x4569c7 ; mov eax, 4 ; ret
0x0000000000462072 : jne 0x4620db ; mov rdi, qword ptr [rbx] ; call 0x41e317
0x000000000046c223 : jne 0x46c22a ; ret
0x000000000046da88 : jne 0x46dacb ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000478839 : jne 0x4780d5 ; jmp 0x474ab2
0x000000000047ba55 : jne 0x47b7db ; jmp 0x47ba27
0x00000000004971ed : jne 0x49723f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049765e : jne 0x4976ca ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000499a6b : jne 0x499a7a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000049ffce : jne 0x4a0016 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a6b88 : jne 0x4a6b4e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a6be3 : jne 0x4a6c1d ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004bba9b : jne 0x4bbaa9 ; ret
0x00000000004bbc79 : jne 0x4bbc72 ; call qword ptr [rdx]
0x00000000004c78d9 : jne 0x4c78d5 ; jmp qword ptr [rdx]
0x0000000000401ef7 : jno 0x401ee8 ; or al, 0x83 ; retf 0xe8ff
0x000000000041d69d : jno 0x41d6a6 ; mov rax, rdx ; pop rbx ; ret
0x000000000041d69c : jno 0x41d6a7 ; mov rax, rdx ; pop rbx ; ret
0x000000000041d808 : jno 0x41d82f ; js 0x41d849 ; mov rdi, qword ptr [rcx + 0x40] ; call r8
0x0000000000429a43 : jno 0x4299db ; sub al, byte ptr [rax] ; test rax, rax ; je 0x429a57 ; call rax
0x000000000042e2e2 : jno 0x42e2f0 ; add cl, bl ; ret 0xc9d8
0x00000000004af740 : jno 0x4af74a ; mov edx, 0x15005603 ; add dh, cl ; call qword ptr [rdi]
0x00000000004b5add : jno 0x4b5ad6 ; jmp qword ptr [rax]
0x00000000004b8938 : jno 0x4b8927 ; hlt ; call qword ptr [rbx]
0x00000000004b986d : jno 0x4b987b ; ret
0x00000000004bf705 : jno 0x4bf70d ; add byte ptr [rax], cl ; add esi, esi ; call qword ptr [rdi]
0x00000000004123eb : jnp 0x4123f7 ; call rax
0x000000000041373d : jnp 0x413749 ; call rax
0x0000000000415e00 : jnp 0x415e3e ; call 0x412014
0x0000000000415df7 : jnp 0x415e45 ; call 0x412014
0x000000000041b0ba : jnp 0x41b0dd ; mov ecx, r14d ; mov rdx, r13 ; call r12
0x000000000041b98d : jnp 0x41b9a9 ; call rax
0x000000000042bacc : jnp 0x42bad5 ; inc dword ptr [rcx - 0x3a] ; add byte ptr [r8], r8b ; jmp 0x42baaa
0x00000000004430e7 : jnp 0x4430f7 ; xor esi, esi ; call 0x40f376
0x0000000000445514 : jnp 0x445522 ; call 0x412014
0x000000000046a312 : jnp 0x46a306 ; call rax
0x000000000046dfc6 : jnp 0x46dfe1 ; add byte ptr [rbp + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000419c7b : jns 0x419c27 ; ret
0x0000000000496420 : jns 0x41a6c015 ; pop rsp ; ret
0x000000000041d80e : jns 0x41d853 ; call r8
0x00000000004b6339 : jns 0x4b6341 ; add al, ah ; adc esi, esi ; jmp rax
0x00000000004b833d : jns 0x4b833f ; jmp qword ptr [rax]
0x00000000004bfecd : jns 0x4bfed5 ; add al, dl ; adc dh, dh ; jmp qword ptr [rcx]
0x00000000004099b5 : jo 0x4099ca ; or word ptr [rax + 8], 0x8000 ; ret
0x0000000000409a06 : jo 0x409a14 ; jne 0x409a00 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000409aa1 : jo 0x409af4 ; movsxd rsi, esi ; mov rax, qword ptr [rax + rsi*8 - 8] ; ret
0x0000000000411097 : jo 0x4110b6 ; movzx esi, si ; add rsi, qword ptr [rax + 0x50] ; jmp rcx
0x000000000041109e : jo 0x4110f2 ; jmp rcx
0x0000000000417af2 : jo 0x417ae1 ; ret
0x00000000004205be : jo 0x4205ae ; je 0x4205ce ; xor eax, eax ; ret
0x0000000000425ead : jo 0x425efd ; mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000042e33a : jo 0x42e348 ; add cl, bl ; ret 0xc9d8
0x00000000004321db : jo 0x4321e1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000434b0a : jo 0x434b1e ; scasd eax, dword ptr [rdi] ; ret
0x0000000000452612 : jo 0x452604 ; clc ; mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000045a5cd : jo 0x45a5d8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048529c : jo 0x485320 ; clc ; inc dword ptr [rcx + 1] ; ret 0x8b48
0x000000000049dedf : jo 0x49decb ; retf
0x00000000004ad098 : jo 0x4ad0f5 ; cld ; ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004b573c : jo 0x4b5768 ; cmc ; call rax
0x00000000004b581c : jo 0x4b585c ; cmc ; call qword ptr [rax]
0x00000000004b5ac5 : jo 0x4b5abe ; call rax
0x00000000004b5be4 : jo 0x4b5b6e ; cmc ; call qword ptr [rax]
0x00000000004b5f0c : jo 0x4b5ed4 ; cmc ; call qword ptr [rax]
0x00000000004b7564 : jo 0x4b7598 ; clc ; jmp rax
0x00000000004b7604 : jo 0x4b7658 ; clc ; call qword ptr [rax]
0x00000000004b76ad : jo 0x4b76a9 ; call rax
0x00000000004b775c : jo 0x4b7715 ; clc ; jmp rax
0x00000000004b7c6c : jo 0x4b7c86 ; cli ; call rax
0x00000000004b7c68 : jo 0x4b7ca2 ; add dword ptr [rax], eax ; jo 0x4b7c8a ; cli ; call rax
0x00000000004b7d5c : jo 0x4b7d43 ; cli ; call qword ptr [rax]
0x00000000004b7dc4 : jo 0x4b7dca ; sti ; call qword ptr [rax]
0x00000000004b80dc : jo 0x4b808e ; std ; jmp qword ptr [rax]
0x00000000004ba650 : jo 0x4ba691 ; cmc ; call qword ptr [rcx]
0x00000000004bae49 : jo 0x4bae57 ; ret
0x00000000004bd3a0 : jo 0x4bd34d ; cmc ; jmp qword ptr [rdi]
0x00000000004bf54d : jo 0x4bf555 ; add al, dl ; cld ; cmc ; call rsi
0x00000000004cc4e0 : jo 0x4cc49c ; cld ; jmp rdx
0x00000000004cd0b0 : jo 0x4cd0eb ; std ; jmp rdi
0x00000000004adf98 : jo 0xffffffffc458e766 ; ret 0xf07
0x0000000000408b1b : jp 0x408aaf ; adc sil, r14b ; ret
0x000000000040bd57 : jp 0x40bd62 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000043415b : jp 0x4341ab ; add esp, 0x10 ; pop rbx ; ret
0x00000000004762e2 : jp 0x47629b ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a76ee : jp 0x4a76a6 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a77b2 : jp 0x4a7749 ; and al, byte ptr [rax] ; test rax, rax ; je 0x4a77c6 ; call rax
0x00000000004ad285 : jp 0x4ad285 ; call rdi
0x00000000004ad281 : jp 0x4ad285 ; inc ebp ; jp 0x4ad289 ; call rdi
0x00000000004af414 : jp 0x4af41e ; jle 0x4af420 ; ret
0x00000000004b708d : jp 0x4b7088 ; jmp qword ptr [rax]
0x00000000004b97de : jp 0x4b97ec ; ret
0x00000000004b97de : jp 0x4b97f2 ; ret
0x00000000004bff55 : jp 0x4bff5d ; add byte ptr [rax], ch ; adc esi, esi ; call rax
0x00000000004bff54 : jp 0x4bff5e ; add byte ptr [rax], ch ; adc esi, esi ; call rax
0x00000000004c7ab1 : jp 0x4c7aad ; call rdi
0x00000000004211fa : jrcxz 0x421207 ; ret 0x8966
0x00000000004b6105 : jrcxz 0x4b60fe ; jmp rax
0x00000000004b7335 : jrcxz 0x4b7330 ; jmp qword ptr [rax]
0x00000000004b7334 : jrcxz 0x4b7331 ; jmp qword ptr [rax]
0x0000000000408e31 : js 0x408e4c ; add byte ptr [rax - 0x77], cl ; cmp byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000408e48 : js 0x408e5c ; ret
0x0000000000408f05 : js 0x408f39 ; add byte ptr [rbp + 6], dh ; ret
0x00000000004096cd : js 0x4096c5 ; sub rax, rsi ; ret
0x00000000004096ca : js 0x4096d3 ; add byte ptr [rax - 0xf], bh ; sub rax, rsi ; ret
0x0000000000409977 : js 0x409983 ; ret
0x000000000040a33e : js 0x40a317 ; ret
0x000000000040a6c3 : js 0x40a70b ; ret
0x000000000040b49c : js 0x40b492 ; cmp rax, rsi ; jne 0x40b479 ; ret
0x000000000040c60a : js 0x40c628 ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 8] ; call rax
0x0000000000410a5a : js 0x410a48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041171b : js 0x41174c ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x0000000000412d6c : js 0x412cf3 ; ret
0x0000000000415045 : js 0x415075 ; mov rdi, r12 ; call rcx
0x00000000004150c8 : js 0x4150fc ; add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000416393 : js 0x416320 ; ret
0x0000000000419755 : js 0x4197b9 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004199f1 : js 0x4199dd ; or byte ptr [rdi + 0x24], 1 ; xor eax, eax ; ret
0x000000000041be4b : js 0x41beaf ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041cced : js 0x41cd21 ; mov byte ptr [rbx + 0x1c], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000041d80a : js 0x41d847 ; mov rdi, qword ptr [rcx + 0x40] ; call r8
0x0000000000420345 : js 0x4203c3 ; or byte ptr [rax + 1], bh ; ret
0x0000000000420344 : js 0x4203c4 ; or byte ptr [rax + 1], bh ; ret
0x000000000042dfa7 : js 0x42dff9 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043863a : js 0x43864a ; mov qword ptr [rsp], rax ; call rsi
0x0000000000438e1e : js 0x438e5d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000439c61 : js 0x439c9d ; sar byte ptr [rax + 1], 0xf6 ; ret 0xf04
0x000000000044daf2 : js 0x44db27 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000044e93d : js 0x44e964 ; add byte ptr [rdi], cl ; retf
0x000000000044e99b : js 0x44e9c2 ; add byte ptr [rdi], cl ; retf
0x000000000045a586 : js 0x45a590 ; add byte ptr [rax], al ; je 0x45a597 ; ret
0x00000000004b0c62 : js 0x4b0c67 ; ret
0x00000000004b5a58 : js 0x4b5aa7 ; add byte ptr [rax], al ; mov al, 0x5e ; cmc ; call rax
0x00000000004b6100 : js 0x4b6174 ; add byte ptr [rax], al ; nop ; jrcxz 0x4b6103 ; jmp rax
0x00000000004b6301 : js 0x4b6309 ; add al, al ; adc esi, esi ; jmp rax
0x00000000004b7670 : js 0x4b7674 ; add byte ptr [rax], al ; add byte ptr [rdi - 8], ah ; call rax
0x00000000004b8335 : js 0x4b8337 ; jmp rax
0x00000000004bc0a1 : js 0x4bc09a ; jmp rcx
0x00000000004c5be8 : js 0x4c5bb2 ; idiv edi ; retf
0x00000000004c8d68 : js 0x4c8dd1 ; stc ; call rdx
0x00000000004ca618 : js 0x4ca62d ; sti ; jmp qword ptr [rbx]
0x00000000004ccce8 : js 0x4cccf9 ; std ; call qword ptr [rdx]
0x000000000041b80b : lahf ; add cl, byte ptr [rax] ; ret
0x00000000004b7735 : lahf ; clc ; call rax
0x00000000004905f8 : lahf ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000425d8a : lahf ; mov rdi, rax ; call 0x412016
0x000000000047c78d : lahf ; ret
0x00000000004315ee : lahf ; ret 0x2949
0x000000000042e49a : lahf ; ret 0x448d
0x000000000042eeb3 : lahf ; ret 0x8341
0x0000000000414ff9 : lahf ; ret 0xb7eb
0x00000000004b0237 : lahf ; ret 0xc245
0x000000000049aad1 : lahf ; ret 0xc383
0x000000000049b71c : lahf ; ret 0xca21
0x0000000000446d4b : lahf ; ret 0xd021
0x000000000040d5a5 : lahf ; ret 0xd184
0x0000000000407ee5 : lahf ; ret 0xe183
0x000000000041c01d : lahf ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b7b1d : lahf ; stc ; jmp qword ptr [rax]
0x00000000004ad020 : lahf ; xor esp, edi ; jmp qword ptr [rax]
0x00000000004b7e4f : lcall [rax + 0x10000145] ; pop rbx ; sti ; call qword ptr [rax]
0x00000000004b62af : lcall [rax + 0x20000076] ; or al, 0xf6 ; call rax
0x00000000004ac667 : lcall [rax + 0x45] ; idiv edi ; mov byte ptr [rbp - 9], al ; jmp rax
0x00000000004b5eef : lcall [rax + 0x5f] ; ret 0xfff5
0x00000000004b7b97 : lcall [rax + 0x6000012a] ; leave ; stc ; jmp rax
0x00000000004b676f : lcall [rax + 0x70000094] ; jg 0x4b6775 ; call rax
0x00000000004b83ef : lcall [rax + 0x7d] ; add dword ptr [rax], eax ; shr ch, 0xfe ; call rax
0x00000000004ad60b : lcall [rax - 0x17] ; std ; call qword ptr [rcx]
0x00000000004b7fa7 : lcall [rax - 0x3ffffeb1] ; cld ; call rax
0x00000000004ac787 : lcall [rax - 0x4c] ; idiv edi ; ret
0x00000000004b7a07 : lcall [rax - 0x4ffffee3] ; push rdi ; stc ; jmp rax
0x00000000004b5c0f : lcall [rax - 0x6fffffb1] ; mov ch, dh ; call rax
0x00000000004b7637 : lcall [rax - 0x7fffff07] ; pop rsi ; clc ; jmp rax
0x00000000004b5c3f : lcall [rax - 0x7fffffb0] ; mov dh, ch ; call rax
0x00000000004b7217 : lcall [rax] ; fiadd dword ptr [rax] ; add al, al ; ret 0xfff7
0x000000000044e2ca : lcall [rbp + 0x41] ; pop rsp ; ret
0x0000000000459192 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000041d6af : lcall [rbx + 0x48] ; mov eax, edx ; ret
0x000000000041e57f : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f9d5 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000040a61c : lcall [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000004ad01f : lcall [rdi + 0x20fffc31] ; xor edi, esp ; call rax
0x00000000004ac1af : lcall [rdi + rdi*8 - 0xb] ; call rsp
0x00000000004ac1ab : lcall [rdi + rdi*8 - 0xb] ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x00000000004ad6df : lcall [rdi - 0x25] ; std ; call qword ptr [rsi]
0x00000000004ad50b : lcall [rdi] ; out dx, eax ; std ; dec dword ptr [rcx] ; out dx, eax ; std ; jmp qword ptr [rdx]
0x00000000004ad333 : lcall [rdi] ; wait ; std ; jmp qword ptr [rdi + 0x11fffd9c]
0x00000000004acf9b : lcall [rdx] ; push 0x6320fff5 ; cmc ; jmp qword ptr [rax]
0x00000000004ad213 : lcall [rsi + 0x4a] ; cld ; jmp rdi
0x000000000046cc32 : lcall [rsi + 0xf] ; xchg eax, esp ; ret 0x8d4b
0x00000000004ad247 : lcall [rsp + rdi] ; cld ; jmp qword ptr [rax]
0x0000000000418ad8 : lea eax, [r9 + 1] ; pop rbx ; ret
0x000000000041b40e : lea eax, [rax + rax - 1] ; ret
0x000000000041b6b7 : lea eax, [rax + rax*2] ; ret
0x0000000000408b1c : lea eax, [rax + rdx - 0xa] ; ret
0x000000000041e0c4 : lea eax, [rbx + 7] ; pop rbx ; and eax, 0xfffffff8 ; ret
0x00000000004be4d4 : lea eax, [rbx] ; mov es, word ptr [rdx] ; ret
0x0000000000418ad9 : lea eax, [rcx + 1] ; pop rbx ; ret
0x00000000004096a4 : lea eax, [rcx + r8 + 4] ; ret
0x00000000004096a5 : lea eax, [rcx + rax + 4] ; ret
0x000000000041467b : lea eax, [rdi + 1] ; ret
0x0000000000407af0 : lea eax, [rdi + 7] ; and eax, 0xfffffff8 ; ret
0x0000000000414741 : lea eax, [rdi + 8] ; lea ecx, [rdx - 3] ; shl rax, cl ; ret
0x000000000040b3fe : lea eax, [rdi + 8] ; mov word ptr [rdi + 0x12], cx ; jmp 0x40b3d2
0x000000000040be05 : lea eax, [rdx + 1] ; ret
0x000000000040c03b : lea eax, [rdx + 2] ; ret
0x0000000000417aed : lea eax, [rdx + rax*8] ; mov byte ptr [rax - 0x15], sil ; ret
0x0000000000408cf1 : lea eax, [rip + 0x2c6e49] ; ret
0x0000000000408ce1 : lea eax, [rip + 0x2c6ef9] ; ret
0x0000000000408cd1 : lea eax, [rip + 0x2c6fa9] ; ret
0x0000000000436729 : lea eax, [rip + 0x73638] ; ret
0x0000000000438ad1 : lea eax, [rip + 0x75979] ; ret
0x000000000043669b : lea eax, [rip + 0x7af0f] ; pop rbx ; pop rbp ; ret
0x0000000000421349 : lea eax, [rip + 0x8d2b1] ; ret
0x000000000042133a : lea eax, [rip + 0x8d2c0] ; pop rbx ; pop rbp ; ret
0x0000000000421325 : lea eax, [rip + 0x8d2d5] ; pop rbx ; pop rbp ; ret
0x000000000041a591 : lea eax, [rip + 0x8f432] ; ret
0x000000000040c4e1 : lea eax, [rip + 0xa4ee1] ; ret
0x000000000040c4d1 : lea eax, [rip + 0xa4ee9] ; ret
0x00000000004146c8 : lea eax, [rsi + 1] ; ret
0x0000000000428420 : lea ecx, [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000477741 : lea ecx, [rbp + rcx] ; add byte ptr [rcx], bh ; retf
0x0000000000419178 : lea ecx, [rdx + 1] ; mov dword ptr [rdi + 0x7c], ecx ; mov dword ptr [rax + 0x10], edx ; ret
0x0000000000414744 : lea ecx, [rdx - 3] ; shl rax, cl ; ret
0x0000000000413f99 : lea edx, [rax + 0x18] ; mov qword ptr [rbx + 0x20], rdx ; pop rbx ; ret
0x00000000004281b3 : lea edx, [rax + 1] ; mov dword ptr [rdi], edx ; ret
0x000000000040f239 : lea edx, [rax + rdx*2] ; jne 0x40f227 ; xor eax, eax ; ret
0x000000000049958e : lea esi, [rbp + rax] ; sub edx, eax ; call 0x426018
0x000000000046ad5d : lea esp, [rcx + rax - 0x7cb80000] ; ret
0x000000000040b3fd : lea r8, [rdi + 8] ; mov word ptr [rdi + 0x12], cx ; jmp 0x40b3d3
0x0000000000417aec : lea rax, [rdx + rax*8] ; mov byte ptr [rax - 0x15], sil ; ret
0x0000000000408cf0 : lea rax, [rip + 0x2c6e49] ; ret
0x0000000000408ce0 : lea rax, [rip + 0x2c6ef9] ; ret
0x0000000000408cd0 : lea rax, [rip + 0x2c6fa9] ; ret
0x0000000000436728 : lea rax, [rip + 0x73638] ; ret
0x0000000000438ad0 : lea rax, [rip + 0x75979] ; ret
0x000000000043669a : lea rax, [rip + 0x7af0f] ; pop rbx ; pop rbp ; ret
0x0000000000421348 : lea rax, [rip + 0x8d2b1] ; ret
0x0000000000421339 : lea rax, [rip + 0x8d2c0] ; pop rbx ; pop rbp ; ret
0x0000000000421324 : lea rax, [rip + 0x8d2d5] ; pop rbx ; pop rbp ; ret
0x000000000041a590 : lea rax, [rip + 0x8f432] ; ret
0x000000000040c4e0 : lea rax, [rip + 0xa4ee1] ; ret
0x000000000040c4d0 : lea rax, [rip + 0xa4ee9] ; ret
0x0000000000413f98 : lea rdx, [rax + 0x18] ; mov qword ptr [rbx + 0x20], rdx ; pop rbx ; ret
0x000000000040f238 : lea rdx, [rax + rdx*2] ; jne 0x40f228 ; xor eax, eax ; ret
0x000000000049958d : lea rsi, [r13 + rax] ; sub edx, eax ; call 0x426019
0x00000000004b6fd1 : leave ; add byte ptr [rax], al ; nop ; movsxd rsi, edi ; jmp rax
0x000000000049965a : leave ; clc ; inc dword ptr [rbp + 0xfc589c0] ; xchg eax, esp ; ret
0x0000000000403b02 : leave ; dec dword ptr [rcx - 0x1876b33a] ; call 0x4205e9
0x000000000040de75 : leave ; je 0x40dea0 ; mov rdi, rbx ; call rcx
0x0000000000444368 : leave ; jmp 0x444338
0x000000000040a6c2 : leave ; js 0x40a70c ; ret
0x0000000000417c2f : leave ; mov rax, rcx ; add rax, qword ptr [rdi] ; ret
0x0000000000410407 : leave ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000404b8e : leave ; ret
0x00000000004238f7 : leave ; retf 0x2a
0x00000000004b1389 : leave ; retf 0xcccb
0x00000000004b7b9d : leave ; stc ; jmp rax
0x00000000004b64b7 : ljmp [rax + 0x50000082] ; cmp dh, dh ; call rax
0x00000000004b6b97 : ljmp [rax + 0xac] ; ret 0xfff6
0x00000000004ad5ef : ljmp [rax - 0x15] ; std ; call rdi
0x00000000004ad347 : ljmp [rax - 0x4200025a] ; cdq ; std ; call qword ptr [rcx]
0x00000000004ac7a3 : ljmp [rax - 0x4c] ; idiv edi ; ret
0x00000000004b7e97 : ljmp [rax - 0x4ffffeb9] ; insb byte ptr [rdi], dx ; sti ; jmp rax
0x00000000004b78f7 : ljmp [rax - 0x7ffffeec] ; adc al, 0xf9 ; jmp rax
0x00000000004b6e97 : ljmp [rax] ; ret
0x00000000004ad09b : ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004ad64f : ljmp [rcx - 0x1b] ; std ; jmp qword ptr [rdx]
0x00000000004ac8c7 : ljmp [rdi + rbx] ; clc ; call rdi
0x00000000004ac8c3 : ljmp [rdi + rbx] ; clc ; ljmp [rdi + rbx] ; clc ; call rdi
0x00000000004ad20f : ljmp [rdx + rcx*2 + 0x4a5efffc] ; cld ; jmp rdi
0x00000000004ad6c7 : ljmp [rsi] ; clc ; std ; jmp qword ptr [rsi]
0x00000000004a351b : lock add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004b5578 : lock xor dword ptr [rax], eax ; add byte ptr [rbx], bl ; add esi, ebp ; call qword ptr [rax]
0x000000000040b265 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ad210 : lodsb al, byte ptr [rsi] ; cld ; lcall [rsi + 0x4a] ; cld ; jmp rdi
0x000000000041517d : lodsb al, byte ptr [rsi] ; nop ; ret
0x00000000004cd8bc : lodsb al, byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; loopne 0x4cd877 ; std ; call qword ptr [rax]
0x000000000049e35a : lodsb al, byte ptr [rsi] ; ret
0x00000000004c47bc : lodsb al, byte ptr [rsi] ; ret 0
0x00000000004c4fbc : lodsb al, byte ptr [rsi] ; retf 0
0x000000000045e970 : lodsb al, byte ptr [rsi] ; retf 0xfffa
0x0000000000489c70 : lodsb al, byte ptr [rsi] ; sbb edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x000000000042ebc2 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c324d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; loopne 0x4c3249 ; idiv bh ; ret
0x00000000004a76ef : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000415827 : lodsd eax, dword ptr [rsi] ; mov eax, 0x89000000 ; ret 0x8b49
0x000000000040b562 : lodsd eax, dword ptr [rsi] ; mov rax, rdi ; ret
0x000000000045ec1f : lodsd eax, dword ptr [rsi] ; retf
0x00000000004b80dd : lodsd eax, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000407a70 : lodsd eax, dword ptr [rsi] ; sub al, 0 ; ret
0x0000000000407a6f : lodsq rax, qword ptr [rsi] ; sub al, 0 ; ret
0x0000000000409ce6 : loop 0x409cec ; add edx, 8 ; mov eax, edx ; pop rbx ; ret
0x0000000000417c1a : loop 0x417c1d ; cmp edx, ecx ; jle 0x417c31 ; add dword ptr [rdi + 0xc], edx ; ret
0x0000000000418bbd : loop 0x418bc7 ; add byte ptr [rax], cl ; add byte ptr [rsp + rsi*4 - 0xd], dh ; ret
0x00000000004199f2 : loop 0x41997b ; and al, 1 ; xor eax, eax ; ret
0x000000000042b8cd : loop 0x42b85a ; ret
0x000000000042fc13 : loop 0x42fc1b ; je 0x42fc2d ; ret
0x000000000043439b : loop 0x43432d ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004370d5 : loop 0x4370c2 ; retf 0xfffe
0x00000000004512cb : loop 0x4512de ; retf 0x1689
0x0000000000451492 : loop 0x4514a5 ; retf 0x8941
0x00000000004b60ed : loop 0x4b60e6 ; jmp qword ptr [rax]
0x00000000004b7d55 : loop 0x4b7d53 ; call rax
0x00000000004b7d5d : loop 0x4b7d5b ; call qword ptr [rax]
0x00000000004c2d21 : loop 0x4c2d1b ; call qword ptr [rax]
0x000000000040c4e3 : loope 0x40c537 ; or al, byte ptr [rax] ; ret
0x000000000042f980 : loope 0x42f96c ; retf 0xfffe
0x0000000000431fe5 : loope 0x431fef ; mov eax, r8d ; sub eax, ecx ; ret
0x0000000000456f5e : loope 0x456f64 ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000045bcb0 : loope 0x45bc3d ; ret 0x1fbe
0x000000000047c7a4 : loope 0x47c7af ; add byte ptr [rcx], dh ; shr al, 0x82 ; ret
0x00000000004ad68d : loope 0x4ad68e ; jmp qword ptr [rbx]
0x00000000004b60dd : loope 0x4b60d6 ; jmp rax
0x00000000004b77f5 : loope 0x4b77f1 ; call rax
0x00000000004b8759 : loope 0x4b8751 ; jmp qword ptr [rcx]
0x0000000000402920 : loopne 0x402982 ; pop rbp ; pop r12 ; ret
0x00000000004029ad : loopne 0x402a14 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000404cbf : loopne 0x404c4f ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000404cbe : loopne 0x404c50 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000404cda : loopne 0x404c6a ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000404cd9 : loopne 0x404c6b ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000405d71 : loopne 0x405cfe ; ret 0x8b48
0x0000000000405d70 : loopne 0x405cff ; ret 0x8b48
0x0000000000407948 : loopne 0x40794d ; ret 0x458b
0x0000000000407947 : loopne 0x40794e ; ret 0x458b
0x0000000000407af4 : loopne 0x407af0 ; ret
0x0000000000408cc5 : loopne 0x408cd6 ; and eax, 0x1000 ; ret
0x0000000000408dc2 : loopne 0x408dc7 ; ret
0x0000000000409274 : loopne 0x4092d7 ; pop rbp ; pop r12 ; ret
0x0000000000409868 : loopne 0x40986e ; add byte ptr [rax], al ; ret
0x0000000000409960 : loopne 0x409965 ; ret
0x000000000040999c : loopne 0x4099c3 ; movzx eax, byte ptr [rdx + rax] ; ret
0x0000000000409af0 : loopne 0x409af5 ; ret
0x000000000040a6da : loopne 0x40a6e4 ; ret
0x000000000040cd43 : loopne 0x40cd48 ; ret
0x000000000040dddf : loopne 0x40de30 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f727 : loopne 0x40f728 ; rol byte ptr [rcx + 0x20], 1 ; xor byte ptr [rax], r10b ; ret
0x0000000000410455 : loopne 0x41045e ; ret
0x0000000000413e04 : loopne 0x413e66 ; pop rbp ; pop r12 ; ret
0x0000000000413e3b : loopne 0x413e9d ; pop rbp ; pop r12 ; ret
0x0000000000413eba : loopne 0x413f1c ; pop rbp ; pop r12 ; ret
0x0000000000417333 : loopne 0x417338 ; ret
0x0000000000417a0d : loopne 0x417a05 ; mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x0000000000417a43 : loopne 0x417a3b ; mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x0000000000419cd4 : loopne 0x419d37 ; pop r12 ; ret
0x0000000000419d30 : loopne 0x419d93 ; pop r12 ; ret
0x000000000041c52e : loopne 0x41c592 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c555 : loopne 0x41c5b9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c581 : loopne 0x41c5e6 ; pop r12 ; pop r13 ; ret
0x000000000041c5ba : loopne 0x41c61f ; pop r12 ; pop r13 ; ret
0x000000000041c5d5 : loopne 0x41c63a ; pop r12 ; pop r13 ; ret
0x000000000041e0c9 : loopne 0x41e0c5 ; ret
0x000000000042153e : loopne 0x421548 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000429a58 : loopne 0x429aba ; pop rbp ; pop r12 ; ret
0x0000000000429a83 : loopne 0x429ae5 ; pop rbp ; pop r12 ; ret
0x000000000042cc59 : loopne 0x42ccbd ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042d225 : loopne 0x42d28c ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042d25f : loopne 0x42d2c5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004323b9 : loopne 0x4323b5 ; mov word ptr [rbx + 8], ax ; pop rbx ; ret
0x000000000043c76f : loopne 0x43c788 ; test byte ptr [rdx - 0x7cffffff], bh ; ret 0x4401
0x000000000043c76e : loopne 0x43c789 ; test byte ptr [rdx - 0x7cffffff], bh ; ret 0x4401
0x000000000043d260 : loopne 0x43d2a0 ; ror byte ptr [rdi], 1 ; ret 0x548b
0x0000000000445923 : loopne 0x44590b ; cmp al, 0x5b ; jne 0x445937 ; ret
0x0000000000446845 : loopne 0x44684f ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046149c : loopne 0x461517 ; or dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x000000000046c0d7 : loopne 0x46c139 ; pop rbp ; pop r12 ; ret
0x000000000046c0e5 : loopne 0x46c147 ; pop rbp ; pop r12 ; ret
0x000000000046d960 : loopne 0x46d9c2 ; pop rbp ; pop r12 ; ret
0x000000000047d067 : loopne 0x47d080 ; test byte ptr [rdx - 0x7d000000], al ; ret 0x3901
0x000000000047d066 : loopne 0x47d081 ; test byte ptr [rdx - 0x7d000000], al ; ret 0x3901
0x000000000047d90b : loopne 0x47d894 ; ret 0xac75
0x0000000000489d3c : loopne 0x489d5e ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad17c : loopne 0x4ad1e9 ; cld ; jmp qword ptr [rbx]
0x00000000004ad891 : loopne 0x4ad893 ; call rsp
0x00000000004b5a6c : loopne 0x4b5ad0 ; cmc ; jmp qword ptr [rax]
0x00000000004b5ac4 : loopne 0x4b5b39 ; cmc ; call rax
0x00000000004b6000 : loopne 0x4b606f ; add byte ptr [rax], al ; adc cl, bl ; cmc ; call qword ptr [rax]
0x00000000004b6095 : loopne 0x4b608e ; call rax
0x00000000004b6094 : loopne 0x4b608f ; call rax
0x00000000004b60a5 : loopne 0x4b609e ; call qword ptr [rax]
0x00000000004b6124 : loopne 0x4b610f ; cmc ; jmp qword ptr [rax]
0x00000000004b6108 : loopne 0x4b617c ; add byte ptr [rax], al ; and ah, ah ; cmc ; jmp qword ptr [rax]
0x00000000004b6194 : loopne 0x4b6189 ; cmc ; call qword ptr [rax]
0x00000000004b6340 : loopne 0x4b63c2 ; add byte ptr [rax], al ; adc al, 0xf6 ; call qword ptr [rax]
0x00000000004b77dc : loopne 0x4b77bb ; clc ; jmp rax
0x00000000004b7f14 : loopne 0x4b7e9d ; sti ; call rax
0x00000000004b8260 : loopne 0x4b82d8 ; add dword ptr [rax], eax ; nop ; and bh, dh ; call qword ptr [rax]
0x00000000004b8338 : loopne 0x4b83b7 ; add dword ptr [rax], eax ; sar byte ptr [rcx - 2], 1 ; jmp qword ptr [rax]
0x00000000004bbf50 : loopne 0x4bbfcb ; cmc ; jmp qword ptr [rax]
0x00000000004bcd90 : loopne 0x4bcd2e ; cmc ; call qword ptr [rbx]
0x00000000004beeb0 : loopne 0x4beea5 ; cmc ; call qword ptr [rax]
0x00000000004c3250 : loopne 0x4c3246 ; idiv bh ; ret
0x00000000004c71e0 : loopne 0x4c721c ; clc ; jmp qword ptr [rbx]
0x00000000004ca940 : loopne 0x4ca98e ; sti ; jmp rdi
0x00000000004cc871 : loopne 0x4cc871 ; call rax
0x00000000004ccc00 : loopne 0x4ccc08 ; std ; call rdi
0x00000000004cd8c0 : loopne 0x4cd873 ; std ; call qword ptr [rax]
0x000000000041eb5b : mov ah, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004beec4 : mov ah, 0x69 ; add byte ptr [rax], al ; fdiv st(0) ; cmc ; call qword ptr [rax]
0x0000000000406531 : mov ah, 0x89 ; ret 0x8b48
0x00000000004ba3ef : mov ah, 0xa ; ret
0x00000000004accfc : mov ah, 0xd1 ; stc ; jmp rsp
0x00000000004c72c4 : mov ah, 0xed ; add byte ptr [rax], al ; sub byte ptr [rax + rdi*8], bh ; call rdi
0x0000000000418bc3 : mov ah, 0xf3 ; ret
0x00000000004c2771 : mov ah, 0xf6 ; call qword ptr [rdx]
0x00000000004b775d : mov ah, 0xf8 ; jmp rax
0x00000000004b0c5e : mov ah, 1 ; mov bl, 1 ; js 0x4b0c6b ; ret
0x00000000004afa80 : mov ah, 4 ; mov ah, 4 ; mov ecx, 0xd1ffd1ff ; call rcx
0x0000000000458639 : mov ah, 4 ; mov eax, 0x83000000 ; ret
0x00000000004afa82 : mov ah, 4 ; mov ecx, 0xd1ffd1ff ; call rcx
0x00000000004b7a60 : mov al, 0x20 ; add dword ptr [rax], eax ; adc byte ptr [rsi - 7], bh ; call rax
0x00000000004c05b0 : mov al, 0x24 ; idiv bh ; ret
0x00000000004b56fc : mov al, 0x26 ; cmc ; call qword ptr [rax]
0x00000000004b754c : mov al, 0x2d ; clc ; call qword ptr [rax]
0x00000000004b5568 : mov al, 0x31 ; add byte ptr [rax], al ; jg 0x4b5574 ; hlt ; call rax
0x00000000004b55a8 : mov al, 0x32 ; add byte ptr [rax], al ; cmp byte ptr [rdi], cl ; cmc ; call rax
0x00000000004b56a8 : mov al, 0x36 ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000004b57b0 : mov al, 0x3a ; add byte ptr [rax], al ; cmp bpl, sil ; call rax
0x00000000004b59c8 : mov al, 0x42 ; add byte ptr [rax], al ; mov al, 0x4f ; cmc ; jmp rax
0x0000000000449cfc : mov al, 0x48 ; add eax, ecx ; jmp rax
0x000000000041b667 : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000004b596c : mov al, 0x48 ; cmc ; jmp qword ptr [rax]
0x00000000004b59cc : mov al, 0x4f ; cmc ; jmp rax
0x00000000004b7a0c : mov al, 0x57 ; stc ; jmp rax
0x00000000004b5a5c : mov al, 0x5e ; cmc ; call rax
0x00000000004b5ef8 : mov al, 0x5f ; add byte ptr [rax], al ; rol dl, 1 ; cmc ; call rax
0x00000000004b6ff4 : mov al, 0x64 ; idiv edi ; nop ; retf 0
0x00000000004b5ff8 : mov al, 0x66 ; add byte ptr [rax], al ; nop ; fdiv st(5) ; jmp rax
0x00000000004b6058 : mov al, 0x68 ; add byte ptr [rax], al ; sbb dh, 0xf5 ; call rax
0x00000000004b7e9c : mov al, 0x6c ; sti ; jmp rax
0x00000000004bbbb0 : mov al, 0x72 ; cmc ; call qword ptr [rdx]
0x00000000004b6e40 : mov al, 0xc0 ; add byte ptr [rax], al ; xor byte ptr [rax - 9], al ; call rax
0x00000000004b6f68 : mov al, 0xc6 ; add byte ptr [rax], al ; rcl byte ptr [rsi - 9], 1 ; jmp rax
0x00000000004b60dc : mov al, 0xe1 ; cmc ; jmp rax
0x00000000004ad68c : mov al, 0xe1 ; std ; jmp qword ptr [rbx]
0x00000000004ac76d : mov al, 0xf7 ; call qword ptr [rdi]
0x00000000004ac73d : mov al, 0xf7 ; jmp qword ptr [rax]
0x0000000000455e36 : mov bh, 0x14 ; adc dword ptr [rsi - 0x3f], esp ; ret 0x6608
0x0000000000408b19 : mov bh, 0x14 ; jp 0x408ab1 ; adc sil, r14b ; ret
0x0000000000455c6f : mov bh, 0x1c ; add ah, byte ptr [rsi - 0x3f] ; ret
0x000000000040cb0c : mov bh, 0x39 ; cmovg edx, esi ; mov dword ptr [rcx + 0x68], edx ; ret
0x000000000040cd3f : mov bh, 0x40 ; and eax, 1 ; ret
0x00000000004760d7 : mov bh, 0x43 ; or byte ptr [rax - 0x497af0fc], ch ; ret
0x000000000047646d : mov bh, 0x43 ; or byte ptr [rcx], al ; ret 0x63e9
0x000000000043a2e5 : mov bh, 0x43 ; xor bl, ch ; ret
0x0000000000435531 : mov bh, 0x45 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x0000000000474f71 : mov bh, 0x45 ; or bl, ch ; ret 0x2e66
0x0000000000408f71 : mov bh, 0x47 ; sub al, 0xa8 ; and dword ptr [rax + rbx - 0x77], esi ; ret 0xe283
0x0000000000475091 : mov bh, 0x49 ; adc cl, byte ptr [rax + 1] ; retf
0x00000000004ad234 : mov bh, 0x49 ; cld ; call qword ptr [rdx]
0x000000000041776d : mov bh, 0x4f ; or al, byte ptr [rcx + 0x39] ; retf
0x00000000004213ef : mov bh, 0x50 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000472df3 : mov bh, 0x56 ; or dh, dh ; ret 0xf01
0x000000000042fbf1 : mov bh, 0x57 ; or dh, dh ; ret 0x7402
0x000000000044e833 : mov bh, 0x5d ; add byte ptr [rcx - 0x7d], cl ; in eax, dx ; add ah, byte ptr [rsi - 0x3f] ; ret
0x0000000000441cf1 : mov bh, 0x84 ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000409a36 : mov bh, 0x87 ; mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x000000000045b381 : mov bh, 0x94 ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4120
0x0000000000494072 : mov bh, 0xa8 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; retf 0x8b41
0x00000000004b1386 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000041109a : mov bh, 0xf6 ; add rsi, qword ptr [rax + 0x50] ; jmp rcx
0x00000000004cc4e1 : mov bh, 0xfc ; jmp rdx
0x0000000000401fa4 : mov bh, 1 ; add byte ptr [rcx + 0x5d5b5ae8], cl ; ret
0x00000000004097ce : mov bh, 4 ; pop rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000437f32 : mov bh, byte ptr [rcx - 0x76b70003] ; ret
0x000000000044d746 : mov bl, 0xbc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x7bd
0x00000000004b0c60 : mov bl, 1 ; js 0x4b0c69 ; ret
0x00000000004865f0 : mov byte ptr [ebx + 0x32], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e2c5 : mov byte ptr [r12 + 0x58], 0xff ; pop rbp ; pop r12 ; ret
0x000000000042bacf : mov byte ptr [r13], 0 ; jmp 0x42baa7
0x000000000041538e : mov byte ptr [rax + 0x14], 0 ; ret
0x0000000000415cf0 : mov byte ptr [rax + 0x14], 1 ; sub dword ptr [rdx + 0x28], 1 ; ret
0x00000000004099b4 : mov byte ptr [rax + 0xb], dh ; or word ptr [rax + 8], 0x8000 ; ret
0x000000000045a585 : mov byte ptr [rax + 1], bh ; add byte ptr [rax], al ; je 0x45a598 ; ret
0x0000000000419240 : mov byte ptr [rax + 6], 1 ; ret
0x0000000000407bcc : mov byte ptr [rax + rax], ch ; add rsp, 8 ; cdqe ; ret
0x0000000000407b68 : mov byte ptr [rax + rax], ch ; nop dword ptr [rax + rax] ; ret
0x0000000000417af1 : mov byte ptr [rax - 0x15], dh ; ret
0x0000000000417af0 : mov byte ptr [rax - 0x15], sil ; ret
0x00000000004b6f69 : mov byte ptr [rax], 0 ; rcl byte ptr [rsi - 9], 1 ; jmp rax
0x000000000044e330 : mov byte ptr [rax], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000407690 : mov byte ptr [rax], 0x32 ; mov eax, 1 ; pop rbp ; ret
0x0000000000437c68 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040dcd2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000411763 : mov byte ptr [rax], al ; add byte ptr [rax], al ; test rdx, rdx ; je 0x411791 ; call rdx
0x0000000000444363 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor ecx, ecx ; jmp 0x44433d
0x0000000000444170 : mov byte ptr [rax], dl ; mov eax, ebx ; pop rbx ; ret
0x00000000004ac66c : mov byte ptr [rbp - 9], al ; jmp rax
0x000000000042bad0 : mov byte ptr [rbp], 0 ; jmp 0x42baa6
0x0000000000401de4 : mov byte ptr [rbx + 0x15], 0 ; pop rdx ; pop rbx ; pop rbp ; ret
0x000000000041ccef : mov byte ptr [rbx + 0x1c], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000041d325 : mov byte ptr [rbx + 0x1c], ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042aa64 : mov byte ptr [rbx + 0x20], 1 ; mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x00000000004865f1 : mov byte ptr [rbx + 0x32], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416a35 : mov byte ptr [rbx + 0x43], 0 ; pop rbx ; ret
0x0000000000472c55 : mov byte ptr [rbx + 0x56], 0 ; jmp 0x46f726
0x000000000044f2dc : mov byte ptr [rbx + 0x56], 0 ; pop rbx ; ret
0x000000000044f257 : mov byte ptr [rbx + 0x56], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000044f2d4 : mov byte ptr [rbx + 0x56], 1 ; xor eax, eax ; pop rbx ; ret
0x0000000000472d60 : mov byte ptr [rbx + 0xa], 1 ; jmp 0x46f844
0x000000000043d165 : mov byte ptr [rbx - 0x2fc6fd40], 0xf ; ret 0x548b
0x0000000000416ff3 : mov byte ptr [rbx], 0 ; pop rbx ; ret
0x000000000042058d : mov byte ptr [rbx], 0xa0 ; pop rbx ; ret
0x00000000004b024c : mov byte ptr [rcx + 0x5a], bl ; sahf ; retf
0x0000000000426dd0 : mov byte ptr [rcx], 0x4d ; mov ebp, edi ; jmp 0x426da0
0x0000000000407e2f : mov byte ptr [rcx], 0x83 ; stc ; push qword ptr [rbp - 0x26] ; xor eax, eax ; ret
0x000000000040d7f5 : mov byte ptr [rcx], 0x89 ; ret 0xf41
0x0000000000461f2b : mov byte ptr [rcx], 0xeb ; fisttp word ptr [rax - 0x77] ; ret
0x000000000045b239 : mov byte ptr [rcx], 0xf ; test bh, cl ; add byte ptr [rax], al ; add dh, dh ; ret 0xf05
0x000000000041e928 : mov byte ptr [rdi + 0x10], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e96b : mov byte ptr [rdi + 0x10], dl ; ret
0x000000000041cd00 : mov byte ptr [rdi + 0x1c], 1 ; xor eax, eax ; ret
0x0000000000419231 : mov byte ptr [rdi + 0x1f], al ; mov dword ptr [rdi + rcx*4 + 0x28], esi ; ret
0x000000000040a250 : mov byte ptr [rdi + 0x24], 0 ; mov eax, 2 ; ret
0x000000000041154b : mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000042b80d : mov byte ptr [rdi + 1], 0 ; ret
0x00000000004351ba : mov byte ptr [rdi + 7], al ; xor eax, eax ; ret
0x0000000000407d10 : mov byte ptr [rdi + r9], 0 ; ret
0x0000000000407d11 : mov byte ptr [rdi + rcx], 0 ; ret
0x00000000004c0d18 : mov byte ptr [rdi - 0xa], cl ; call qword ptr [rbx]
0x00000000004b9568 : mov byte ptr [rdi], al ; cmc ; call qword ptr [rbx]
0x0000000000414540 : mov byte ptr [rdi], al ; mov eax, 2 ; ret
0x00000000004b7868 : mov byte ptr [rdi], cl ; add dword ptr [rax], eax ; sar ah, 0xf8 ; jmp qword ptr [rax]
0x0000000000414551 : mov byte ptr [rdi], dh ; mov eax, 1 ; ret
0x0000000000414550 : mov byte ptr [rdi], sil ; mov eax, 1 ; ret
0x0000000000436eb6 : mov byte ptr [rdx + 0x16], 1 ; ret
0x0000000000425960 : mov byte ptr [rdx + 0x19], 1 ; pop rbx ; ret
0x000000000041d69b : mov byte ptr [rdx + 0x71], 1 ; mov rax, rdx ; pop rbx ; ret
0x000000000040df6f : mov byte ptr [rdx + rax], 0 ; mov dword ptr [rcx], esi ; pop rbx ; pop rbp ; ret
0x000000000040df7d : mov byte ptr [rdx + rax], 0 ; mov dword ptr [rcx], esi ; ret
0x00000000004458e2 : mov byte ptr [rdx + rax], ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040b204 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000041b496 : mov byte ptr [rdx], al ; mov dword ptr [rdi + 8], eax ; ret
0x00000000004c6b88 : mov byte ptr [rdx], dl ; clc ; call rsi
0x000000000041b495 : mov byte ptr [rdx], r8b ; mov dword ptr [rdi + 8], eax ; ret
0x0000000000404833 : mov byte ptr [rip + 0x2cd9ee], 1 ; ret
0x000000000042508b : mov byte ptr [rsi + 1], 0 ; pop rbx ; ret
0x000000000042062e : mov byte ptr [rsi + 1], cl ; je 0x420656 ; ret
0x000000000042065b : mov byte ptr [rsi + 1], cl ; ret
0x0000000000425088 : mov byte ptr [rsi], 0x22 ; mov byte ptr [rsi + 1], 0 ; pop rbx ; ret
0x0000000000418be0 : mov byte ptr [rsi], 0x65 ; xor eax, eax ; ret
0x000000000044e2c6 : mov byte ptr [rsp + 0x58], 0xff ; pop rbp ; pop r12 ; ret
0x000000000041300f : mov byte ptr [rsp + 8], dl ; call rax
0x00000000004c27e1 : mov ch, 0xf6 ; jmp qword ptr [rdx]
0x00000000004ad5ec : mov ch, bl ; std ; ljmp [rax - 0x15] ; std ; call rdi
0x00000000004b5c15 : mov ch, dh ; call rax
0x000000000042134b : mov cl, 0xd2 ; or byte ptr [rax], al ; ret
0x00000000004ac785 : mov cl, 0xf7 ; lcall [rax - 0x4c] ; idiv edi ; ret
0x00000000004ac7a1 : mov cl, 0xf7 ; ljmp [rax - 0x4c] ; idiv edi ; ret
0x00000000004762e3 : mov cl, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad885 : mov cl, 0xfe ; jmp qword ptr [rbx]
0x0000000000452615 : mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047d21a : mov cl, byte ptr [rax + 0x63] ; retf
0x00000000004278ba : mov cl, byte ptr [rax + 1] ; retf 0xe2ff
0x0000000000403ec0 : mov cs, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000041227e : mov cs, word ptr [rax + 1] ; int1 ; jmp rcx
0x00000000004b6ce9 : mov dh, 0 ; add al, dh ; add bh, dh ; jmp rax
0x0000000000407d97 : mov dh, 0x14 ; add dword ptr [rcx], esi ; shr byte ptr [rcx], 0xd0 ; ret
0x0000000000414dd5 : mov dh, 0x2b ; add byte ptr [rbx - 0x9f3dbac], cl ; ret 0x4901
0x0000000000431155 : mov dh, 0x3c ; or byte ptr [rbp + 0x75f989ff], al ; retf 0xf631
0x000000000047bbc4 : mov dh, 0x40 ; cmp al, 0x89 ; ret
0x000000000040fb17 : mov dh, 0x40 ; or dh, dh ; ret 0x4102
0x000000000040f63a : mov dh, 0x40 ; sub ebx, eax ; ret
0x000000000041ce1d : mov dh, 0x45 ; adc al, 0x38 ; ret 0x1c74
0x0000000000423e09 : mov dh, 0x45 ; add dh, dh ; ret
0x0000000000453309 : mov dh, 0x45 ; add dword ptr [rcx - 0x7d], eax ; ret 0x4901
0x000000000043d20c : mov dh, 0x45 ; movsxd rsi, dword ptr [rsi + rcx - 0x77] ; ret 0xe283
0x000000000049c3fc : mov dh, 0x47 ; or dword ptr [rcx], ebp ; ret 0x6348
0x000000000040cc11 : mov dh, 0x47 ; ret
0x0000000000493851 : mov dh, 0x48 ; sub cl, byte ptr [rax - 0x7d] ; sal byte ptr [rax], 1 ; retf 0x3948
0x0000000000431528 : mov dh, 0x4a ; add dword ptr [rax - 0x77], ecx ; ret 0x2076
0x000000000040c3dc : mov dh, 0x4b ; add cl, byte ptr [rcx - 0x77] ; ret
0x000000000040c1cb : mov dh, 0x4b ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000049e824 : mov dh, 0x4b ; and al, 0x39 ; retf 0x257d
0x00000000004501e2 : mov dh, 0x4d ; adc edi, dword ptr [rcx] ; retf 0xd275
0x000000000049f4b7 : mov dh, 0x50 ; add eax, dword ptr [rcx] ; retf 0x3941
0x000000000049f6fd : mov dh, 0x50 ; add eax, dword ptr [rcx] ; retf 0xd539
0x00000000004501b4 : mov dh, 0x55 ; adc bh, byte ptr [rcx] ; retf 0x2574
0x0000000000472dc9 : mov dh, 0x55 ; add esi, esi ; ret 0x7401
0x0000000000486d3e : mov dh, 0x55 ; sub esi, esi ; ret 0x7502
0x0000000000452702 : mov dh, 0x57 ; add dword ptr [rcx], eax ; ret 0x6348
0x000000000044fd2f : mov dh, 0x78 ; adc al, 0x89 ; ret 0x2944
0x0000000000404544 : mov dh, 0x8c ; and al, 0x8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000432018 : mov dh, 0xc0 ; cmovl eax, r8d ; ret
0x000000000041b40c : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x0000000000408ca6 : mov dh, 0xc0 ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040c0ec : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000479510 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000403818 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000409fa7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b3cf : mov dh, 0xc0 ; pop rbx ; ret
0x000000000040a2bf : mov dh, 0xc0 ; ret
0x000000000046f54b : mov dh, 0xc2 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000044ca3e : mov dh, 0xc2 ; ret
0x00000000004362f6 : mov dh, 0xc4 ; sub dword ptr [rax], eax ; test rax, rax ; je 0x43630a ; call rax
0x0000000000412279 : mov dh, 0xca ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x000000000040a6fe : mov dh, 0xd2 ; add eax, edx ; ret
0x00000000004326fc : mov dh, 0xd2 ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000401d71 : mov dh, 0xdb ; or word ptr [rax + 2], bx ; pop rbx ; ret
0x000000000041b662 : mov dh, 0xf6 ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000047fa99 : mov dh, 0xfb ; dec dword ptr [rax - 0x77] ; ret 0x13e9
0x000000000047fb2e : mov dh, 0xfb ; dec dword ptr [rax - 0x77] ; ret 0x7ee9
0x00000000004ad325 : mov dh, 0xfd ; call rbx
0x000000000040203b : mov dh, 1 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004020c2 : mov dh, 1 ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000004252ad : mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x8401
0x00000000004146bd : mov dh, 4 ; adc byte ptr [rcx], al ; clc ; ret
0x00000000004146a3 : mov dh, 4 ; adc byte ptr [rcx], al ; ret
0x000000000040df6e : mov dh, 4 ; add al, byte ptr [rax] ; mov dword ptr [rcx], esi ; pop rbx ; pop rbp ; ret
0x000000000040df7c : mov dh, 4 ; add al, byte ptr [rax] ; mov dword ptr [rcx], esi ; ret
0x00000000004afbe6 : mov dh, 4 ; ret
0x000000000041ba72 : mov dh, 7 ; add eax, eax ; cmp esi, eax ; jl 0x41ba59 ; ret
0x000000000041bab8 : mov dh, 7 ; add eax, eax ; cmp esi, eax ; jl 0x41ba99 ; ret
0x00000000004b710d : mov dh, bh ; call qword ptr [rax]
0x00000000004a78d5 : mov dh, bh ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004b5c45 : mov dh, ch ; call rax
0x00000000004c17d1 : mov dh, dh ; jmp qword ptr [rdi]
0x00000000004b6805 : mov dh, dh ; jmp rax
0x000000000043c41d : mov dl, 0x48 ; mov eax, dword ptr [rbp + 0x10] ; jmp 0x43c3ed
0x000000000041af2f : mov dl, 0xe8 ; retf
0x00000000004cb109 : mov dl, 0xfb ; call rdi
0x000000000045256c : mov dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b082c : mov dl, 3 ; syscall
0x00000000004095ed : mov dword ptr [r10 + 0x14], eax ; ret
0x000000000040a5c0 : mov dword ptr [r10 + 0x5c], eax ; ret
0x000000000040b6c0 : mov dword ptr [r10], eax ; mov eax, esi ; pop rbx ; ret
0x00000000004122e2 : mov dword ptr [r12], ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e397 : mov dword ptr [r14], eax ; mov qword ptr [r13], rdx ; jmp 0x40e373
0x00000000004176c6 : mov dword ptr [r8 + 0x16], eax ; ret
0x000000000040b3df : mov dword ptr [r8 + 0xa], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040947d : mov dword ptr [r8 + 4], r9d ; ret
0x000000000040947a : mov dword ptr [r8], r10d ; mov dword ptr [r8 + 4], r9d ; ret
0x0000000000409290 : mov dword ptr [rax + 0x10], 0 ; ret
0x0000000000456b53 : mov dword ptr [rax + 0x10], ecx ; ret
0x0000000000408e47 : mov dword ptr [rax + 0x10], edi ; ret
0x0000000000411ce1 : mov dword ptr [rax + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041917e : mov dword ptr [rax + 0x10], edx ; ret
0x000000000040cb93 : mov dword ptr [rax + 0x138], esi ; xor eax, eax ; ret
0x00000000004176c7 : mov dword ptr [rax + 0x16], eax ; ret
0x00000000004136ca : mov dword ptr [rax + 0x30], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040543b : mov dword ptr [rax + 0x40], 0x405918 ; nop ; pop rbp ; ret
0x000000000040cc86 : mov dword ptr [rax + 0x48], edx ; xor eax, eax ; ret
0x000000000041d47c : mov dword ptr [rax + 0x60], 0xb8f12d00 ; ret
0x0000000000419157 : mov dword ptr [rax + 0xa0], edx ; ret
0x000000000040b3e0 : mov dword ptr [rax + 0xa], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040947e : mov dword ptr [rax + 4], ecx ; ret
0x0000000000456b4d : mov dword ptr [rax + 8], eax ; xor eax, eax ; mov qword ptr [r8 + 0x10], r9 ; ret
0x0000000000421491 : mov dword ptr [rax + 8], ecx ; add rsp, 0x18 ; ret
0x0000000000414785 : mov dword ptr [rax + 8], edx ; ret
0x0000000000407b08 : mov dword ptr [rax + rax], ebp ; nop dword ptr [rax + rax] ; ret
0x000000000044517e : mov dword ptr [rax + rdx*8], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040b49b : mov dword ptr [rax - 0x14], edi ; cmp rax, rsi ; jne 0x40b47a ; ret
0x00000000004b0ed0 : mov dword ptr [rax], 0x1103ae ; ret
0x0000000000436566 : mov dword ptr [rax], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408e35 : mov dword ptr [rax], edi ; je 0x408e45 ; ret
0x000000000040947b : mov dword ptr [rax], edx ; mov dword ptr [r8 + 4], r9d ; ret
0x0000000000415fa3 : mov dword ptr [rbp + 0x24], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420297 : mov dword ptr [rbp + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044040e : mov dword ptr [rbp + rdi*8 - 0x76bb0001], eax ; fsubr st(1) ; ret 0xfffd
0x00000000004071d2 : mov dword ptr [rbp - 0x10], esi ; mov eax, 1 ; pop rbp ; ret
0x000000000043676a : mov dword ptr [rbp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000425ad0 : mov dword ptr [rbp], edi ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004258ee : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e39b : mov dword ptr [rbp], edx ; jmp 0x40e36f
0x000000000042b770 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041211b : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004291ad : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411137 : mov dword ptr [rbx + 0x14], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004132b4 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000414028 : mov dword ptr [rbx + 0x18], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047ad38 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000041cd24 : mov dword ptr [rbx + 0x20], eax ; mov eax, 0x80a ; pop rbx ; ret
0x000000000040fb9d : mov dword ptr [rbx + 0x20], edx ; pop r12 ; pop r13 ; ret
0x0000000000413f9d : mov dword ptr [rbx + 0x20], edx ; pop rbx ; ret
0x000000000041505f : mov dword ptr [rbx + 0x24], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413581 : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000416a7f : mov dword ptr [rbx + 0x3c], eax ; pop rbx ; ret
0x000000000042cdeb : mov dword ptr [rbx + 0x3c], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416ab6 : mov dword ptr [rbx + 0x40], 0 ; call 0x412d59
0x0000000000454a42 : mov dword ptr [rbx + 0x40], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414f6d : mov dword ptr [rbx + 0x58], 0 ; pop rbx ; ret
0x0000000000419409 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438f39 : mov dword ptr [rbx + 0x68], ecx ; pop rbx ; ret
0x0000000000416741 : mov dword ptr [rbx + 0x74], 0xffffffff ; pop rbx ; ret
0x0000000000416400 : mov dword ptr [rbx + 0xb8], edx ; pop rbx ; ret
0x0000000000421089 : mov dword ptr [rbx + 8], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041ffbb : mov dword ptr [rbx + 8], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042aa69 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000417a10 : mov dword ptr [rbx + 8], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000415f68 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042017b : mov dword ptr [rbx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420221 : mov dword ptr [rbx + 8], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044e57e : mov dword ptr [rbx + rdx*2 + 0x70], eax ; xor eax, eax ; pop rbx ; ret
0x000000000044e321 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000430314 : mov dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004260cd : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b2d7 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000408ca8 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004253e5 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000042fdf6 : mov dword ptr [rbx], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042518a : mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000004950b7 : mov dword ptr [rcx + 0x18], eax ; mov qword ptr [rcx + 0x48], r13 ; call 0x401b39
0x00000000004950bb : mov dword ptr [rcx + 0x48], ebp ; call 0x401b35
0x000000000040cb12 : mov dword ptr [rcx + 0x68], edx ; ret
0x0000000000455bfd : mov dword ptr [rcx + 0x70], eax ; xor eax, eax ; ret
0x00000000004ae18c : mov dword ptr [rcx], 0x1c80102 ; add byte ptr [rcx], al ; retf 0x201
0x000000000040bc40 : mov dword ptr [rcx], 0x41104f6 ; jne 0x40bc41 ; ret
0x0000000000497a31 : mov dword ptr [rcx], 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040bed8 : mov dword ptr [rcx], 0x81104f6 ; jne 0x40bed9 ; ret
0x000000000046ddd3 : mov dword ptr [rcx], 0x850fc085 ; ret
0x0000000000443f5f : mov dword ptr [rcx], 0xfff7eae8 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041ba12 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000437ab7 : mov dword ptr [rcx], ebp ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000414782 : mov dword ptr [rcx], edx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000040df73 : mov dword ptr [rcx], esi ; pop rbx ; pop rbp ; ret
0x000000000040df81 : mov dword ptr [rcx], esi ; ret
0x000000000041ba11 : mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x000000000040ebab : mov dword ptr [rdi + 0x10], eax ; xor eax, eax ; ret
0x000000000040eb9d : mov dword ptr [rdi + 0x10], edx ; ret
0x000000000040b402 : mov dword ptr [rdi + 0x12], ecx ; jmp 0x40b3ce
0x000000000041d6d8 : mov dword ptr [rdi + 0x14], eax ; je 0x41d6e5 ; ret
0x00000000004a4733 : mov dword ptr [rdi + 0x18], eax ; jmp 0x4a46ff
0x000000000040910c : mov dword ptr [rdi + 0x24], ecx ; ret
0x0000000000408f82 : mov dword ptr [rdi + 0x2c], edx ; ret
0x000000000040e2e5 : mov dword ptr [rdi + 0x34], esi ; ret
0x000000000041917b : mov dword ptr [rdi + 0x7c], ecx ; mov dword ptr [rax + 0x10], edx ; ret
0x0000000000411629 : mov dword ptr [rdi + 0xc], eax ; cmovge ecx, edx ; mov dword ptr [rdi + 8], ecx ; ret
0x000000000042ffb3 : mov dword ptr [rdi + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420fc1 : mov dword ptr [rdi + 8], eax ; mov eax, 7 ; ret
0x000000000042933e : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x000000000041b498 : mov dword ptr [rdi + 8], eax ; ret
0x000000000042a4ba : mov dword ptr [rdi + 8], eax ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041162f : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000429e6e : mov dword ptr [rdi + 8], edx ; pop rbx ; ret
0x00000000004211fe : mov dword ptr [rdi + 8], edx ; ret
0x0000000000419234 : mov dword ptr [rdi + rcx*4 + 0x28], esi ; ret
0x0000000000429e6b : mov dword ptr [rdi], eax ; mov word ptr [rdi + 8], dx ; pop rbx ; ret
0x00000000004114ca : mov dword ptr [rdi], eax ; ret
0x0000000000432390 : mov dword ptr [rdi], ecx ; or eax, 4 ; mov word ptr [rdi + 8], ax ; ret
0x00000000004147c1 : mov dword ptr [rdi], edx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004147b5 : mov dword ptr [rdi], edx ; ret
0x000000000042933b : mov dword ptr [rdi], esi ; mov word ptr [rdi + 8], ax ; pop rbx ; ret
0x00000000004210c4 : mov dword ptr [rdi], esi ; mov word ptr [rdi + 8], ax ; ret
0x00000000004318c2 : mov dword ptr [rdi], esi ; mov word ptr [rdi + 8], dx ; pop rbx ; ret
0x000000000049550c : mov dword ptr [rdx + 0x10], 0 ; pop rbx ; ret
0x0000000000407a5d : mov dword ptr [rdx + 0x10], eax ; ret
0x00000000004095ee : mov dword ptr [rdx + 0x14], eax ; ret
0x0000000000417790 : mov dword ptr [rdx + 0x16], eax ; pop rbx ; pop rbp ; ret
0x0000000000417856 : mov dword ptr [rdx + 0x16], eax ; ret
0x000000000040b202 : mov dword ptr [rdx + 0x288], eax ; ret
0x000000000040a5c1 : mov dword ptr [rdx + 0x5c], eax ; ret
0x000000000041072f : mov dword ptr [rdx + 0xc], eax ; mov word ptr [rdx + 8], cx ; ret
0x000000000041fa1e : mov dword ptr [rdx + 8], 1 ; pop rbx ; ret
0x00000000004105d9 : mov dword ptr [rdx + 8], eax ; mov eax, 8 ; ret
0x0000000000410624 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000042b2b4 : mov dword ptr [rdx + 8], ecx ; jne 0x42b2c9 ; mov rax, rbx ; pop rbx ; ret
0x000000000041070b : mov dword ptr [rdx + 8], ecx ; mov eax, 6 ; ret
0x0000000000410733 : mov dword ptr [rdx + 8], ecx ; ret
0x000000000041063a : mov dword ptr [rdx + 8], edx ; ret
0x0000000000410639 : mov dword ptr [rdx + 8], r10d ; ret
0x000000000040e3ba : mov dword ptr [rdx + rsi], edi ; ret
0x000000000041b8c3 : mov dword ptr [rdx], 1 ; ret
0x0000000000410650 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000041067a : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004106a7 : mov dword ptr [rdx], eax ; mov eax, 3 ; ret
0x00000000004106dc : mov dword ptr [rdx], eax ; mov eax, 4 ; ret
0x00000000004070f8 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000040b6c1 : mov dword ptr [rdx], eax ; mov eax, esi ; pop rbx ; ret
0x00000000004076dc : mov dword ptr [rdx], eax ; nop ; pop rbp ; ret
0x0000000000409828 : mov dword ptr [rdx], eax ; shr r9d, 1 ; jne 0x409810 ; ret
0x0000000000405731 : mov dword ptr [rdx], ecx ; call 0x401965
0x0000000000409827 : mov dword ptr [rdx], r8d ; shr r9d, 1 ; jne 0x409811 ; ret
0x00000000004095b0 : mov dword ptr [rip + 0x2c6f6e], edi ; xor eax, eax ; ret
0x0000000000407a6d : mov dword ptr [rip + 0x2cad4d], eax ; ret
0x000000000042062b : mov dword ptr [rsi + 0x10], edx ; mov byte ptr [rsi + 1], cl ; je 0x420659 ; ret
0x0000000000420658 : mov dword ptr [rsi + 0x10], edx ; mov byte ptr [rsi + 1], cl ; ret
0x000000000040e0ce : mov dword ptr [rsi + 0x28], 0 ; xor eax, eax ; ret
0x000000000040ecc0 : mov dword ptr [rsi + 0x28], 1 ; xor eax, eax ; ret
0x000000000040ec8b : mov dword ptr [rsi + 0x28], 3 ; xor eax, eax ; ret
0x000000000040e940 : mov dword ptr [rsi + 0x3c], 1 ; xor eax, eax ; ret
0x0000000000408c80 : mov dword ptr [rsi], 0 ; xor eax, eax ; ret
0x000000000040c005 : mov dword ptr [rsi], 0x1b ; add eax, 1 ; ret
0x000000000040b8c8 : mov dword ptr [rsi], 0x1b ; ret
0x000000000040bffb : mov dword ptr [rsi], 0x61 ; add eax, 1 ; ret
0x000000000040bc00 : mov dword ptr [rsi], 0x9f ; ret
0x000000000040be2b : mov dword ptr [rsi], 0xa0 ; mov eax, edx ; ret
0x000000000040be68 : mov dword ptr [rsi], 0xa0 ; ret
0x0000000000408981 : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000040893e : mov dword ptr [rsi], eax ; mov eax, 2 ; ret
0x0000000000408972 : mov dword ptr [rsi], eax ; mov eax, 3 ; ret
0x00000000004089ba : mov dword ptr [rsi], eax ; mov eax, 4 ; ret
0x000000000040d02e : mov dword ptr [rsi], eax ; mov eax, 5 ; ret
0x0000000000408a27 : mov dword ptr [rsi], eax ; mov eax, 6 ; ret
0x0000000000408a5a : mov dword ptr [rsi], eax ; mov eax, 7 ; ret
0x0000000000408a8c : mov dword ptr [rsi], eax ; mov eax, 8 ; ret
0x0000000000408ac0 : mov dword ptr [rsi], eax ; mov eax, 9 ; ret
0x000000000040e398 : mov dword ptr [rsi], eax ; mov qword ptr [r13], rdx ; jmp 0x40e372
0x0000000000409eb5 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000040f269 : mov dword ptr [rsi], edx ; mov eax, 1 ; ret
0x00000000004089f9 : mov dword ptr [rsi], edx ; ret
0x000000000040cfcf : mov dword ptr [rsi], edx ; sub eax, edi ; ret
0x0000000000479efd : mov dword ptr [rsi], esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046b6b2 : mov dword ptr [rsp + 0x10], ecx ; mov rdi, r12 ; call rax
0x000000000041219c : mov dword ptr [rsp + 0x28], eax ; call r9
0x00000000004166d6 : mov dword ptr [rsp + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045552f : mov dword ptr [rsp + 0x30], eax ; call 0x412016
0x000000000048e623 : mov dword ptr [rsp + 0x30], ebx ; call 0x43b0c6
0x000000000046fcc0 : mov dword ptr [rsp + 0x38], eax ; call 0x41bee6
0x000000000048e70c : mov dword ptr [rsp + 0xd0], eax ; jmp 0x48b1f9
0x000000000046aeae : mov dword ptr [rsp + 8], eax ; call 0x4170f6
0x0000000000415b77 : mov dword ptr [rsp + 8], eax ; call rdx
0x0000000000447099 : mov dword ptr [rsp + 8], edi ; call 0x423336
0x000000000041587e : mov dword ptr [rsp + 8], edi ; call rax
0x000000000043863d : mov dword ptr [rsp], eax ; call rsi
0x00000000004122e3 : mov dword ptr [rsp], ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040578d : mov eax, 0 ; call 0x401a47
0x000000000040586e : mov eax, 0 ; call 0x401b27
0x0000000000408cb0 : mov eax, 0x1000 ; ret
0x000000000041ba20 : mov eax, 0x10b ; ret
0x00000000004377fd : mov eax, 0x12 ; add rsp, 8 ; ret
0x000000000040ddf4 : mov eax, 0x12 ; pop rbx ; pop rbp ; ret
0x000000000042a11c : mov eax, 0x12 ; pop rbx ; ret
0x0000000000420120 : mov eax, 0x12 ; ret
0x000000000043648d : mov eax, 0x15 ; pop rbx ; ret
0x000000000046b07c : mov eax, 0x15 ; ret
0x00000000004b5538 : mov eax, 0x26000030 ; hlt ; hlt ; call qword ptr [rax]
0x000000000040c4f0 : mov eax, 0x2df1b8 ; ret
0x00000000004b5684 : mov eax, 0x30fff520 ; add byte ptr ss:[rax], al ; retf
0x00000000004b6090 : mov eax, 0x40000069 ; loopne 0x4b6093 ; call rax
0x000000000040f667 : mov eax, 0x41 ; jg 0x40f688 ; pop rbx ; ret
0x000000000040f666 : mov eax, 0x41 ; jg 0x40f689 ; pop rbx ; ret
0x000000000040f675 : mov eax, 0x41 ; pop rbx ; cmovne eax, edx ; ret
0x000000000040f680 : mov eax, 0x43 ; pop rbx ; ret
0x00000000004b5a18 : mov eax, 0x44 ; pop rax ; cmc ; call rax
0x0000000000416402 : mov eax, 0x5b000000 ; ret
0x00000000004b7600 : mov eax, 0x700000f7 ; clc ; call qword ptr [rax]
0x00000000004b7dc0 : mov eax, 0x7000013f ; add ebx, edi ; call qword ptr [rax]
0x000000000041cd27 : mov eax, 0x80a ; pop rbx ; ret
0x000000000045863b : mov eax, 0x83000000 ; ret
0x0000000000415828 : mov eax, 0x89000000 ; ret 0x8b49
0x0000000000435184 : mov eax, 0xb ; add rsp, 8 ; ret
0x000000000043573b : mov eax, 0xb ; pop rbx ; pop rbp ; ret
0x000000000044e316 : mov eax, 0xb ; pop rbx ; ret
0x00000000004b5cb0 : mov eax, 0xc0000052 ; xchg eax, ebx ; cmc ; call rax
0x00000000004b8218 : mov eax, 0xc000016c ; adc esi, edi ; call rax
0x00000000004b5ac0 : mov eax, 0xe0000048 ; jo 0x4b5ac3 ; call rax
0x00000000004b7f10 : mov eax, 0xe000014a ; test bl, bh ; call rax
0x0000000000489f78 : mov eax, 0xf000001 ; ret 0x8341
0x00000000004b7f58 : mov eax, 0xf000014c ; xchg eax, ebp ; sti ; call rax
0x0000000000407c6e : mov eax, 0xfffd ; ret
0x0000000000438e4e : mov eax, 0xffffffff ; jmp 0x438e26
0x0000000000404d42 : mov eax, 0xffffffff ; leave ; ret
0x000000000040a618 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000407d26 : mov eax, 0xffffffff ; ret
0x000000000040c5c6 : mov eax, 1 ; add rsp, 8 ; ret
0x000000000041b183 : mov eax, 1 ; jne 0x41b197 ; ret
0x0000000000405911 : mov eax, 1 ; leave ; ret
0x0000000000420588 : mov eax, 1 ; mov byte ptr [rbx], 0xa0 ; pop rbx ; ret
0x000000000042121b : mov eax, 1 ; mov word ptr [rdi + 8], ax ; ret
0x0000000000419b01 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000041a11a : mov eax, 1 ; pop rbp ; pop r14 ; ret
0x00000000004071d5 : mov eax, 1 ; pop rbp ; ret
0x000000000040dea6 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418126 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000401e77 : mov eax, 1 ; ret
0x0000000000419d18 : mov eax, 1 ; shl rax, cl ; ret
0x000000000041b1d8 : mov eax, 1 ; sub eax, edx ; ret
0x000000000042155f : mov eax, 2 ; pop rbp ; pop r12 ; ret
0x0000000000408940 : mov eax, 2 ; ret
0x0000000000408974 : mov eax, 3 ; ret
0x00000000004089bc : mov eax, 4 ; ret
0x000000000040d030 : mov eax, 5 ; ret
0x0000000000408a29 : mov eax, 6 ; ret
0x0000000000420ff9 : mov eax, 7 ; add rsp, 8 ; ret
0x00000000004484aa : mov eax, 7 ; jmp 0x44847a
0x000000000041dbf5 : mov eax, 7 ; pop rbp ; pop r12 ; ret
0x00000000004291e8 : mov eax, 7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044553b : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000042b578 : mov eax, 7 ; pop rbx ; ret
0x0000000000408a5c : mov eax, 7 ; ret
0x00000000004105c5 : mov eax, 8 ; pop rbx ; ret
0x0000000000407b80 : mov eax, 8 ; ret
0x0000000000408ac2 : mov eax, 9 ; ret
0x00000000004292fb : mov eax, dword ptr [rax + 0x10] ; ret
0x0000000000417681 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x417678 ; ret
0x00000000004199bf : mov eax, dword ptr [rax + 0x14] ; pop rbp ; pop r12 ; ret
0x0000000000409551 : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000041656d : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004099d4 : mov eax, dword ptr [rax + 0x28] ; ret
0x0000000000416437 : mov eax, dword ptr [rax + 0x30] ; jmp rax
0x000000000040e2c8 : mov eax, dword ptr [rax + 0x50] ; add dword ptr [rdx + 0xc], eax ; xor eax, eax ; ret
0x00000000004163ec : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x416408 ; call rax
0x000000000044b337 : mov eax, dword ptr [rax + 0x58] ; test rax, rax ; je 0x44b357 ; call rax
0x000000000041675e : mov eax, dword ptr [rax + 0x70] ; jmp rax
0x0000000000409a24 : mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000403423 : mov eax, dword ptr [rax + 8] ; mov rdi, qword ptr [rax] ; call 0x40f658
0x00000000004099c5 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000407a10 : mov eax, dword ptr [rax + rdi*8] ; ret
0x0000000000409aa6 : mov eax, dword ptr [rax + rsi*8 - 8] ; ret
0x0000000000412671 : mov eax, dword ptr [rax + rsi] ; test rax, rax ; je 0x412683 ; call rax
0x0000000000405087 : mov eax, dword ptr [rax] ; mov edi, eax ; call 0x401a96
0x000000000043c41f : mov eax, dword ptr [rbp + 0x10] ; jmp 0x43c3eb
0x0000000000405084 : mov eax, dword ptr [rbp - 0x10] ; mov eax, dword ptr [rax] ; mov edi, eax ; call 0x401a99
0x00000000004070fa : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x00000000004070f5 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000410fa1 : mov eax, dword ptr [rbp] ; sub eax, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000429290 : mov eax, dword ptr [rbx + 0x10] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000042fb44 : mov eax, dword ptr [rbx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413b0a : mov eax, dword ptr [rbx + 0x10] ; pop rbx ; ret
0x0000000000412198 : mov eax, dword ptr [rbx + 0x28] ; mov qword ptr [rsp + 0x28], rax ; call r9
0x00000000004364a3 : mov eax, dword ptr [rbx + 0x44] ; and eax, dword ptr [rbx + 0x48] ; pop rbx ; ret
0x0000000000436523 : mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x000000000046aa01 : mov eax, dword ptr [rbx + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049c441 : mov eax, dword ptr [rbx + 0x50] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000419ab2 : mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x0000000000419aa1 : mov eax, dword ptr [rbx + 0x60] ; ret
0x000000000042fbd2 : mov eax, dword ptr [rbx + 0xc] ; pop rbx ; ret
0x00000000004152df : mov eax, dword ptr [rbx] ; sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x0000000000409a21 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000407a59 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000000000409eb1 : mov eax, dword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000040ea00 : mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000040eba8 : mov eax, dword ptr [rdi + 0x14] ; mov dword ptr [rdi + 0x10], eax ; xor eax, eax ; ret
0x0000000000415f00 : mov eax, dword ptr [rdi + 0x14] ; test eax, eax ; jne 0x415f18 ; ret
0x0000000000415f40 : mov eax, dword ptr [rdi + 0x14] ; test eax, eax ; jne 0x415f57 ; ret
0x000000000040c511 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000409ec5 : mov eax, dword ptr [rdi + 0x28] ; add byte ptr [rsi + 0x38], al ; xor eax, eax ; ret
0x00000000004090a0 : mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000040d9c1 : mov eax, dword ptr [rdi + 0x30] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000044d191 : mov eax, dword ptr [rdi + 0x30] ; pop rbp ; pop r12 ; ret
0x000000000040c551 : mov eax, dword ptr [rdi + 0x30] ; ret
0x0000000000409840 : mov eax, dword ptr [rdi + 0x34] ; ret
0x0000000000409850 : mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000044f260 : mov eax, dword ptr [rdi + 0x50] ; pop rbx ; ret
0x000000000040c560 : mov eax, dword ptr [rdi + 0x60] ; ret
0x000000000040c570 : mov eax, dword ptr [rdi + 0x64] ; ret
0x0000000000409a75 : mov eax, dword ptr [rdi + 0x78] ; ret
0x000000000040dcd0 : mov eax, dword ptr [rdi + 0x88] ; ret
0x000000000042fc20 : mov eax, dword ptr [rdi + 0xc] ; ret
0x0000000000409866 : mov eax, dword ptr [rdi + 0xe0] ; ret
0x0000000000409cfc : mov eax, dword ptr [rdi + 4] ; ret
0x000000000041b6a0 : mov eax, dword ptr [rdi + 8] ; imul eax, dword ptr [rdi + 0xc] ; ret
0x000000000040ebe0 : mov eax, dword ptr [rdi + 8] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000004099c1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041b698 : mov eax, dword ptr [rdi + 8] ; ret
0x0000000000408d96 : mov eax, dword ptr [rdi + rax*4 + 0x10] ; test eax, eax ; jne 0x408d81 ; ret
0x0000000000407ae1 : mov eax, dword ptr [rdi - 8] ; ret
0x000000000042fc09 : mov eax, dword ptr [rdi] ; add eax, dword ptr [rdi + 0xc] ; ret
0x00000000004281b1 : mov eax, dword ptr [rdi] ; lea edx, [rax + 1] ; mov dword ptr [rdi], edx ; ret
0x000000000041d47a : mov eax, dword ptr [rdi] ; mov dword ptr [rax + 0x60], 0xb8f12d00 ; ret
0x000000000041656a : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004099d1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000416434 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000409ac6 : mov eax, dword ptr [rdi] ; ret
0x0000000000407a49 : mov eax, dword ptr [rdx + 0x10] ; test rax, rax ; jne 0x407a49 ; ret
0x000000000040cd0f : mov eax, dword ptr [rdx + 0xd0] ; ret
0x0000000000414411 : mov eax, dword ptr [rsi + 0x20] ; test rax, rax ; je 0x414428 ; ret
0x000000000041b418 : mov eax, dword ptr [rsi] ; sub eax, dword ptr [rdi] ; ret
0x0000000000425eaf : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000004a19b3 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000048e94e : mov eax, dword ptr [rsp + 0x38] ; jmp 0x48ab87
0x0000000000402671 : mov eax, dword ptr [rsp + 0x38] ; jne 0x402687 ; jmp 0x40264b
0x0000000000447ab9 : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004109fb : mov eax, dword ptr [rsp + 8] ; jmp 0x4109c9
0x0000000000437918 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043204b : mov eax, eax ; neg eax ; ret
0x0000000000431fe8 : mov eax, eax ; sub eax, ecx ; ret
0x000000000042dc8c : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044d14a : mov eax, ebp ; je 0x44d160 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e130 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040c80b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042144d : mov eax, ebp ; pop rbp ; ret
0x0000000000402007 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411e2f : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c623 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a10b4 : mov eax, ebp ; pop rdx ; je 0x4a10c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401fa7 : mov eax, ebp ; pop rdx ; pop rbx ; pop rbp ; ret
0x000000000042153b : mov eax, ebx ; and eax, 2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c073 : mov eax, ebx ; jne 0x41c086 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040a772 : mov eax, ebx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004138ab : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004020c5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409b68 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000410dea : mov eax, ebx ; pop rbx ; ret
0x0000000000438ec4 : mov eax, ebx ; ret
0x0000000000417c31 : mov eax, ecx ; add rax, qword ptr [rdi] ; ret
0x0000000000409301 : mov eax, ecx ; add rsp, 0x18 ; ret
0x000000000040a60d : mov eax, ecx ; pop rbx ; ret
0x0000000000408bda : mov eax, ecx ; ret
0x000000000040e066 : mov eax, edi ; mov dword ptr [rsi], edx ; ret
0x000000000040b564 : mov eax, edi ; ret
0x0000000000410f43 : mov eax, edx ; je 0x410f59 ; mov eax, 1 ; ret
0x00000000004113a3 : mov eax, edx ; je 0x4113b9 ; mov eax, 1 ; ret
0x000000000040bbbd : mov eax, edx ; jne 0x40be0e ; ret
0x000000000046da86 : mov eax, edx ; jne 0x46dacd ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000418456 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412d1a : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000402741 : mov eax, edx ; pop rbx ; ret
0x0000000000402745 : mov eax, edx ; ret
0x0000000000413b57 : mov eax, esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041e750 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000049c849 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000040b6c3 : mov eax, esi ; pop rbx ; ret
0x000000000040b6e0 : mov eax, esi ; ret
0x00000000004029ac : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041c580 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c52d : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040291f : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438eba : mov eax, r11d ; pop rbx ; pop rbp ; ret
0x0000000000438ec3 : mov eax, r11d ; ret
0x000000000041c57f : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c52c : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413eb8 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402006 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043204a : mov eax, r8d ; neg eax ; ret
0x0000000000431fe7 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000040a60c : mov eax, r9d ; pop rbx ; ret
0x0000000000405b72 : mov ebp, 0x1b8ffff ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046b97b : mov ebp, 0x213 ; call rax
0x0000000000416052 : mov ebp, 0x5d5be889 ; pop r12 ; ret
0x000000000046f407 : mov ebp, 0x89480003 ; ret 0x894c
0x0000000000405c5b : mov ebp, 0x8948ffff ; ret 0x8b48
0x00000000004b137d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000409b19 : mov ebp, 0xc3c0940f ; nop ; ret
0x00000000004a47d9 : mov ebp, 7 ; jmp 0x4a47b1
0x0000000000497a98 : mov ebp, dword ptr [rsp + 0x24] ; call 0x423d56
0x000000000044f358 : mov ebp, eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000426dd3 : mov ebp, edi ; jmp 0x426d9d
0x0000000000429a11 : mov ebp, edi ; test rax, rax ; je 0x429a21 ; call rax
0x00000000004b88f8 : mov ebp, edx ; hlt ; call qword ptr [rbx]
0x000000000040485c : mov ebp, esp ; call rax
0x000000000046fbfb : mov ebx, 0x1a0 ; call rcx
0x00000000004b137b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000048e55e : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x48afab
0x000000000048ed30 : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x48b022
0x000000000048e5fa : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x48b02f
0x000000000048ee1e : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x48b0a4
0x00000000004a6b86 : mov ebx, eax ; jne 0x4a6b50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c60d : mov ebx, edi ; mov rdi, qword ptr [rdi + 8] ; call rax
0x0000000000445968 : mov ebx, edi ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000042a0e6 : mov ebx, edx ; cmp rax, -3 ; ja 0x42a0f8 ; call rsi
0x00000000004c3f05 : mov ecx, 0x23c80000 ; idiv edi ; ret 0
0x0000000000435a74 : mov ecx, 0x53ba0007 ; fild word ptr [rax] ; add bl, ch ; ret
0x0000000000491bd3 : mov ecx, 0x85fffa70 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000049b695 : mov ecx, 0x8948fffa ; ret
0x0000000000437f33 : mov ecx, 0x8948fffd ; ret
0x000000000042d393 : mov ecx, 0x8d000000 ; push rsi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000416793 : mov ecx, 0xa ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x00000000004afa84 : mov ecx, 0xd1ffd1ff ; call rcx
0x00000000004a0873 : mov ecx, 0xe9fffce1 ; ret
0x0000000000475000 : mov ecx, 6 ; jmp 0x474fd8
0x0000000000416813 : mov ecx, 9 ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x000000000045e96b : mov ecx, dword ptr [r15 + 0x40] ; call 0x40b426
0x0000000000438cc0 : mov ecx, dword ptr [rbx + 0x238] ; call r10
0x000000000045e96c : mov ecx, dword ptr [rdi + 0x40] ; call 0x40b425
0x00000000004c4efb : mov ecx, dword ptr [rdx] ; ret
0x000000000047d674 : mov ecx, dword ptr [rsp + 8] ; mov rsi, rax ; call 0x469939
0x0000000000472d5e : mov ecx, eax ; mov byte ptr [rbx + 0xa], 1 ; jmp 0x46f846
0x000000000041b0bd : mov ecx, esi ; mov rdx, r13 ; call r12
0x0000000000410600 : mov ecx, esi ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000041b0bc : mov ecx, r14d ; mov rdx, r13 ; call r12
0x0000000000495dea : mov edi, 0x39413c47 ; ret 0x840f
0x000000000043ed39 : mov edi, 0x39664448 ; retf 0x8d0f
0x000000000040572f : mov edi, 0x4a899b ; call 0x401967
0x000000000047836e : mov edi, 0x53e9ffff ; retf 0xffff
0x000000000044674d : mov edi, 0x5c415d5b ; ret
0x0000000000411cab : mov edi, 0x64 ; call rax
0x00000000004047c0 : mov edi, 0x6d2200 ; jmp rax
0x000000000041e078 : mov edi, 0x801f0f ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000493ec9 : mov edi, 0x83481004 ; ret 0x4802
0x000000000042ad43 : mov edi, 0x89000000 ; retf 0x860f
0x0000000000483acd : mov edi, 0x89fff9d4 ; ret
0x0000000000414684 : mov edi, 0x8df089d6 ; xor qword ptr [r9], r15 ; retf 0x197f
0x0000000000414669 : mov edi, 0x8df889d7 ; xor qword ptr [rcx], r15 ; retf 0x347f
0x000000000047d26f : mov edi, 0xc0833e4e ; add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x000000000047bc22 : mov edi, 0xc5833e45 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000411ecc : mov edi, 0xc8 ; call rax
0x0000000000418442 : mov edi, 0xc9 ; call rax
0x00000000004185ad : mov edi, 0xca ; call rax
0x00000000004b022f : mov edi, 0xcecbcf82 ; adc al, dl ; hlt ; lahf ; ret 0xc245
0x000000000046a5ec : mov edi, 0xe8001f0f ; sti ; retf 0xfffa
0x0000000000438639 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call rsi
0x000000000049b2ce : mov edi, dword ptr [rax + rcx] ; call 0x407dd5
0x000000000044509e : mov edi, dword ptr [rax] ; call 0x401ad4
0x0000000000403427 : mov edi, dword ptr [rax] ; call 0x40f654
0x0000000000485daa : mov edi, dword ptr [rbp + 0x28] ; call 0x412015
0x000000000048fc37 : mov edi, dword ptr [rbp] ; call 0x42bf25
0x000000000041b98c : mov edi, dword ptr [rbx + 0x18] ; call rax
0x000000000046fbfa : mov edi, dword ptr [rbx + 0x1a0] ; call rcx
0x0000000000415dff : mov edi, dword ptr [rbx + 0x38] ; call 0x412015
0x0000000000415df6 : mov edi, dword ptr [rbx + 0x48] ; call 0x412015
0x0000000000445513 : mov edi, dword ptr [rbx + 8] ; call 0x412015
0x00000000004123ea : mov edi, dword ptr [rbx + 8] ; call rax
0x00000000004430e6 : mov edi, dword ptr [rbx + 8] ; xor esi, esi ; call 0x40f377
0x000000000046a311 : mov edi, dword ptr [rbx - 0x10] ; call rax
0x0000000000462075 : mov edi, dword ptr [rbx] ; call 0x41e314
0x000000000041d80d : mov edi, dword ptr [rcx + 0x40] ; call r8
0x00000000004134de : mov edi, dword ptr [rdi + 0x18] ; call rax
0x000000000040c610 : mov edi, dword ptr [rdi + 8] ; call rax
0x00000000004a77dd : mov edi, dword ptr [rip + 0x228c3d] ; call rax
0x00000000004a7789 : mov edi, dword ptr [rip + 0x228ce9] ; call rax
0x00000000004238ad : mov edi, dword ptr [rip + 0x2acbc5] ; call rax
0x00000000004254bf : mov edi, dword ptr [rsi + 0x18] ; call r12
0x0000000000474661 : mov edi, dword ptr [rsi + 0x1a0] ; call rax
0x000000000046a356 : mov edi, dword ptr [rsp + 0x10] ; call rax
0x00000000004a1f96 : mov edi, dword ptr [rsp + 0x120] ; call 0x46ea39
0x00000000004a19ae : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000046a017 : mov edi, dword ptr [rsp + 0x40] ; test rdi, rdi ; je 0x46a03a ; call rax
0x00000000004979f9 : mov edi, dword ptr [rsp + 0x50] ; call 0x4244c6
0x0000000000425eaa : mov edi, dword ptr [rsp + 0x70] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000045dd0c : mov edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call 0x419f89
0x0000000000425863 : mov edi, eax ; add rdx, 0x28 ; call 0x401a88
0x000000000040574d : mov edi, eax ; call 0x401a34
0x0000000000404f7e : mov edi, eax ; call 0x401a84
0x0000000000405089 : mov edi, eax ; call 0x401a94
0x000000000040505f : mov edi, eax ; call 0x401ab4
0x0000000000405150 : mov edi, eax ; call 0x401b84
0x0000000000425d8c : mov edi, eax ; call 0x412014
0x000000000040586c : mov edi, eax ; mov eax, 0 ; call 0x401b29
0x00000000004a4730 : mov edi, eax ; mov qword ptr [r15 + 0x18], rax ; jmp 0x4a4702
0x000000000042aac4 : mov edi, eax ; test rdi, rdi ; jne 0x42aa8f ; pop rbx ; ret
0x00000000004950ca : mov edi, ebp ; call 0x401b34
0x000000000049565b : mov edi, ebp ; call 0x4120c4
0x00000000004496af : mov edi, ebp ; call 0x425974
0x000000000048e63f : mov edi, ebp ; call 0x43b0c4
0x0000000000411edf : mov edi, ebp ; call r12
0x0000000000437779 : mov edi, ebp ; call r14
0x0000000000421679 : mov edi, ebp ; call rax
0x000000000042555f : mov edi, ebp ; cmovne rdx, rax ; call rdx
0x000000000041b11b : mov edi, ebp ; mov esi, r12d ; cmovne rax, rdx ; call rax
0x000000000048e620 : mov edi, ebp ; mov qword ptr [rsp + 0x30], r11 ; call 0x43b0c9
0x0000000000447ab6 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000049cde0 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004a181e : mov edi, ebx ; call 0x40e254
0x00000000004995ba : mov edi, ebx ; call 0x426014
0x00000000004760cf : mov edi, ebx ; call 0x432334
0x000000000044a2f7 : mov edi, ebx ; call qword ptr [rax]
0x00000000004a7f8d : mov edi, ebx ; call r12
0x000000000040de79 : mov edi, ebx ; call rcx
0x000000000041251d : mov edi, ebx ; jne 0x412515 ; pop rbx ; ret
0x0000000000499604 : mov edi, ebx ; sub edx, esi ; add rsi, r13 ; call 0x426019
0x0000000000495d07 : mov edi, ebx ; xor eax, eax ; call 0x441fa6
0x000000000046a6a1 : mov edi, ebx ; xor r12d, r12d ; xor ebp, ebp ; call 0x417119
0x0000000000477457 : mov edi, edi ; call 0x443753
0x0000000000477457 : mov edi, edi ; call 0x443754
0x00000000004787f3 : mov edi, edi ; call 0x455214
0x000000000045552d : mov edi, edi ; mov dword ptr [rsp + 0x30], eax ; call 0x412018
0x000000000047d08b : mov edi, edi ; mov rsi, rbx ; call 0x419b27
0x0000000000422abe : mov edi, edi ; movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000004774e3 : mov edi, edi ; xor eax, eax ; call 0x443756
0x000000000045a14c : mov edi, edx ; call 0x4163b4
0x00000000004377f8 : mov edi, edx ; call r8
0x0000000000404cf2 : mov edi, edx ; call rax
0x000000000047419c : mov edi, edx ; jmp 0x4703e4
0x00000000004118bf : mov edi, edx ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000445022 : mov edi, esi ; call 0x401ad4
0x00000000004b7105 : mov edi, esi ; jmp rax
0x0000000000403b07 : mov edi, esp ; call 0x4205e4
0x000000000046b6b7 : mov edi, esp ; call rax
0x0000000000415048 : mov edi, esp ; call rcx
0x000000000046fcbe : mov edi, esp ; mov dword ptr [rsp + 0x38], eax ; call 0x41bee8
0x0000000000455522 : mov edi, r13d ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004af742 : mov edx, 0x15005603 ; add dh, cl ; call qword ptr [rdi]
0x000000000040bcc7 : mov edx, 0x1b ; mov dword ptr [rsi], edx ; ret
0x00000000004c0383 : mov edx, 0x380e0a01 ; ret
0x000000000040f6b8 : mov edx, 0x41 ; cmove eax, edx ; pop rbx ; ret
0x00000000004a8609 : mov edx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045a147 : mov edx, 0x4cfffff3 ; mov edi, edx ; call 0x4163b9
0x0000000000402124 : mov edx, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000043c772 : mov edx, 0x83000001 ; ret 0x4401
0x0000000000435a77 : mov edx, 0xdf53 ; jmp 0x435a47
0x0000000000407c9b : mov edx, 0xfffd ; cmove eax, edx ; ret
0x000000000040273c : mov edx, 1 ; mov eax, edx ; pop rbx ; ret
0x0000000000416758 : mov edx, 1 ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x000000000041b7d0 : mov edx, 1 ; xor eax, edx ; pop rbx ; ret
0x0000000000405748 : mov edx, 4 ; mov edi, eax ; call 0x401a39
0x000000000042146b : mov edx, 4 ; mov word ptr [rdi + 8], dx ; ret
0x000000000048f693 : mov edx, dword ptr [rax + 0x20] ; mov r14d, dword ptr [r12] ; jmp 0x48b8aa
0x00000000004795be : mov edx, dword ptr [rax + rdi] ; call r9
0x000000000043c0d7 : mov edx, dword ptr [rax] ; xor eax, eax ; call 0x438b36
0x0000000000404ceb : mov edx, dword ptr [rbp - 0x18] ; mov rsi, rcx ; mov rdi, rdx ; call rax
0x0000000000407bfe : mov edx, dword ptr [rbx + 0x330] ; add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000042595e : mov edx, dword ptr [rbx] ; mov byte ptr [rdx + 0x19], 1 ; pop rbx ; ret
0x000000000045558a : mov edx, dword ptr [rsp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000440c5f : mov edx, eax ; call 0x42d704
0x000000000042ff16 : mov edx, eax ; jmp 0x42fee8
0x000000000041b0c0 : mov edx, ebp ; call r12
0x0000000000420acc : mov edx, ebx ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000042a677 : mov edx, edx ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000420af0 : mov edx, esi ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000045428e : mov edx, esp ; call 0x450d04
0x00000000004ad7c4 : mov edx, ss ; std ; jmp qword ptr [rsi]
0x000000000043f1fe : mov es, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b66d9 : mov es, word ptr [rax] ; add al, dh ; push -0xa ; jmp qword ptr [rax]
0x00000000004be4d6 : mov es, word ptr [rdx] ; ret
0x0000000000474662 : mov esi, 0x1a0 ; call rax
0x000000000048f5bd : mov esi, 0x34 ; call 0x42b7d7
0x00000000004a6b89 : mov esi, 0x5c415d5b ; ret
0x0000000000456071 : mov esi, 0x63485853 ; retf 0xd089
0x00000000004750c7 : mov esi, 0x63485855 ; retf 0xd089
0x0000000000419621 : mov esi, 0x83480143 ; ret
0x000000000042e05c : mov esi, 0x8348014b ; ret
0x000000000042ecc2 : mov esi, 0x8348024b ; ret
0x000000000042cdc3 : mov esi, 0x83480372 ; ret 0xc604
0x000000000044e2b9 : mov esi, 0x83582444 ; ret
0x0000000000408c02 : mov esi, 0x85002c77 ; sal byte ptr [rbp + 6], cl ; ret
0x00000000004472df : mov esi, 0x89441304 ; ret 0xfac1
0x000000000040f311 : mov esi, 0x89d189c0 ; ret 0xe1c1
0x000000000044e59a : mov esi, 0x8b485843 ; xchg eax, esp ; ret
0x00000000004b137e : mov esi, 0xc2c1c0bf ; ret
0x000000000041ae00 : mov esi, 0xe88348d1 ; add dword ptr [rcx + 0x39], ecx ; ret 0xe575
0x0000000000435504 : mov esi, 0xfcba0007 ; fild word ptr [rax] ; add bl, ch ; ret 0x9066
0x00000000004254ba : mov esi, dword ptr [r14 + 0x20] ; mov rdi, qword ptr [r14 + 0x18] ; call r12
0x0000000000462071 : mov esi, dword ptr [rbp + 0x60] ; mov rdi, qword ptr [rbx] ; call 0x41e318
0x00000000004254bb : mov esi, dword ptr [rsi + 0x20] ; mov rdi, qword ptr [r14 + 0x18] ; call r12
0x00000000004422c4 : mov esi, dword ptr [rsp + 0x10] ; call r14
0x0000000000495656 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call 0x4120c9
0x000000000048d7e9 : mov esi, dword ptr [rsp] ; add rsp, 0x20 ; jmp 0x48a201
0x000000000048d796 : mov esi, dword ptr [rsp] ; jmp 0x48a1fd
0x000000000048f697 : mov esi, dword ptr [rsp] ; jmp 0x48b8a6
0x000000000047d679 : mov esi, eax ; call 0x469934
0x0000000000403b04 : mov esi, eax ; mov rdi, r12 ; call 0x4205e7
0x000000000040ef18 : mov esi, eax ; xor eax, eax ; test edx, edx ; jg 0x40eef1 ; pop rbx ; ret
0x0000000000421676 : mov esi, ebp ; mov rdi, rbp ; call rax
0x00000000004795bb : mov esi, ebp ; mov rdx, qword ptr [rax + r15] ; call r9
0x000000000047d08e : mov esi, ebx ; call 0x419b24
0x000000000040505d : mov esi, ecx ; mov edi, eax ; call 0x401ab6
0x0000000000404cef : mov esi, ecx ; mov rdi, rdx ; call rax
0x000000000045dd11 : mov esi, edi ; call 0x419f84
0x00000000004b8375 : mov esi, edi ; call qword ptr [rax]
0x000000000049b2cb : mov esi, edi ; mov rdi, qword ptr [rax + rcx] ; call 0x407dd8
0x000000000044a2f4 : mov esi, edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000449cf7 : mov esi, edi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x000000000040b2c1 : mov esi, esi ; call rcx
0x00000000004b685d : mov esi, esi ; jmp qword ptr [rax]
0x00000000004950c7 : mov esi, esi ; mov rdi, r13 ; call 0x401b37
0x00000000004a7f8a : mov esi, esi ; mov rdi, rbx ; call r12
0x000000000041b11e : mov esi, esp ; cmovne rax, rdx ; call rax
0x000000000042555c : mov esi, esp ; mov rdi, r13 ; cmovne rdx, rax ; call rdx
0x000000000041b11d : mov esi, r12d ; cmovne rax, rdx ; call rax
0x000000000040b2c0 : mov esi, r14d ; call rcx
0x00000000004a2e42 : mov esp, 0x11024 ; add al, ch ; ret
0x00000000004a29f0 : mov esp, 0x12024 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405c8c : mov esp, 0x1b8ffff ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046d643 : mov esp, 0x1c824 ; add al, ch ; ret 0xfa49
0x0000000000443720 : mov esp, 0x39fffffe ; ret
0x0000000000454b18 : mov esp, 0x5c415d5b ; ret
0x0000000000465ebf : mov esp, 0x7d80fffb ; push rcx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a1b28 : mov esp, 0x83000000 ; ret
0x000000000045dddf : mov esp, 0x8824 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000044e5db : mov esp, 0x9066c35b ; xor eax, eax ; pop rbx ; ret
0x00000000004a7702 : mov esp, 0xc085fff7 ; je 0x4a76d3 ; pop rbx ; ret
0x00000000004bfecc : mov esp, 0xd0000079 ; adc dh, dh ; jmp qword ptr [rcx]
0x00000000004c17cc : mov esp, 0xe0000092 ; mov dh, dh ; jmp qword ptr [rdi]
0x00000000004a3519 : mov esp, 0xf024 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000411842 : mov esp, 0xf824 ; add al, ch ; ret
0x00000000004a375b : mov esp, 0xf824 ; add al, ch ; retf 0xfcb2
0x00000000004b5494 : mov esp, cs ; hlt ; dec eax ; retf
0x000000000045a0a9 : mov esp, dword ptr [rbx + 0x27] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043b59b : mov fs, word ptr [rdx + rax - 0x7cb70000] ; ret
0x000000000040fb9c : mov qword ptr [r11 + 0x20], r10 ; pop r12 ; pop r13 ; ret
0x0000000000438f38 : mov qword ptr [r11 + 0x68], r9 ; pop rbx ; ret
0x00000000004166d5 : mov qword ptr [r12 + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e39a : mov qword ptr [r13], rdx ; jmp 0x40e370
0x00000000004a4732 : mov qword ptr [r15 + 0x18], rax ; jmp 0x4a4700
0x00000000004110ca : mov qword ptr [r8 + 0x10], 0 ; ret
0x0000000000456b52 : mov qword ptr [r8 + 0x10], r9 ; ret
0x000000000040928f : mov qword ptr [rax + 0x10], 0 ; ret
0x0000000000408e46 : mov qword ptr [rax + 0x10], rdi ; ret
0x0000000000411ce0 : mov qword ptr [rax + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040cb92 : mov qword ptr [rax + 0x138], rsi ; xor eax, eax ; ret
0x0000000000414784 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000408e34 : mov qword ptr [rax], rdi ; je 0x408e46 ; ret
0x000000000042b76f : mov qword ptr [rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436769 : mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041211a : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004291ac : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041351b : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000413f9c : mov qword ptr [rbx + 0x20], rdx ; pop rbx ; ret
0x0000000000413580 : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000414f6c : mov qword ptr [rbx + 0x58], 0 ; pop rbx ; ret
0x000000000042aa68 : mov qword ptr [rbx + 8], rax ; pop rbx ; ret
0x000000000044e320 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000430313 : mov qword ptr [rbx], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004260cc : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b2d6 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000004253e4 : mov qword ptr [rbx], rcx ; pop rbx ; ret
0x0000000000425189 : mov qword ptr [rbx], rdx ; pop rbx ; ret
0x00000000004950ba : mov qword ptr [rcx + 0x48], r13 ; call 0x401b36
0x0000000000414781 : mov qword ptr [rcx], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000438e37 : mov qword ptr [rcx], rsi ; ret
0x0000000000429e6a : mov qword ptr [rdi], rax ; mov word ptr [rdi + 8], dx ; pop rbx ; ret
0x00000000004114c9 : mov qword ptr [rdi], rax ; ret
0x00000000004147c0 : mov qword ptr [rdi], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x00000000004147b4 : mov qword ptr [rdi], rdx ; ret
0x000000000042933a : mov qword ptr [rdi], rsi ; mov word ptr [rdi + 8], ax ; pop rbx ; ret
0x00000000004210c3 : mov qword ptr [rdi], rsi ; mov word ptr [rdi + 8], ax ; ret
0x00000000004318c1 : mov qword ptr [rdi], rsi ; mov word ptr [rdi + 8], dx ; pop rbx ; ret
0x000000000049550b : mov qword ptr [rdx + 0x10], 0 ; pop rbx ; ret
0x0000000000407a5c : mov qword ptr [rdx + 0x10], rax ; ret
0x000000000040b201 : mov qword ptr [rdx + 0x288], rax ; ret
0x000000000040e3b9 : mov qword ptr [rdx + rsi], rdi ; ret
0x000000000041064f : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000410679 : mov qword ptr [rdx], rax ; mov eax, 2 ; ret
0x00000000004106a6 : mov qword ptr [rdx], rax ; mov eax, 3 ; ret
0x00000000004106db : mov qword ptr [rdx], rax ; mov eax, 4 ; ret
0x0000000000407a6c : mov qword ptr [rip + 0x2cad4d], rax ; ret
0x0000000000408980 : mov qword ptr [rsi], rax ; mov eax, 1 ; ret
0x000000000040893d : mov qword ptr [rsi], rax ; mov eax, 2 ; ret
0x0000000000408971 : mov qword ptr [rsi], rax ; mov eax, 3 ; ret
0x00000000004089b9 : mov qword ptr [rsi], rax ; mov eax, 4 ; ret
0x0000000000408a26 : mov qword ptr [rsi], rax ; mov eax, 6 ; ret
0x0000000000408a59 : mov qword ptr [rsi], rax ; mov eax, 7 ; ret
0x0000000000408a8b : mov qword ptr [rsi], rax ; mov eax, 8 ; ret
0x0000000000408abf : mov qword ptr [rsi], rax ; mov eax, 9 ; ret
0x0000000000409eb4 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000004089f8 : mov qword ptr [rsi], rdx ; ret
0x000000000040cfce : mov qword ptr [rsi], rdx ; sub eax, edi ; ret
0x000000000046b6b1 : mov qword ptr [rsp + 0x10], r9 ; mov rdi, r12 ; call rax
0x000000000041219b : mov qword ptr [rsp + 0x28], rax ; call r9
0x000000000048e622 : mov qword ptr [rsp + 0x30], r11 ; call 0x43b0c7
0x000000000046aead : mov qword ptr [rsp + 8], rax ; call 0x4170f7
0x0000000000415b76 : mov qword ptr [rsp + 8], rax ; call rdx
0x0000000000447098 : mov qword ptr [rsp + 8], rdi ; call 0x423337
0x000000000041587d : mov qword ptr [rsp + 8], rdi ; call rax
0x000000000043863c : mov qword ptr [rsp], rax ; call rsi
0x000000000042b76e : mov qword ptr fs:[rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e55d : mov r11, qword ptr [rsp + 0x30] ; jmp 0x48afac
0x000000000048ed2f : mov r11, qword ptr [rsp + 0x30] ; jmp 0x48b023
0x000000000048e5f9 : mov r11, qword ptr [rsp + 0x30] ; jmp 0x48b030
0x000000000048ee1d : mov r11, qword ptr [rsp + 0x30] ; jmp 0x48b0a5
0x0000000000406530 : mov r12b, 0x89 ; ret 0x8b48
0x0000000000426dd2 : mov r13, r15 ; jmp 0x426d9e
0x000000000046b97a : mov r13d, 0x213 ; call rax
0x00000000004a47d8 : mov r13d, 7 ; jmp 0x4a47b2
0x0000000000497a97 : mov r13d, dword ptr [r12 + 0x24] ; call 0x423d57
0x000000000048d795 : mov r14d, dword ptr [r12] ; jmp 0x48a1fe
0x000000000048f696 : mov r14d, dword ptr [r12] ; jmp 0x48b8a7
0x000000000047419b : mov r15d, r10d ; jmp 0x4703e5
0x0000000000402670 : mov r8, qword ptr [rsp + 0x38] ; jne 0x402688 ; jmp 0x40264c
0x000000000040a286 : mov r8d, 1 ; ret
0x0000000000438cbf : mov r9, qword ptr [rbx + 0x238] ; call r10
0x0000000000474fff : mov r9d, 6 ; jmp 0x474fd9
0x0000000000472d5d : mov r9d, eax ; mov byte ptr [rbx + 0xa], 1 ; jmp 0x46f847
0x0000000000419ab1 : mov rax, qword ptr [r11 + 0x60] ; pop rbx ; ret
0x0000000000419aa0 : mov rax, qword ptr [r11 + 0x60] ; ret
0x00000000004292fa : mov rax, qword ptr [rax + 0x10] ; ret
0x0000000000409550 : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000041656c : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004099d3 : mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000416436 : mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000004163eb : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x416409 ; call rax
0x000000000044b336 : mov rax, qword ptr [rax + 0x58] ; test rax, rax ; je 0x44b358 ; call rax
0x000000000041675d : mov rax, qword ptr [rax + 0x70] ; jmp rax
0x0000000000403422 : mov rax, qword ptr [rax + 8] ; mov rdi, qword ptr [rax] ; call 0x40f659
0x00000000004099c4 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000412670 : mov rax, qword ptr [rax + r14] ; test rax, rax ; je 0x412684 ; call rax
0x0000000000407a0f : mov rax, qword ptr [rax + rdi*8] ; ret
0x0000000000409aa5 : mov rax, qword ptr [rax + rsi*8 - 8] ; ret
0x000000000043c41e : mov rax, qword ptr [rbp + 0x10] ; jmp 0x43c3ec
0x000000000042fb43 : mov rax, qword ptr [rbx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413b09 : mov rax, qword ptr [rbx + 0x10] ; pop rbx ; ret
0x00000000004152de : mov rax, qword ptr [rbx] ; sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x0000000000409a20 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0xc] ; ret
0x0000000000407a58 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000000000409eb0 : mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000413acd : mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000040c510 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000040d9c0 : mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000040c550 : mov rax, qword ptr [rdi + 0x30] ; ret
0x0000000000409865 : mov rax, qword ptr [rdi + 0xe0] ; ret
0x00000000004099c0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000407ae0 : mov rax, qword ptr [rdi - 8] ; ret
0x0000000000416569 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004099d0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000416433 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x0000000000409ac5 : mov rax, qword ptr [rdi] ; ret
0x000000000040cd0e : mov rax, qword ptr [rdx + 0xd0] ; ret
0x0000000000414410 : mov rax, qword ptr [rsi + 0x20] ; test rax, rax ; je 0x414429 ; ret
0x0000000000425eae : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a19b2 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000048e94d : mov rax, qword ptr [rsp + 0x38] ; jmp 0x48ab88
0x0000000000447ab8 : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004109fa : mov rax, qword ptr [rsp + 8] ; jmp 0x4109ca
0x000000000040ccd9 : mov rax, r10 ; pop rbx ; ret
0x000000000040cce1 : mov rax, r10 ; ret
0x000000000040a771 : mov rax, r11 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040291e : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c80a : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040c7dd : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408bd9 : mov rax, r9 ; ret
0x00000000004366d3 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000419d9f : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412804 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411e2e : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004213d5 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004138aa : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410410 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409b67 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411ae3 : mov rax, rbx ; pop rbx ; ret
0x0000000000417c30 : mov rax, rcx ; add rax, qword ptr [rdi] ; ret
0x0000000000409300 : mov rax, rcx ; add rsp, 0x18 ; ret
0x000000000040e065 : mov rax, rdi ; mov dword ptr [rsi], edx ; ret
0x000000000040b563 : mov rax, rdi ; ret
0x0000000000416508 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041d69f : mov rax, rdx ; pop rbx ; ret
0x000000000041d6b1 : mov rax, rdx ; ret
0x0000000000413b56 : mov rax, rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041e6f0 : mov rax, rsi ; ret
0x0000000000429a10 : mov rbp, rdi ; test rax, rax ; je 0x429a22 ; call rax
0x000000000040485b : mov rbp, rsp ; call rax
0x00000000004a6b85 : mov rbx, rax ; jne 0x4a6b51 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c60c : mov rbx, rdi ; mov rdi, qword ptr [rdi + 8] ; call rax
0x000000000042a0e5 : mov rbx, rdx ; cmp rax, -3 ; ja 0x42a0f9 ; call rsi
0x000000000046a355 : mov rdi, qword ptr [r12 + 0x10] ; call rax
0x0000000000485da9 : mov rdi, qword ptr [r13 + 0x28] ; call 0x412016
0x000000000048fc36 : mov rdi, qword ptr [r13] ; call 0x42bf26
0x00000000004254be : mov rdi, qword ptr [r14 + 0x18] ; call r12
0x0000000000438638 : mov rdi, qword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call rsi
0x000000000049b2cd : mov rdi, qword ptr [rax + rcx] ; call 0x407dd6
0x000000000044509d : mov rdi, qword ptr [rax] ; call 0x401ad5
0x0000000000403426 : mov rdi, qword ptr [rax] ; call 0x40f655
0x000000000041b98b : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000046fbf9 : mov rdi, qword ptr [rbx + 0x1a0] ; call rcx
0x0000000000415dfe : mov rdi, qword ptr [rbx + 0x38] ; call 0x412016
0x0000000000415df5 : mov rdi, qword ptr [rbx + 0x48] ; call 0x412016
0x0000000000445512 : mov rdi, qword ptr [rbx + 8] ; call 0x412016
0x00000000004123e9 : mov rdi, qword ptr [rbx + 8] ; call rax
0x00000000004430e5 : mov rdi, qword ptr [rbx + 8] ; xor esi, esi ; call 0x40f378
0x000000000046a310 : mov rdi, qword ptr [rbx - 0x10] ; call rax
0x0000000000462074 : mov rdi, qword ptr [rbx] ; call 0x41e315
0x000000000041d80c : mov rdi, qword ptr [rcx + 0x40] ; call r8
0x00000000004134dd : mov rdi, qword ptr [rdi + 0x18] ; call rax
0x000000000040c60f : mov rdi, qword ptr [rdi + 8] ; call rax
0x00000000004a77dc : mov rdi, qword ptr [rip + 0x228c3d] ; call rax
0x00000000004a7788 : mov rdi, qword ptr [rip + 0x228ce9] ; call rax
0x00000000004238ac : mov rdi, qword ptr [rip + 0x2acbc5] ; call rax
0x0000000000474660 : mov rdi, qword ptr [rsi + 0x1a0] ; call rax
0x00000000004979f8 : mov rdi, qword ptr [rsp + 0x50] ; call 0x4244c7
0x000000000045a14b : mov rdi, r10 ; call 0x4163b5
0x0000000000403b06 : mov rdi, r12 ; call 0x4205e5
0x000000000046b6b6 : mov rdi, r12 ; call rax
0x0000000000415047 : mov rdi, r12 ; call rcx
0x000000000046fcbd : mov rdi, r12 ; mov dword ptr [rsp + 0x38], eax ; call 0x41bee9
0x00000000004950c9 : mov rdi, r13 ; call 0x401b35
0x00000000004496ae : mov rdi, r13 ; call 0x425975
0x000000000048e63e : mov rdi, r13 ; call 0x43b0c5
0x0000000000411ede : mov rdi, r13 ; call r12
0x000000000042555e : mov rdi, r13 ; cmovne rdx, rax ; call rdx
0x0000000000447ab5 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000049cddf : mov rdi, r13 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000445021 : mov rdi, r14 ; call 0x401ad5
0x0000000000477456 : mov rdi, r15 ; call 0x443754
0x0000000000477456 : mov rdi, r15 ; call 0x443755
0x00000000004787f2 : mov rdi, r15 ; call 0x455215
0x000000000045552c : mov rdi, r15 ; mov dword ptr [rsp + 0x30], eax ; call 0x412019
0x000000000047d08a : mov rdi, r15 ; mov rsi, rbx ; call 0x419b28
0x00000000004774e2 : mov rdi, r15 ; xor eax, eax ; call 0x443757
0x0000000000425862 : mov rdi, rax ; add rdx, 0x28 ; call 0x401a89
0x0000000000404f7d : mov rdi, rax ; call 0x401a85
0x000000000040514f : mov rdi, rax ; call 0x401b85
0x0000000000425d8b : mov rdi, rax ; call 0x412015
0x00000000004a472f : mov rdi, rax ; mov qword ptr [r15 + 0x18], rax ; jmp 0x4a4703
0x000000000042aac3 : mov rdi, rax ; test rdi, rdi ; jne 0x42aa90 ; pop rbx ; ret
0x000000000049565a : mov rdi, rbp ; call 0x4120c5
0x0000000000437778 : mov rdi, rbp ; call r14
0x0000000000421678 : mov rdi, rbp ; call rax
0x00000000004a181d : mov rdi, rbx ; call 0x40e255
0x00000000004995b9 : mov rdi, rbx ; call 0x426015
0x00000000004760ce : mov rdi, rbx ; call 0x432335
0x000000000044a2f6 : mov rdi, rbx ; call qword ptr [rax]
0x00000000004a7f8c : mov rdi, rbx ; call r12
0x000000000040de78 : mov rdi, rbx ; call rcx
0x000000000041251c : mov rdi, rbx ; jne 0x412516 ; pop rbx ; ret
0x0000000000495d06 : mov rdi, rbx ; xor eax, eax ; call 0x441fa7
0x00000000004377f7 : mov rdi, rdx ; call r8
0x0000000000404cf1 : mov rdi, rdx ; call rax
0x00000000004118be : mov rdi, rdx ; rep stosq qword ptr [rdi], rax ; ret
0x00000000004795bd : mov rdx, qword ptr [rax + r15] ; call r9
0x000000000043c0d6 : mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x438b37
0x000000000042595d : mov rdx, qword ptr [rbx] ; mov byte ptr [rdx + 0x19], 1 ; pop rbx ; ret
0x0000000000455589 : mov rdx, qword ptr [rsp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045428d : mov rdx, r12 ; call 0x450d05
0x000000000041b0bf : mov rdx, r13 ; call r12
0x0000000000440c5e : mov rdx, rax ; call 0x42d705
0x000000000042ff15 : mov rdx, rax ; jmp 0x42fee9
0x00000000004422c3 : mov rsi, qword ptr [r12 + 0x10] ; call r14
0x0000000000462070 : mov rsi, qword ptr [r13 + 0x60] ; mov rdi, qword ptr [rbx] ; call 0x41e319
0x0000000000421675 : mov rsi, r13 ; mov rdi, rbp ; call rax
0x00000000004950c6 : mov rsi, r14 ; mov rdi, r13 ; call 0x401b38
0x00000000004a7f89 : mov rsi, r14 ; mov rdi, rbx ; call r12
0x000000000045dd10 : mov rsi, r15 ; call 0x419f85
0x000000000049b2ca : mov rsi, r15 ; mov rdi, qword ptr [rax + rcx] ; call 0x407dd9
0x000000000044a2f3 : mov rsi, r15 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000047d678 : mov rsi, rax ; call 0x469935
0x00000000004795ba : mov rsi, rbp ; mov rdx, qword ptr [rax + r15] ; call r9
0x000000000047d08d : mov rsi, rbx ; call 0x419b25
0x000000000040505c : mov rsi, rcx ; mov edi, eax ; call 0x401ab7
0x0000000000404cee : mov rsi, rcx ; mov rdi, rdx ; call rax
0x00000000004095ec : mov word ptr [r10 + 0x14], ax ; ret
0x000000000040a5bf : mov word ptr [r10 + 0x5c], ax ; ret
0x00000000004176c5 : mov word ptr [r8 + 0x16], ax ; ret
0x000000000040b3de : mov word ptr [r8 + 0xa], cx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040869e : mov word ptr [rax + 0x63], cs ; ret
0x0000000000421490 : mov word ptr [rax + 8], cx ; add rsp, 0x18 ; ret
0x00000000004536ac : mov word ptr [rax + rbp*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000469d9e : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000499128 : mov word ptr [rax + rdx*2], fs ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x0000000000409a38 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x00000000004c229c : mov word ptr [rbp - 0xd00000], ds ; call qword ptr [rcx]
0x0000000000416a7e : mov word ptr [rbx + 0x3c], ax ; pop rbx ; ret
0x0000000000419408 : mov word ptr [rbx + 0x60], bp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421088 : mov word ptr [rbx + 8], ax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041ffba : mov word ptr [rbx + 8], ax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004323bb : mov word ptr [rbx + 8], ax ; pop rbx ; ret
0x0000000000417a0f : mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x0000000000404545 : mov word ptr [rbx + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044e57d : mov word ptr [rbx + rdx*2 + 0x70], ax ; xor eax, eax ; pop rbx ; ret
0x00000000004acf50 : mov word ptr [rbx - 5], ds ; dec dword ptr [rax - 5] ; call rbx
0x0000000000455bfc : mov word ptr [rcx + 0x70], ax ; xor eax, eax ; ret
0x00000000004be4d2 : mov word ptr [rcx*4 + 0x46028e03], es ; ret
0x00000000004c117d : mov word ptr [rcx*4 + 0x4a028e03], es ; ret
0x000000000040b401 : mov word ptr [rdi + 0x12], cx ; jmp 0x40b3cf
0x0000000000408f81 : mov word ptr [rdi + 0x2c], dx ; ret
0x0000000000420fc0 : mov word ptr [rdi + 8], ax ; mov eax, 7 ; ret
0x000000000042933d : mov word ptr [rdi + 8], ax ; pop rbx ; ret
0x00000000004210c6 : mov word ptr [rdi + 8], ax ; ret
0x0000000000429e6d : mov word ptr [rdi + 8], dx ; pop rbx ; ret
0x00000000004211fd : mov word ptr [rdi + 8], dx ; ret
0x000000000041d6c0 : mov word ptr [rdi - 1], ds ; dec dword ptr [rax - 0x77] ; ret 0x48e9
0x000000000041778f : mov word ptr [rdx + 0x16], ax ; pop rbx ; pop rbp ; ret
0x0000000000417855 : mov word ptr [rdx + 0x16], ax ; ret
0x00000000004105d8 : mov word ptr [rdx + 8], ax ; mov eax, 8 ; ret
0x0000000000410623 : mov word ptr [rdx + 8], ax ; xor eax, eax ; ret
0x000000000041070a : mov word ptr [rdx + 8], cx ; mov eax, 6 ; ret
0x0000000000410732 : mov word ptr [rdx + 8], cx ; ret
0x0000000000410638 : mov word ptr [rdx + 8], r10w ; ret
0x00000000004bdb0c : mov word ptr [rdx], es ; ret
0x00000000004bd39c : mov word ptr [rsi], cs ; add byte ptr [rax - 0x58], dh ; cmc ; jmp qword ptr [rdi]
0x000000000040be12 : movabs al, byte ptr [0x1b8000000] ; ret
0x000000000040ba94 : movabs al, byte ptr [0x2b8000000] ; ret
0x00000000004b6bc4 : movabs al, byte ptr [0x500000ae10fff6c6] ; retf
0x000000000040be2d : movabs al, byte ptr [0x6348c3d089000000] ; ret 0x8d4c
0x00000000004b7b84 : movabs al, byte ptr [0x8000012a00fff9c0] ; ret
0x00000000004b7d3c : movabs al, byte ptr [0x8000013920fffa9d] ; retf
0x000000000044910c : movabs al, byte ptr [0x8948ee8948fffe6b] ; ret 0x8948
0x00000000004b7214 : movabs al, byte ptr [0xc00000da18fff7bf] ; ret 0xfff7
0x00000000004b6eb8 : movabs al, byte ptr [0xc0fff74cf00000c3] ; ret
0x0000000000411c5a : movabs byte ptr [0x8948c08548fffffd], al ; ret
0x0000000000405f82 : movabs dword ptr [0x8348ca0148d2b60f], eax ; ret 0x480f
0x0000000000445812 : movabs dword ptr [0x8900087b8366fffe], eax ; ret 0x894c
0x00000000004075cd : movabs dword ptr [0xc900000001b8ffff], eax ; ret
0x0000000000415c13 : movabs eax, dword ptr [0x274c08548002bcb] ; call rax
0x0000000000405f54 : movabs eax, dword ptr [0x8348ca0148d2b60f] ; ret 0x480f
0x000000000043b59c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000409b93 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004c29b5 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; cmp cl, dl ; idiv bh ; ret 0
0x000000000046ad5e : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8ab4 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb1f0000 ; hlt ; call qword ptr [rbx]
0x00000000004bbdb4 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add byte ptr [rax], bl ; jbe 0x4bbdb7 ; call qword ptr [rax]
0x00000000004c29b4 : movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; cmp cl, dl ; idiv bh ; ret 0
0x00000000004afed0 : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; bnd jl 0x4afe8b ; scasd eax, dword ptr [rdi] ; ret
0x000000000040f81b : movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; ret
0x00000000004ad060 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; cld ; inc dword ptr [rdx] ; pop rdx ; cld ; call rdi
0x00000000004c48b4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b567c : movsd dword ptr [rdi], dword ptr [rsi] ; and ch, dh ; call qword ptr [rax]
0x00000000004afed1 : movsd dword ptr [rdi], dword ptr [rsi] ; bnd jl 0x4afe8a ; scasd eax, dword ptr [rdi] ; ret
0x000000000044d207 : movsd dword ptr [rdi], dword ptr [rsi] ; push rbp ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d21b ; call rax
0x00000000004116ee : movsd qword ptr [rbx + 0x20], xmm0 ; pop rbx ; ret
0x00000000004214df : movsd qword ptr [rbx], xmm1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dbdb : movsd qword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; pop rbx ; ret
0x000000000040e103 : movsd qword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; ret
0x000000000040ecb1 : movsd qword ptr [rsi + 0x40], xmm1 ; ret
0x000000000040dca8 : movsd qword ptr [rsi + 0x40], xmm3 ; ret
0x0000000000436eb2 : movsx eax, byte ptr [rdx + 0x12] ; mov byte ptr [rdx + 0x16], 1 ; ret
0x0000000000436ece : movsx eax, byte ptr [rdx + 0x14] ; ret
0x0000000000436f60 : movsx eax, byte ptr [rdx + 0x15] ; ret
0x000000000043d20d : movsxd r14, dword ptr [r14 + rcx - 0x77] ; ret 0xe283
0x000000000040b883 : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x0000000000436e7b : movsxd r8, dword ptr [rcx + r8*4] ; add rcx, r8 ; jmp rcx
0x000000000040c0ee : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000432806 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000046a97b : movsxd rax, dword ptr [rax + 0x7f] ; rcr dword ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000049ad3e : movsxd rax, dword ptr [rax + r11*4] ; add rax, rcx ; jmp rax
0x000000000040b884 : movsxd rax, dword ptr [rax + rax*4] ; add rax, r8 ; jmp rax
0x000000000049ad3f : movsxd rax, dword ptr [rax + rbx*4] ; add rax, rcx ; jmp rax
0x0000000000436896 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000432807 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x0000000000479513 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000436e7c : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, r8 ; jmp rcx
0x0000000000420401 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000040e121 : movsxd rax, dword ptr [rdi + 0x18] ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000417951 : movsxd rax, dword ptr [rdi + 4] ; cmp dword ptr [rdi], eax ; jg 0x417969 ; xor eax, eax ; ret
0x0000000000419c76 : movsxd rax, dword ptr [rdx + 8] ; test eax, eax ; jns 0x419c2c ; ret
0x0000000000419c75 : movsxd rax, dword ptr [rdx + 8] ; test eax, eax ; jns 0x419c2d ; ret
0x000000000042dfa9 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000040381b : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000046f54e : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000429a54 : movsxd rax, dword ptr [rsp + rax*2 - 0x77] ; loopne 0x429abe ; pop rbp ; pop r12 ; ret
0x000000000040c0ef : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000040df7b : movsxd rax, esi ; mov byte ptr [rdx + rax], 0 ; mov dword ptr [rcx], esi ; ret
0x0000000000484686 : movsxd rbx, dword ptr [rax - 0x7d] ; ret 0x480a
0x000000000042dd6c : movsxd rbx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410603 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000449cfa : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000004278b8 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000041227c : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x0000000000417c2e : movsxd rcx, ecx ; mov rax, rcx ; add rax, qword ptr [rdi] ; ret
0x00000000004b7a2d : movsxd rdi, ecx ; call rax
0x0000000000407a0d : movsxd rdi, edi ; mov rax, qword ptr [rax + rdi*8] ; ret
0x00000000004989e8 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000422ac1 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x0000000000403223 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000041b665 : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000454aa6 : movsxd rdx, dword ptr [rcx + rsi*8 + 0x48] ; add esp, 0x10 ; pop rbx ; ret
0x00000000004326ff : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x000000000041a7bd : movsxd rdx, eax ; add rdx, r9 ; mov qword ptr [rdi], rdx ; ret
0x000000000042ce44 : movsxd rdx, edx ; call 0x4290a4
0x000000000042ce43 : movsxd rdx, edx ; call 0x4290a5
0x00000000004146ba : movsxd rdx, edx ; movzx eax, byte ptr [rax + rdx] ; add eax, edi ; ret
0x00000000004146a0 : movsxd rdx, edx ; movzx eax, byte ptr [rax + rdx] ; add eax, esi ; ret
0x00000000004114c4 : movsxd rdx, edx ; sub rax, rdx ; mov qword ptr [rdi], rax ; ret
0x000000000043d20e : movsxd rsi, dword ptr [rsi + rcx - 0x77] ; ret 0xe283
0x00000000004acfa5 : movsxd rsi, ebp ; call qword ptr [rbx]
0x00000000004acfa1 : movsxd rsi, ebp ; jmp qword ptr [rax]
0x00000000004b6fd5 : movsxd rsi, edi ; jmp rax
0x0000000000409aa3 : movsxd rsi, esi ; mov rax, qword ptr [rax + rsi*8 - 8] ; ret
0x0000000000484dd4 : movsxd rsi, esi ; ret 0x74fe
0x0000000000417376 : movsxd rsi, esi ; xor edi, edi ; call 0x413656
0x0000000000417375 : movsxd rsi, esi ; xor edi, edi ; call 0x413657
0x000000000045a0aa : movsxd rsp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004116ef : movups xmmword ptr [rbx + 0x20], xmm0 ; pop rbx ; ret
0x00000000004214e0 : movups xmmword ptr [rbx], xmm1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dbdc : movups xmmword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; pop rbx ; ret
0x000000000040e104 : movups xmmword ptr [rsi + 0x40], xmm0 ; xor eax, eax ; ret
0x000000000040ecb2 : movups xmmword ptr [rsi + 0x40], xmm1 ; ret
0x000000000040dca9 : movups xmmword ptr [rsi + 0x40], xmm3 ; ret
0x0000000000432017 : movzx eax, al ; cmovl eax, r8d ; ret
0x000000000041b40b : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x0000000000408ca5 : movzx eax, al ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000409fa6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b3ce : movzx eax, al ; pop rbx ; ret
0x000000000040a2be : movzx eax, al ; ret
0x00000000004351b6 : movzx eax, byte ptr [rax + 0x25] ; mov byte ptr [rdi + 7], al ; xor eax, eax ; ret
0x000000000040f639 : movzx eax, byte ptr [rax + 0x29] ; ret
0x00000000004146bc : movzx eax, byte ptr [rax + rdx] ; add eax, edi ; ret
0x00000000004146a2 : movzx eax, byte ptr [rax + rdx] ; add eax, esi ; ret
0x000000000040cc10 : movzx eax, byte ptr [rdi + 0x4f] ; ret
0x000000000040d9b0 : movzx eax, byte ptr [rdi + 0xa] ; ret
0x0000000000409980 : movzx eax, byte ptr [rdi + 0xb] ; ret
0x000000000040f610 : movzx eax, byte ptr [rdi + 1] ; ret
0x000000000040e880 : movzx eax, byte ptr [rdi + 8] ; ret
0x000000000040999e : movzx eax, byte ptr [rdx + rax] ; ret
0x000000000044ca3d : movzx eax, dl ; ret
0x000000000040cd3e : movzx eax, word ptr [rax + 0x26] ; and eax, 1 ; ret
0x00000000004097cd : movzx eax, word ptr [rax + rbx*2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a2e4 : movzx eax, word ptr [rbx + 0x30] ; jmp 0x43a2b2
0x0000000000409a35 : movzx eax, word ptr [rdi + 0x8c] ; ret
0x0000000000401d70 : movzx ebx, bl ; or word ptr [rax + 2], bx ; pop rbx ; ret
0x0000000000407d96 : movzx edx, byte ptr [rcx + rax] ; xor eax, eax ; sub eax, edx ; ret
0x000000000040e7e9 : movzx edx, byte ptr [rdi + 7] ; add rax, rdx ; ret
0x0000000000407e55 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000040a6fd : movzx edx, dl ; add eax, edx ; ret
0x0000000000408b18 : movzx edx, word ptr [rdx + rdi*2] ; lea eax, [rax + rdx - 0xa] ; ret
0x0000000000411099 : movzx esi, si ; add rsi, qword ptr [rax + 0x50] ; jmp rcx
0x00000000004ad6dc : neg bl ; std ; lcall [rdi - 0x25] ; std ; call qword ptr [rsi]
0x00000000004283b9 : neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000407da8 : neg eax ; ret
0x00000000004b5b38 : nop ; add byte ptr [r8], al ; and byte ptr [rsi - 0xb], dh ; jmp rax
0x0000000000453342 : nop ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x000000000045b384 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4120
0x00000000004b7560 : nop ; add byte ptr [rax], al ; jo 0x4b759c ; clc ; jmp rax
0x00000000004c1515 : nop ; add byte ptr [rax], al ; pop rax ; jg 0x4c1517 ; jmp qword ptr [rsi]
0x00000000004191ef : nop ; add dword ptr [r8 + 0xc], 1 ; xor eax, eax ; ret
0x00000000004c9173 : nop ; add dword ptr [rbx], eax ; ret 0xa01
0x00000000004c53c9 : nop ; add dword ptr [rbx], eax ; retf
0x000000000040a70f : nop ; add eax, 2 ; ret
0x0000000000436898 : nop ; add rax, rdi ; jmp rax
0x0000000000403225 : nop ; add rax, rdx ; jmp rax
0x000000000046367f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b8264 : nop ; and bh, dh ; call qword ptr [rax]
0x00000000004b74cc : nop ; and edi, eax ; call rax
0x00000000004b5994 : nop ; cmc ; jmp rax
0x00000000004b5d0c : nop ; cwde ; cmc ; jmp qword ptr [rax]
0x00000000004ac150 : nop ; div ebp ; call qword ptr [rax - 0x2f000a09]
0x00000000004ac154 : nop ; div ebp ; call rax
0x00000000004c6230 : nop ; fcomip st(7) ; jmp qword ptr [rbx]
0x00000000004b5ffc : nop ; fdiv st(5) ; jmp rax
0x00000000004b8330 : nop ; jbe 0x4b833b ; add al, dh ; js 0x4b833c ; jmp rax
0x00000000004b6104 : nop ; jrcxz 0x4b60ff ; jmp rax
0x00000000004b6fd0 : nop ; leave ; add byte ptr [rax], al ; nop ; movsxd rsi, edi ; jmp rax
0x0000000000404c96 : nop ; leave ; ret
0x00000000004b60a4 : nop ; loopne 0x4b609f ; call qword ptr [rax]
0x0000000000418bdf : nop ; mov byte ptr [rsi], 0x65 ; xor eax, eax ; ret
0x00000000004b5c14 : nop ; mov ch, dh ; call rax
0x0000000000408caf : nop ; mov eax, 0x1000 ; ret
0x000000000040f67f : nop ; mov eax, 0x43 ; pop rbx ; ret
0x000000000041d88f : nop ; mov eax, 7 ; ret
0x0000000000415f3f : nop ; mov eax, dword ptr [rdi + 0x14] ; test eax, eax ; jne 0x415f58 ; ret
0x000000000044f25f : nop ; mov eax, dword ptr [rdi + 0x50] ; pop rbx ; ret
0x000000000041b7cf : nop ; mov edx, 1 ; xor eax, edx ; pop rbx ; ret
0x0000000000419a9f : nop ; mov rax, qword ptr [r11 + 0x60] ; ret
0x00000000004099bf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000407adf : nop ; mov rax, qword ptr [rdi - 8] ; ret
0x000000000041040f : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b7a2c : nop ; movsxd rdi, ecx ; call rax
0x00000000004b6fd4 : nop ; movsxd rsi, edi ; jmp rax
0x0000000000405dac : nop ; or byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004b8c70 : nop ; out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004b8d30 : nop ; out dx, al ; hlt ; jmp qword ptr [rbx]
0x0000000000404abd : nop ; pop rbp ; ret
0x0000000000409a0f : nop ; ret
0x0000000000495d0c : nop ; ret 0xfffa
0x0000000000472b8c : nop ; retf
0x00000000004b6ff8 : nop ; retf 0
0x00000000004b792c : nop ; sbb edi, ecx ; jmp qword ptr [rax]
0x00000000004cd070 : nop ; std ; call qword ptr [rax]
0x000000000046c21f : nop ; test rdi, rdi ; jne 0x46c22e ; ret
0x000000000046c21e : nop ; test rdi, rdi ; jne 0x46c22f ; ret
0x000000000042fc0f : nop ; xor eax, eax ; and edx, 1 ; je 0x42fc31 ; ret
0x000000000044e5df : nop ; xor eax, eax ; pop rbx ; ret
0x000000000041349f : nop ; xor eax, eax ; ret
0x000000000043239b : nop dword ptr [rax + rax] ; je 0x4323af ; ret
0x00000000004146c3 : nop dword ptr [rax + rax] ; lea eax, [rsi + 1] ; ret
0x000000000041923b : nop dword ptr [rax + rax] ; mov byte ptr [rax + 6], 1 ; ret
0x000000000041e6eb : nop dword ptr [rax + rax] ; mov rax, rsi ; ret
0x0000000000436f5b : nop dword ptr [rax + rax] ; movsx eax, byte ptr [rdx + 0x15] ; ret
0x000000000040d9ab : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi + 0xa] ; ret
0x000000000040997b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi + 0xb] ; ret
0x000000000040e87b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi + 8] ; ret
0x00000000004047c8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004312a3 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042940b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000407b0b : nop dword ptr [rax + rax] ; ret
0x000000000042fd63 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000407b4b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046a5ed : nop dword ptr [rax] ; call 0x4170f5
0x000000000043208c : nop dword ptr [rax] ; fstp st(0) ; fstp st(0) ; ret
0x0000000000418ad5 : nop dword ptr [rax] ; lea eax, [r9 + 1] ; pop rbx ; ret
0x000000000040d0dd : nop dword ptr [rax] ; mov byte ptr [rdi + r9], 0 ; ret
0x0000000000420655 : nop dword ptr [rax] ; mov dword ptr [rsi + 0x10], edx ; mov byte ptr [rsi + 1], cl ; ret
0x0000000000408dc5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000041b694 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000041b414 : nop dword ptr [rax] ; mov eax, dword ptr [rsi] ; sub eax, dword ptr [rdi] ; ret
0x000000000040b2bd : nop dword ptr [rax] ; mov esi, r14d ; call rcx
0x000000000041e6f4 : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000437774 : nop dword ptr [rax] ; mov rdi, rbp ; call r14
0x000000000040cc0c : nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 0x4f] ; ret
0x0000000000404815 : nop dword ptr [rax] ; pop rbp ; ret
0x00000000004171d4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407c74 : nop dword ptr [rax] ; ret
0x000000000041508d : nop dword ptr [rax] ; test byte ptr [rdi + 0x2c], 2 ; jne 0x4150a9 ; ret
0x0000000000407a14 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000043239a : nop word ptr [rax + rax] ; je 0x4323b0 ; ret
0x000000000042940a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000412eca : nop word ptr [rax + rax] ; ret
0x000000000042fd62 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000408da2 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004ad804 : not ah ; std ; jmp rax
0x000000000040f728 : not eax ; and byte ptr [r8 + rsi + 0x10], al ; ret
0x0000000000410452 : not eax ; and eax, 5 ; ret
0x000000000040a6d7 : not eax ; and eax, 6 ; ret
0x000000000042b6d8 : not eax ; pop rbx ; pop rbp ; ret
0x000000000048e6fc : not esi ; add esi, 0x4f ; call 0x43b177
0x000000000048fa66 : or ah, byte ptr [rdi - 0x76b70001] ; ret 0xa8eb
0x000000000042e058 : or al, 0 ; add byte ptr [rdi], cl ; mov esi, 0x8348014b ; ret
0x000000000047a2ac : or al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004443ce : or al, 0x39 ; ret 0x4489
0x0000000000434b44 : or al, 0x39 ; ret 0xc189
0x000000000040ec16 : or al, 0x39 ; retf 0x2d74
0x000000000040ec3d : or al, 0x39 ; retf 0xd975
0x0000000000423b8a : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004172ef : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004295fc : or al, 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000044c8c3 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415fcb : or al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004260cb : or al, 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b75 : or al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rdx
0x000000000041587c : or al, 0x48 ; mov dword ptr [rsp + 8], edi ; call rax
0x0000000000412207 : or al, 0x48 ; sub esp, -0x80 ; pop rbx ; ret
0x0000000000416543 : or al, 0x5b ; ret
0x0000000000410731 : or al, 0x66 ; mov dword ptr [rdx + 8], ecx ; ret
0x000000000041653d : or al, 0x74 ; adc byte ptr [rbp + 0x5b0c74c0], al ; ret
0x0000000000419222 : or al, 0x74 ; sbb ecx, dword ptr [rax - 0x7d] ; rcl byte ptr [rax + rcx*2], 0x39 ; ret 0xf275
0x000000000041019f : or al, 0x83 ; ret
0x0000000000415819 : or al, 0x83 ; retf 0x4cff
0x0000000000401ef9 : or al, 0x83 ; retf 0xe8ff
0x0000000000497fc9 : or al, 0x85 ; div byte ptr [rsi + rdi*4 + 0x39] ; retf 0xba7d
0x0000000000410604 : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000042d5ec : or al, 0x89 ; ret 0xe281
0x00000000004912fd : or al, 0x89 ; retf 0x894c
0x00000000004278b9 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000041b6b6 : or al, 0x8d ; add al, 0x40 ; ret
0x0000000000454e80 : or al, 0x8d ; inc qword ptr [rax - 0x79f0fe07] ; ret
0x000000000041227d : or al, 0x8e ; add rcx, rsi ; jmp rcx
0x00000000004a98d6 : or al, 0x8f ; jge 0x4a98d3 ; out dx, eax ; call rcx
0x0000000000449cfb : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000041b692 : or al, 0xc3 ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 8] ; ret
0x000000000047f2f7 : or al, 0xe8 ; ret
0x00000000004b941c : or al, 0xf ; add byte ptr [rax], al ; adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x0000000000409a5b : or al, 0xf ; mov bh, 0x87 ; mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x0000000000489e29 : or al, 0xf ; xchg eax, ebp ; ret 0xafe8
0x00000000004b62b5 : or al, 0xf6 ; call rax
0x00000000004b62bd : or al, 0xf6 ; jmp qword ptr [rax]
0x0000000000414ddb : or al, 0xf6 ; ret 0x4901
0x00000000004b6d5d : or al, 0xf7 ; call rax
0x00000000004ccce9 : or al, 0xfd ; call qword ptr [rdx]
0x00000000004b81dd : or al, 0xfe ; call rax
0x00000000004191f3 : or al, 1 ; xor eax, eax ; ret
0x00000000004ad3cc : or al, bh ; std ; call rbx
0x0000000000472d61 : or al, byte ptr [r9] ; jmp 0x46f843
0x000000000048d7a7 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x48a1fe
0x0000000000416794 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x00000000004aef9c : or al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x0000000000409999 : or al, byte ptr [rax] ; and eax, 0x1f ; movzx eax, byte ptr [rdx + rax] ; ret
0x000000000040b881 : or al, byte ptr [rax] ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x0000000000403220 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000040c4d5 : or al, byte ptr [rax] ; ret
0x00000000004b0758 : or al, byte ptr [rax] ; retf 0xb203
0x000000000040b983 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4201
0x000000000041776f : or al, byte ptr [rcx + 0x39] ; retf
0x00000000004a0b15 : or al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xf980
0x000000000042e319 : or al, byte ptr [rcx - 0x7f] ; std ; pop rsi ; add dword ptr [rax], eax ; add al, bl ; retf
0x0000000000472d62 : or al, byte ptr [rcx] ; jmp 0x46f842
0x000000000049b2d0 : or al, ch ; cli ; retf 0xfff6
0x0000000000445515 : or al, ch ; cmc ; retf 0xfffc
0x0000000000437ea2 : or al, ch ; cmp byte ptr [rbx - 0x76be0004], bl ; ret 0x4c8b
0x0000000000494e4b : or al, ch ; jmp rdi
0x000000000044371e : or al, ch ; mov esp, 0x39fffffe ; ret
0x000000000046ae17 : or al, ch ; push rbx ; ret
0x00000000004927c7 : or al, ch ; ret
0x00000000004316b8 : or al, ch ; ret 0xfe61
0x000000000041ce88 : or al, ch ; ret 0xff7d
0x0000000000415888 : or al, ch ; ret 0xffc3
0x00000000004213b8 : or al, ch ; ret 0xfffe
0x00000000004a7cff : or al, ch ; retf
0x000000000047ec80 : or al, ch ; retf 0xf949
0x000000000047a9f0 : or al, ch ; retf 0xf976
0x000000000041d180 : or al, ch ; retf 0xff7a
0x00000000004119ef : or bh, bh ; and eax, 0x2bea52 ; pop rax ; ret
0x0000000000415881 : or bh, bh ; ror byte ptr [rax - 0x75], 1 ; jl 0x4158b5 ; or al, ch ; ret 0xffc3
0x0000000000419fd5 : or bh, byte ptr [rax + 7] ; ret
0x00000000004b6d45 : or bh, dh ; call rax
0x000000000042b6d7 : or bh, dh ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000409a0d : or bl, al ; nop ; ret
0x000000000040b3e2 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004109fe : or bl, ch ; ret
0x0000000000474f73 : or bl, ch ; ret 0x2e66
0x000000000041171f : or bl, dh ; ret
0x000000000041ffbc : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000432436 : or byte ptr [r11 - 0xd], bl ; ret
0x0000000000447520 : or byte ptr [r13 - 0x76c58b40], al ; ret 0xe280
0x000000000040b3ff : or byte ptr [r14 - 0x77], r12b ; adc r13b, r11b ; ret
0x000000000040f637 : or byte ptr [r15], cl ; mov dh, 0x40 ; sub ebx, eax ; ret
0x00000000004252aa : or byte ptr [r15], r9b ; mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x8401
0x000000000041b6b1 : or byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; or al, 0x8d ; add al, 0x40 ; ret
0x0000000000493eda : or byte ptr [r8 + 0x39], cl ; retf 0x40c6
0x000000000043b4b2 : or byte ptr [r8 + 0x63], cl ; ret
0x0000000000470d92 : or byte ptr [r8 + 0x63], r9b ; retf 0xd001
0x0000000000420fc2 : or byte ptr [r8 + 7], r15b ; ret
0x00000000004760d8 : or byte ptr [r8 - 0x497af0fc], bpl ; ret
0x0000000000460855 : or byte ptr [r8 - 0x77], cl ; ret 0x2c6
0x00000000004030d0 : or byte ptr [r8 - 0x77], cl ; ret 0x448b
0x0000000000403ff4 : or byte ptr [r8 - 0x77], r9b ; ret 0x4a89
0x0000000000482d1a : or byte ptr [r8 - 0x77], r9b ; ret 0x848b
0x0000000000481271 : or byte ptr [r8 - 0x7d], r9b ; ret 0x3910
0x0000000000429a7f : or byte ptr [r9 + r9*4 - 0x20], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000450635 : or byte ptr [r9 - 0x77], al ; ret
0x0000000000418a7e : or byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rbx ; ret
0x000000000047646e : or byte ptr [r9], al ; ret 0x63e9
0x000000000040eb98 : or byte ptr [r9], r8b ; xor eax, eax ; mov dword ptr [rdi + 0x10], edx ; ret
0x000000000040ddf3 : or byte ptr [rax + 0x12], bh ; pop rbx ; pop rbp ; ret
0x000000000040faf2 : or byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000049c17e : or byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004212d2 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000433c96 : or byte ptr [rax + 0x39], cl ; ret
0x000000000049cae8 : or byte ptr [rax + 0x39], cl ; ret 0xff2
0x0000000000493edb : or byte ptr [rax + 0x39], cl ; retf 0x40c6
0x00000000004203ff : or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000043b4b3 : or byte ptr [rax + 0x63], cl ; ret
0x000000000045e6e2 : or byte ptr [rax + 0x63], cl ; retf 0x8d48
0x0000000000470d93 : or byte ptr [rax + 0x63], cl ; retf 0xd001
0x00000000004c329b : or byte ptr [rax + 0xb], cl ; pop rbp ; ret
0x00000000004b97e2 : or byte ptr [rax + 0xb], cl ; ret
0x000000000044e999 : or byte ptr [rax + 0xf002178], al ; retf
0x00000000004a0b12 : or byte ptr [rax + 0xf410af9], al ; xchg eax, esp ; ret 0xf980
0x0000000000493ec6 : or byte ptr [rax + 0xf], cl ; mov edi, 0x83481004 ; ret 0x4802
0x000000000044305f : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x8948
0x000000000043b9ff : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000420347 : or byte ptr [rax + 1], bh ; ret
0x000000000041070d : or byte ptr [rax + 6], bh ; ret
0x000000000041070c : or byte ptr [rax + 6], dil ; ret
0x000000000044553a : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000042b577 : or byte ptr [rax + 7], bh ; pop rbx ; ret
0x0000000000420fc3 : or byte ptr [rax + 7], bh ; ret
0x00000000004105db : or byte ptr [rax + 8], bh ; ret
0x00000000004105da : or byte ptr [rax + 8], dil ; ret
0x00000000004c4f77 : or byte ptr [rax + rax], bh ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004b5d08 : or byte ptr [rax + rax], dl ; nop ; cwde ; cmc ; jmp qword ptr [rax]
0x0000000000449418 : or byte ptr [rax + rcx*4 + 0x78], al ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000040d117 : or byte ptr [rax - 0x39], cl ; ret
0x000000000040d116 : or byte ptr [rax - 0x39], r9b ; ret
0x00000000004760d9 : or byte ptr [rax - 0x497af0fc], ch ; ret
0x0000000000407bd2 : or byte ptr [rax - 0x68], cl ; ret
0x000000000046cd60 : or byte ptr [rax - 0x73], 0x6c ; ret
0x0000000000478686 : or byte ptr [rax - 0x73], 0x71 ; add dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000049adff : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000438637 : or byte ptr [rax - 0x75], cl ; js 0x43864d ; mov qword ptr [rsp], rax ; call rsi
0x000000000043863b : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rsi
0x000000000041064e : or byte ptr [rax - 0x77], cl ; add bh, byte ptr [rax + 1] ; ret
0x0000000000409b66 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000401ffc : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000042f97d : or byte ptr [rax - 0x77], cl ; loope 0x42f96f ; retf 0xfffe
0x0000000000416507 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004213f1 : or byte ptr [rax - 0x77], cl ; ret
0x000000000041ae9a : or byte ptr [rax - 0x77], cl ; ret 0x14c
0x0000000000460856 : or byte ptr [rax - 0x77], cl ; ret 0x2c6
0x00000000004030d1 : or byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000403ff5 : or byte ptr [rax - 0x77], cl ; ret 0x4a89
0x0000000000423134 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000482d1b : or byte ptr [rax - 0x77], cl ; ret 0x848b
0x000000000042df5a : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a69e1 : or byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000467a6a : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004675b5 : or byte ptr [rax - 0x77], cl ; ret 0xc985
0x000000000048a8e8 : or byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000496a25 : or byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000004377f6 : or byte ptr [rax - 0x77], cl ; xlatb ; call r8
0x00000000004464bc : or byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045bc56 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000041ba41 : or byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000481272 : or byte ptr [rax - 0x7d], cl ; ret 0x3910
0x000000000042612f : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041bca8 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000041ba69 : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000043127c : or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x0000000000403b9f : or byte ptr [rax - 1], cl ; ret
0x00000000004b5928 : or byte ptr [rax], al ; add byte ptr [rax + 0x46], dl ; cmc ; jmp qword ptr [rax]
0x0000000000440cff : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rax ; and byte ptr [rax - 0x77], cl ; ret
0x000000000042d7c3 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004105c6 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000407b81 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000418bc0 : or byte ptr [rax], al ; je 0x418b7d ; ret
0x0000000000409975 : or byte ptr [rax], al ; js 0x409985 ; ret
0x00000000004278b5 : or byte ptr [rax], al ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000004464ba : or byte ptr [rax], al ; or byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000421329 : or byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041a595 : or byte ptr [rax], al ; ret
0x00000000004b9d18 : or byte ptr [rax], ch ; cmc ; jmp qword ptr [rbx]
0x000000000040917f : or byte ptr [rbp + 0x24], dh ; add rsp, 0x28 ; ret
0x0000000000431157 : or byte ptr [rbp + 0x75f989ff], al ; retf 0xf631
0x00000000004c3f93 : or byte ptr [rbp + 0xb], al ; push rdx ; ret
0x00000000004be46f : or byte ptr [rbp + 0xb], al ; ret
0x00000000004bf27b : or byte ptr [rbp + 0xb], cl ; pop rbx ; ret
0x00000000004b83e8 : or byte ptr [rbp + 1], bh ; add byte ptr [rax], dh ; retf 0xfffe
0x0000000000433419 : or byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000042b2b6 : or byte ptr [rbp + 7], dh ; mov rax, rbx ; pop rbx ; ret
0x000000000042b2b5 : or byte ptr [rbp + 7], sil ; mov rax, rbx ; pop rbx ; ret
0x000000000040bedd : or byte ptr [rbp - 0x10], dh ; ret
0x0000000000447521 : or byte ptr [rbp - 0x76c58b40], al ; ret 0xe280
0x0000000000419c78 : or byte ptr [rbp - 0xc588640], al ; ret
0x0000000000408e43 : or byte ptr [rbp - 0xd], dh ; mov qword ptr [rax + 0x10], rdi ; ret
0x00000000004281b0 : or byte ptr [rbx + 0x1508d07], cl ; mov dword ptr [rdi], edx ; ret
0x000000000043f377 : or byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000497fbe : or byte ptr [rbx + 0x3968244c], cl ; retf 0xb74
0x000000000042b60b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040a69c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000049cea4 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x000000000041ffbd : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000408fe4 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b987d : or byte ptr [rbx + 0xb], al ; ret
0x00000000004bdfa7 : or byte ptr [rbx + rcx + 0x41], al ; ret
0x00000000004b99e8 : or byte ptr [rbx + rcx + 0x4d], al ; ret
0x00000000004ac7ac : or byte ptr [rbx - 0x4d470009], dh ; idiv edi ; ret
0x00000000004602cf : or byte ptr [rbx - 0x76b3f738], al ; out 0x83, eax ; ret
0x000000000048766a : or byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3920
0x000000000044a8ad : or byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3930
0x0000000000432437 : or byte ptr [rbx - 0xd], bl ; ret
0x0000000000405dad : or byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004b57c8 : or byte ptr [rbx], bh ; add byte ptr [rax], al ; cmp byte ptr [rax], 0xf5 ; jmp qword ptr [rax]
0x00000000004b60e8 : or byte ptr [rbx], ch ; add byte ptr [rax], dl ; loop 0x4b60eb ; jmp qword ptr [rax]
0x00000000004b98e8 : or byte ptr [rbx], dl ; cmc ; jmp qword ptr [rdx]
0x000000000043834b : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049f4b3 : or byte ptr [rcx + 0x50b60fd1], cl ; add eax, dword ptr [rcx] ; retf 0x3941
0x000000000049f6f9 : or byte ptr [rcx + 0x50b60fd1], cl ; add eax, dword ptr [rcx] ; retf 0xd539
0x000000000049c9fc : or byte ptr [rcx + 1], al ; ret 0x840f
0x00000000004217a8 : or byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbp ; call rax
0x0000000000429a80 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409271 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438eb9 : or byte ptr [rcx + rcx*4 - 0x28], al ; pop rbx ; pop rbp ; ret
0x0000000000413e72 : or byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000045dd0f : or byte ptr [rcx + rcx*4 - 2], cl ; call 0x419f86
0x00000000004a0621 : or byte ptr [rcx - 0x77], al ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000450636 : or byte ptr [rcx - 0x77], al ; ret
0x000000000049e853 : or byte ptr [rcx - 0x7d], cl ; ret 0x4c30
0x0000000000403b9c : or byte ptr [rcx - 0xb7f7b0], cl ; ret
0x00000000004b6d4c : or byte ptr [rcx], 0xf7 ; jmp qword ptr [rax]
0x00000000004c8d65 : or byte ptr [rcx], al ; add byte ptr [rax + 0x64], bh ; stc ; call rdx
0x0000000000418a7f : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x68], cl ; pop rbx ; ret
0x0000000000411ed9 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000004618bc : or byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xffda
0x00000000004590a1 : or byte ptr [rcx], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4590b5 ; call rax
0x000000000049f807 : or byte ptr [rcx], al ; ret 0x5489
0x000000000047646f : or byte ptr [rcx], al ; ret 0x63e9
0x0000000000448b43 : or byte ptr [rcx], al ; ret 0x840f
0x000000000040e868 : or byte ptr [rcx], al ; retf 0x5789
0x000000000049f48a : or byte ptr [rcx], al ; retf 0x840f
0x000000000049c5ce : or byte ptr [rcx], al ; retf 0xf201
0x000000000040eb99 : or byte ptr [rcx], al ; xor eax, eax ; mov dword ptr [rdi + 0x10], edx ; ret
0x00000000004191e9 : or byte ptr [rcx], al ; xor eax, eax ; ret
0x0000000000484900 : or byte ptr [rcx], bh ; ret
0x00000000004796f9 : or byte ptr [rcx], bh ; ret 0x1a7c
0x00000000004122f2 : or byte ptr [rcx], bh ; retf
0x0000000000435305 : or byte ptr [rcx], ch ; ret 0x73e8
0x000000000040e149 : or byte ptr [rcx], ch ; ret 0x8941
0x0000000000417ca6 : or byte ptr [rcx], ch ; ret 0xe283
0x00000000004b5ad8 : or byte ptr [rcx], cl ; add byte ptr [rax], dh ; jno 0x4b5adb ; jmp qword ptr [rax]
0x0000000000435d09 : or byte ptr [rcx], cl ; ret 0x8b48
0x000000000044eb8c : or byte ptr [rcx], cl ; retf 0x748d
0x00000000004101fb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000043ba13 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; xor eax, eax ; ret
0x00000000004848ff : or byte ptr [rcx], dil ; ret
0x00000000004122f1 : or byte ptr [rcx], dil ; retf
0x00000000004796f8 : or byte ptr [rcx], r15b ; ret 0x1a7c
0x00000000004199f3 : or byte ptr [rdi + 0x24], 1 ; xor eax, eax ; ret
0x0000000000419a00 : or byte ptr [rdi + 0x24], 2 ; xor eax, eax ; ret
0x00000000004b66f0 : or byte ptr [rdi + 0x6d700000], 0xf6 ; call rax
0x00000000004bbaaf : or byte ptr [rdi + 0xb], al ; add cl, byte ptr [rdx + 0xa] ; ret
0x00000000004bbac7 : or byte ptr [rdi + 0xb], al ; add eax, dword ptr [rcx + rax] ; ret
0x00000000004b9af7 : or byte ptr [rdi + 0xb], al ; ret
0x00000000004b5490 : or byte ptr [rdi - 0x33740000], dl ; hlt ; dec eax ; retf
0x000000000045065b : or byte ptr [rdi], cl ; enter 0x2375, -0x17 ; retf
0x000000000049aacf : or byte ptr [rdi], cl ; lahf ; ret 0xc383
0x000000000049b71a : or byte ptr [rdi], cl ; lahf ; ret 0xca21
0x000000000040cd3d : or byte ptr [rdi], cl ; mov bh, 0x40 ; and eax, 1 ; ret
0x000000000041776b : or byte ptr [rdi], cl ; mov bh, 0x4f ; or al, byte ptr [rcx + 0x39] ; retf
0x000000000040f638 : or byte ptr [rdi], cl ; mov dh, 0x40 ; sub ebx, eax ; ret
0x000000000049c3fa : or byte ptr [rdi], cl ; mov dh, 0x47 ; or dword ptr [rcx], ebp ; ret 0x6348
0x000000000040ac0d : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000004252ab : or byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x8401
0x000000000043f1fc : or byte ptr [rdi], cl ; mov es, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042cdc1 : or byte ptr [rdi], cl ; mov esi, 0x83480372 ; ret 0xc604
0x0000000000486bb8 : or byte ptr [rdi], cl ; ret 0x8389
0x000000000041b6b2 : or byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; or al, 0x8d ; add al, 0x40 ; ret
0x0000000000458d42 : or byte ptr [rdi], cl ; test dword ptr [rdx - 0x16000002], ecx ; retf 0xfffe
0x000000000047134e : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc283
0x00000000004c48fb : or byte ptr [rdx + 0xb], al ; pop rsi ; ret
0x00000000004bae55 : or byte ptr [rdx + 0xb], al ; ret
0x00000000004c0115 : or byte ptr [rdx + 0xb], cl ; ret
0x0000000000408cc6 : or byte ptr [rip + 0x1000], ah ; ret
0x00000000004c4f26 : or byte ptr [rsi + 0xb], al ; pop rsi ; ret
0x00000000004c1fef : or byte ptr [rsi + 0xb], al ; ret
0x00000000004bfe1a : or byte ptr [rsi + 0xb], cl ; pop rax ; ret
0x00000000004c2b09 : or byte ptr [rsi + rcx + 0x10], dl ; add dword ptr [rdx], 0x43 ; ret
0x000000000040b400 : or byte ptr [rsi - 0x77], ah ; adc r13b, r11b ; ret
0x0000000000432433 : or byte ptr [rsi - 0x77], ah ; or byte ptr [r11 - 0xd], bl ; ret
0x00000000004bc831 : or byte ptr [rsi], 0x28 ; ret
0x00000000004b809d : or ch, bh ; call qword ptr [rax]
0x00000000004b95a9 : or ch, dh ; call rsi
0x0000000000423e60 : or cl, byte ptr [rax + 0x29] ; ret 0xd329
0x00000000004a49d3 : or cl, byte ptr [rax + 1] ; ret 0x54e8
0x00000000004967c8 : or cl, byte ptr [rax + 1] ; ret 0x5fe8
0x000000000047a2ab : or cl, byte ptr [rax + rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000049c385 : or cl, byte ptr [rax - 0x77] ; retf 0xc148
0x00000000004252fc : or cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000004665a1 : or cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x000000000043088a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000496af5 : or cl, byte ptr [rax - 0x7f] ; ret 0x3ff
0x000000000041cd28 : or cl, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044d149 : or cl, byte ptr [rcx + 0x5b0a74e8] ; pop rbp ; pop r12 ; ret
0x0000000000429889 : or cl, byte ptr [rdx] ; add qword ptr [rax + r9 - 0x7d], rsi ; ret
0x0000000000445f11 : or cl, ch ; ret
0x0000000000453b3a : or cl, ch ; ret 0xfff5
0x000000000041056f : or cl, ch ; retf
0x0000000000469155 : or cl, ch ; retf 0xffe7
0x000000000042fcdb : or dh, byte ptr [rbp - 0x17] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000042fbfc : or dh, byte ptr [rcx - 0xa] ; ret 0x7410
0x0000000000408fde : or dh, byte ptr [rdi + rcx + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fb19 : or dh, dh ; ret 0x4102
0x000000000042fbf3 : or dh, dh ; ret 0x7402
0x0000000000472df5 : or dh, dh ; ret 0xf01
0x000000000049c3fd : or dword ptr [r9], r13d ; ret 0x6348
0x0000000000410f46 : or dword ptr [rax + 1], edi ; ret
0x0000000000401d74 : or dword ptr [rax + 2], ebx ; pop rbx ; ret
0x00000000004142a7 : or dword ptr [rax + 4], 4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a77db : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x228c3d ; call rax
0x00000000004a7787 : or dword ptr [rax - 0x75], ecx ; cmp eax, 0x228ce9 ; call rax
0x0000000000445511 : or dword ptr [rax - 0x75], ecx ; jnp 0x445525 ; call 0x412017
0x000000000043685e : or dword ptr [rax - 0x77], ecx ; ret 0x4489
0x0000000000482969 : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000430451 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004b8e25 : or dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; hlt ; jmp rax
0x0000000000416814 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x70] ; jmp rax
0x0000000000408ac3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000452f87 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004292f6 : or dword ptr [rax], esp ; je 0x429308 ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000000004292f5 : or dword ptr [rax], esp ; je 0x429309 ; mov rax, qword ptr [rax + 0x10] ; ret
0x000000000043a2e0 : or dword ptr [rbp + 4], 2 ; movzx eax, word ptr [rbx + 0x30] ; jmp 0x43a2b6
0x0000000000419976 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000409576 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046149e : or dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x000000000049c3fe : or dword ptr [rcx], ebp ; ret 0x6348
0x0000000000445e5a : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000401de2 : or dword ptr [rip + 0x1543c6], eax ; pop rdx ; pop rbx ; pop rbp ; ret
0x00000000004179e8 : or eax, 0x18c48348 ; ret
0x00000000004b927d : or eax, 0x4300000 ; cmc ; jmp qword ptr [rbx]
0x000000000042612a : or eax, 0x74d28548 ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004085b3 : or eax, 0x83c1894d ; rol byte ptr [rdx], 0x39 ; ret 0xea7f
0x0000000000407ecb : or eax, 0x83cb894d ; rol byte ptr [rdx], 0x39 ; ret 0xea7f
0x000000000042e90e : or eax, 0x89000005 ; ret 0x348
0x0000000000405859 : or eax, 0x89480003 ; ret 0x8b48
0x000000000040cf2a : or eax, 0xb8068948 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000477207 : or eax, 0xe9000000 ; ret 0xffd0
0x0000000000432392 : or eax, 4 ; mov word ptr [rdi + 8], ax ; ret
0x0000000000432431 : or eax, 8 ; mov word ptr [rbx + 8], ax ; pop rbx ; ret
0x00000000004810cd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004c50fc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; retf
0x0000000000435185 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043573c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044e317 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c5074 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000416552 : or eax, dword ptr [rax] ; je 0x416567 ; xor eax, eax ; pop rbx ; ret
0x0000000000486d60 : or eax, dword ptr [rbx - 0x7cb7fe40] ; ret 0x3902
0x00000000004bbac9 : or eax, dword ptr [rbx] ; add al, 1 ; ret
0x0000000000405aee : or eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040a93a : or eax, dword ptr [rcx + 0x39] ; ret 0x677
0x00000000004c4f11 : or eax, dword ptr [rcx + 0xa] ; ret
0x000000000041ba21 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000004bb33f : or eax, dword ptr [rsi + r9 + 0x38] ; ret
0x00000000004ba4b3 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000004c2d56 : or eax, dword ptr [rsi + rcx + 0x28] ; ret
0x00000000004bb340 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00000000004089f3 : or eax, ecx ; or rdx, r8 ; mov qword ptr [rsi], rdx ; ret
0x000000000040d02c : or eax, edx ; mov dword ptr [rsi], eax ; mov eax, 5 ; ret
0x0000000000419cd3 : or eax, esp ; pop rbp ; pop r12 ; ret
0x00000000004c3296 : or ebp, dword ptr [rax + 0xa] ; ret
0x00000000004bd0d2 : or ebp, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000004b8838 : or ebp, edx ; hlt ; call qword ptr [rbx]
0x00000000004b9671 : or ebp, esi ; jmp qword ptr [rbx]
0x0000000000414c24 : or ebx, dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000043f364 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000438cd4 : or ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004c2794 : or ebx, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000004c4a6a : or ebx, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000402676 : or ebx, ebp ; retf
0x0000000000411056 : or ebx, esi ; ret
0x00000000004bf26d : or ecx, dword ptr [r8 + 0xa] ; ret
0x0000000000487b45 : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004bf26e : or ecx, dword ptr [rax + 0xa] ; ret
0x000000000040dfd4 : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000044c889 : or ecx, dword ptr [rbp - 0x49f001b2] ; ret 0xe183
0x000000000047ea27 : or ecx, dword ptr [rcx + 0x63] ; ret
0x0000000000469065 : or ecx, dword ptr [rcx + 0x63] ; ret 0x6b48
0x0000000000409a34 : or ecx, dword ptr [rdi] ; mov bh, 0x87 ; mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x0000000000401e76 : or edi, dword ptr [rax + 1] ; ret
0x0000000000411caa : or edi, dword ptr [rdi + 0x64] ; call rax
0x00000000004ad510 : or edi, ebp ; std ; jmp qword ptr [rdx]
0x00000000004b6d4d : or edi, esi ; jmp qword ptr [rax]
0x000000000044416e : or edx, eax ; mov byte ptr [rax], dl ; mov eax, ebx ; pop rbx ; ret
0x00000000004089f6 : or edx, eax ; mov qword ptr [rsi], rdx ; ret
0x00000000004211fb : or edx, eax ; mov word ptr [rdi + 8], dx ; ret
0x000000000044416d : or edx, r8d ; mov byte ptr [rax], dl ; mov eax, ebx ; pop rbx ; ret
0x00000000004869b6 : or esi, esi ; ret 0xf01
0x0000000000474f72 : or r11b, r13b ; ret 0x2e66
0x00000000004c2793 : or r11d, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000004c4a69 : or r11d, dword ptr [rsi + rcx + 0x38] ; ret
0x00000000004c3295 : or r13d, dword ptr [r8 + 0xa] ; ret
0x0000000000405aed : or r8, qword ptr [r11] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004bb67e : or r8, qword ptr [r14 + rcx + 0x18] ; ret
0x00000000004c2d55 : or r8, qword ptr [rsi + r9 + 0x28] ; ret
0x00000000004bd6c2 : or r8, qword ptr [rsi + rcx + 0x18] ; ret
0x000000000041776e : or r8b, byte ptr [r9 + 0x39] ; retf
0x000000000040c4d4 : or r8b, byte ptr [rax] ; ret
0x00000000004bbac8 : or r8d, dword ptr [r11] ; add al, 1 ; ret
0x00000000004c4c34 : or r8d, dword ptr [r14 + r9 + 0x28] ; ret
0x00000000004bfb66 : or r8d, dword ptr [r14 + rcx + 0x18] ; ret
0x00000000004c4ff4 : or r8d, dword ptr [r14 + rcx + 0x28] ; ret
0x00000000004089f2 : or r8d, ecx ; or rdx, r8 ; mov qword ptr [rsi], rdx ; ret
0x0000000000445f10 : or r9b, r13b ; ret
0x00000000004c4f6b : or rax, qword ptr [r14 + rcx + 0x18] ; ret
0x00000000004c4f10 : or rax, qword ptr [rcx + 0xa] ; ret
0x00000000004ba4b2 : or rax, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000004bc7a7 : or rax, qword ptr [rsi + rcx + 0x18] ; ret
0x0000000000419cd2 : or rax, r12 ; pop rbp ; pop r12 ; ret
0x00000000004bd0d1 : or rbp, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000004089f5 : or rdx, r8 ; mov qword ptr [rsi], rdx ; ret
0x000000000040fb18 : or sil, sil ; ret 0x4102
0x0000000000401d73 : or word ptr [rax + 2], bx ; pop rbx ; ret
0x00000000004099b7 : or word ptr [rax + 8], 0x8000 ; ret
0x000000000042b599 : or word ptr [rbx + 8], 0x200 ; pop rbx ; ret
0x00000000004c6b3d : out 0, al ; add al, dh ; adc eax, edi ; call rcx
0x000000000042fc05 : out 0x40, al ; je 0x42fc29 ; mov eax, dword ptr [rdi] ; add eax, dword ptr [rdi + 0xc] ; ret
0x000000000041ba10 : out 0x44, eax ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000409479 : out 0x45, al ; mov dword ptr [rax], edx ; mov dword ptr [r8 + 4], r9d ; ret
0x000000000041b11f : out 0x48, al ; cmovne eax, edx ; call rax
0x000000000042555d : out 0x4c, al ; mov edi, ebp ; cmovne rdx, rax ; call rdx
0x0000000000408bd8 : out 0x4c, eax ; mov eax, ecx ; ret
0x00000000004160af : out 0x83, al ; ret
0x000000000041ea84 : out 0x83, eax ; ret
0x0000000000440ed0 : out 0x83, eax ; ret 0x4830
0x000000000047a6f5 : out 0x89, al ; ret
0x0000000000414593 : out 0x89, al ; ret 0x8948
0x000000000046fcbf : out 0x89, eax ; and al, 0x38 ; call 0x41bee7
0x000000000048202e : out 0x89, eax ; ret
0x00000000004b029a : out 0xcf, al ; adc esi, ecx ; int 0xcb
0x000000000043b1e7 : out 0xe8, al ; push rbx ; xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000483acb : out 0xe8, eax ; mov edi, 0x89fff9d4 ; ret
0x000000000049ca38 : out 0xe8, eax ; ret 0xf71d
0x0000000000449118 : out 0xe8, eax ; ret 0xfe0d
0x0000000000424278 : out 0xe8, eax ; ret 0xfe96
0x000000000041bef8 : out 0xe8, eax ; ret 0xff61
0x00000000004207ef : out 0xe8, eax ; retf
0x00000000004a8160 : out 0xe8, eax ; retf 0xf7d3
0x000000000040abc9 : out 0xeb, eax ; ret 0x8d48
0x0000000000417688 : out 0xf3, al ; ret
0x00000000004b6125 : out 0xf5, al ; jmp qword ptr [rax]
0x00000000004ad380 : out 0xf9, al ; std ; call rax
0x0000000000472e9f : out 0xfb, al ; add esi, 0x17 ; call r9
0x00000000004ad645 : out 0xfd, al ; call qword ptr [rsi]
0x00000000004489a9 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000047c1e7 : out 2, al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000040e3b7 : out 5, al ; mov qword ptr [rdx + rsi], rdi ; ret
0x00000000004b74c9 : out dx, al ; add byte ptr [rax], al ; nop ; and edi, eax ; call rax
0x0000000000444481 : out dx, al ; add dword ptr [rbx + rbp*2 - 0x7d], esi ; ret 0x8101
0x000000000049960a : out dx, al ; call 0x426013
0x00000000004b6175 : out dx, al ; cmc ; jmp qword ptr [rax]
0x0000000000404835 : out dx, al ; fldcw word ptr [rax + rax] ; add ebx, esi ; ret
0x00000000004b8ca1 : out dx, al ; hlt ; call qword ptr [rbx]
0x00000000004b8c71 : out dx, al ; hlt ; call qword ptr [rdx]
0x00000000004b8d31 : out dx, al ; hlt ; jmp qword ptr [rbx]
0x0000000000409761 : out dx, al ; mov eax, ecx ; ret
0x0000000000409a09 : out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000421677 : out dx, al ; mov rdi, rbp ; call rax
0x00000000004795bc : out dx, al ; mov rdx, qword ptr [rax + r15] ; call r9
0x000000000045ebde : out dx, al ; retf
0x00000000004ad5fd : out dx, al ; std ; call qword ptr [rdi]
0x000000000047c300 : out dx, al ; sti ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000040e061 : out dx, al ; sub rdx, rdi ; mov rax, rdi ; mov dword ptr [rsi], edx ; ret
0x0000000000408aea : out dx, eax ; add al, 0x83 ; ret 0x4828
0x000000000042f06a : out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004950cb : out dx, eax ; call 0x401b33
0x000000000049565c : out dx, eax ; call 0x4120c3
0x00000000004496b0 : out dx, eax ; call 0x425973
0x000000000048e640 : out dx, eax ; call 0x43b0c3
0x0000000000411ee0 : out dx, eax ; call r12
0x000000000043777a : out dx, eax ; call r14
0x000000000042167a : out dx, eax ; call rax
0x00000000004a98da : out dx, eax ; call rcx
0x00000000004b7d8d : out dx, eax ; cli ; call rax
0x00000000004b618d : out dx, eax ; cmc ; call rax
0x0000000000425560 : out dx, eax ; cmovne rdx, rax ; call rdx
0x00000000004364a2 : out dx, eax ; mov eax, dword ptr [rbx + 0x44] ; and eax, dword ptr [rbx + 0x48] ; pop rbx ; ret
0x0000000000436522 : out dx, eax ; mov eax, dword ptr [rbx + 0x44] ; pop rbx ; ret
0x000000000041b11c : out dx, eax ; mov esi, r12d ; cmovne rax, rdx ; call rax
0x000000000048e621 : out dx, eax ; mov qword ptr [rsp + 0x30], r11 ; call 0x43b0c8
0x0000000000447ab7 : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000042967a : out dx, eax ; mov word ptr [rbx + 8], ax ; xor eax, eax ; pop rbx ; ret
0x00000000004afecf : out dx, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; bnd jl 0x4afe8c ; scasd eax, dword ptr [rdi] ; ret
0x000000000049cde1 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000412520 : out dx, eax ; pop rbx ; ret
0x0000000000407a50 : out dx, eax ; ret
0x00000000004ad50d : out dx, eax ; std ; dec dword ptr [rcx] ; out dx, eax ; std ; jmp qword ptr [rdx]
0x00000000004ad511 : out dx, eax ; std ; jmp qword ptr [rdx]
0x00000000004b6171 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, ch ; cmc ; jmp qword ptr [rax]
0x00000000004095b2 : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; sub al, 0 ; xor eax, eax ; ret
0x00000000004bdbd6 : outsb dx, byte ptr [rsi] ; ret
0x0000000000408ce4 : outsb dx, byte ptr [rsi] ; sub al, 0 ; ret
0x000000000040cd52 : outsb dx, byte ptr [rsi] ; sub al, 0 ; test edx, edx ; jne 0x40cd68 ; ret
0x0000000000483d5e : outsb dx, byte ptr [rsi] ; xor bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004b6191 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; loopne 0x4b618c ; cmc ; call qword ptr [rax]
0x00000000004bf435 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x00000000004b6189 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; shr bh, 1 ; cmc ; call rax
0x00000000004b8261 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; nop ; and bh, dh ; call qword ptr [rax]
0x0000000000408cd4 : outsd dx, dword ptr [rsi] ; sub al, 0 ; ret
0x00000000004095b3 : outsd dx, dword ptr [rsi] ; sub al, 0 ; xor eax, eax ; ret
0x0000000000417b0f : outsd dx, dword ptr [rsi] ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040fd20 : pop qword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000047836c : pop qword ptr [rip - 0x16000041] ; push rbx ; retf 0xffff
0x0000000000418527 : pop r12 ; pop r13 ; jmp rax
0x00000000004137c1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e84 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401f6e : pop r12 ; pop r13 ; ret
0x0000000000419758 : pop r12 ; pop r14 ; ret
0x0000000000402048 : pop r12 ; ret
0x0000000000418529 : pop r13 ; jmp rax
0x000000000040954c : pop r13 ; pop r14 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004137c3 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c9 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e86 : pop r13 ; pop r14 ; ret
0x0000000000401f70 : pop r13 ; ret
0x000000000040954e : pop r14 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004137c5 : pop r14 ; pop r15 ; jmp rax
0x00000000004021cb : pop r14 ; pop r15 ; ret
0x0000000000401e88 : pop r14 ; ret
0x00000000004137c7 : pop r15 ; jmp rax
0x00000000004021cd : pop r15 ; ret
0x0000000000414f6e : pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bfe58 : pop rax ; adc dh, dh ; jmp qword ptr [rdx]
0x0000000000489c18 : pop rax ; add al, 0x89 ; pop rax ; sbb al, 0xe9 ; pop rsp ; retf
0x00000000004a65ea : pop rax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040bfec : pop rax ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000414f6f : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047c094 : pop rax ; add byte ptr [rcx - 0x77], cl ; ret 0x3974
0x00000000004199bc : pop rax ; add dword ptr [rbx - 0x75], ebx ; adc al, 0x5d ; pop r12 ; ret
0x0000000000440d04 : pop rax ; and byte ptr [rax - 0x77], cl ; ret
0x00000000004c7688 : pop rax ; clc ; call rcx
0x00000000004bf438 : pop rax ; cli ; cmc ; jmp qword ptr [rbx]
0x00000000004b5a1d : pop rax ; cmc ; call rax
0x00000000004ac668 : pop rax ; idiv r15d ; mov byte ptr [rbp - 9], al ; jmp rax
0x00000000004c1518 : pop rax ; jg 0x4c1514 ; jmp qword ptr [rsi]
0x000000000044e2c9 : pop rax ; lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000004cb108 : pop rax ; mov dl, 0xfb ; call rdi
0x0000000000410365 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004097d0 : pop rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410863 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000409073 : pop rax ; ret
0x00000000004116ec : pop rax ; sal edx, 0xf ; adc dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000489c1b : pop rax ; sbb al, 0xe9 ; pop rsp ; retf
0x00000000004b9c08 : pop rax ; sbb al, 0xf5 ; jmp qword ptr [rax]
0x0000000000472672 : pop rax ; sub cl, byte ptr [rcx + rcx*4 + 0x60] ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004163ee : pop rax ; test rax, rax ; je 0x416406 ; call rax
0x00000000004163ed : pop rax ; test rax, rax ; je 0x416407 ; call rax
0x000000000044b339 : pop rax ; test rax, rax ; je 0x44b355 ; call rax
0x000000000044b338 : pop rax ; test rax, rax ; je 0x44b356 ; call rax
0x000000000040bce2 : pop rbp ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044e834 : pop rbp ; add byte ptr [rcx - 0x7d], cl ; in eax, dx ; add ah, byte ptr [rsi - 0x3f] ; ret
0x000000000041ba99 : pop rbp ; add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000041852a : pop rbp ; jmp rax
0x0000000000404832 : pop rbp ; mov byte ptr [rip + 0x2cd9ee], 1 ; ret
0x00000000004047bf : pop rbp ; mov edi, 0x6d2200 ; jmp rax
0x000000000040fb9b : pop rbp ; mov qword ptr [r11 + 0x20], r10 ; pop r12 ; pop r13 ; ret
0x0000000000418526 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004137c0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e83 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401f6d : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419757 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000402047 : pop rbp ; pop r12 ; ret
0x000000000040954d : pop rbp ; pop r14 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004137c4 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004021ca : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401e87 : pop rbp ; pop r14 ; ret
0x0000000000401dea : pop rbp ; ret
0x000000000045a14f : pop rbp ; ret 0xfffb
0x000000000041732d : pop rbp ; shr ax, 2 ; and eax, 1 ; ret
0x0000000000419e30 : pop rbp ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000043eaf2 : pop rbx ; adc bl, ch ; retf 0x2e66
0x000000000040bcf2 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000477f07 : pop rbx ; add byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; retf 0xffff
0x00000000004b8099 : pop rbx ; add dword ptr [rax], eax ; adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x000000000041e0c7 : pop rbx ; and eax, 0xfffffff8 ; ret
0x000000000040f67a : pop rbx ; cmovne eax, edx ; ret
0x0000000000445926 : pop rbx ; jne 0x445934 ; ret
0x0000000000419b00 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000041a119 : pop rbx ; mov eax, 1 ; pop rbp ; pop r14 ; ret
0x000000000042155e : pop rbx ; mov eax, 2 ; pop rbp ; pop r12 ; ret
0x000000000041dbf4 : pop rbx ; mov eax, 7 ; pop rbp ; pop r12 ; ret
0x00000000004199be : pop rbx ; mov eax, dword ptr [rax + 0x14] ; pop rbp ; pop r12 ; ret
0x000000000044d190 : pop rbx ; mov eax, dword ptr [rdi + 0x30] ; pop rbp ; pop r12 ; ret
0x000000000042144c : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000049c848 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000041c57e : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416568 : pop rbx ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000416432 : pop rbx ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x000000000040a770 : pop rbx ; mov rax, r11 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040c809 : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419d9e : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041d6b0 : pop rbx ; mov rax, rdx ; ret
0x000000000049cdde : pop rbx ; mov rdi, r13 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000419cd1 : pop rbx ; or rax, r12 ; pop rbp ; pop r12 ; ret
0x0000000000418525 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401e82 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401f6c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419756 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000402046 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401de9 : pop rbx ; pop rbp ; ret
0x000000000041732c : pop rbx ; pop rbp ; shr ax, 2 ; and eax, 1 ; ret
0x0000000000401d77 : pop rbx ; ret
0x000000000041b939 : pop rbx ; sete al ; pop rbp ; pop r14 ; ret
0x000000000041b2c5 : pop rbx ; sete al ; ret
0x000000000041b355 : pop rbx ; setne al ; ret
0x00000000004b7e55 : pop rbx ; sti ; call qword ptr [rax]
0x00000000004acf51 : pop rbx ; sti ; dec dword ptr [rax - 5] ; call rbx
0x0000000000409fb0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a3e7 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041a0ff : pop rbx ; xor eax, eax ; pop rbp ; pop r14 ; ret
0x000000000040bad2 : pop rcx ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000409362 : pop rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411494 : pop rcx ; and byte ptr [r9], r8b ; retf 0x6348
0x00000000004b024d : pop rcx ; pop rdx ; sahf ; retf
0x000000000041cc98 : pop rcx ; retf
0x0000000000485ae4 : pop rcx ; stc ; dec dword ptr [rax + 0xf] ; ret 0x894c
0x00000000004b5f09 : pop rdi ; add byte ptr [rax], al ; jo 0x4b5ed7 ; cmc ; call qword ptr [rax]
0x00000000004b5ef9 : pop rdi ; add byte ptr [rax], al ; rol dl, 1 ; cmc ; call rax
0x00000000004be4f5 : pop rdi ; add byte ptr [rax], al ; test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x0000000000408338 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x47], cl ; retf 0xcccc
0x0000000000417b0c : pop rdi ; and byte ptr [rbx - 0x7cb7d791], cl ; ret
0x00000000004ad0f5 : pop rdi ; cld ; jmp qword ptr [rax]
0x00000000004b5a6d : pop rdi ; cmc ; jmp qword ptr [rax]
0x00000000004b010d : pop rdi ; cwde ; sbb ebx, dword ptr [rax + 0x3332bdbd] ; ret
0x00000000004137c8 : pop rdi ; jmp rax
0x00000000004021ce : pop rdi ; ret
0x000000000044fa8d : pop rdi ; retf
0x00000000004950cd : pop rdi ; retf 0xfff6
0x000000000040bc7c : pop rdx ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000448c1d : pop rdx ; add r8b, r13b ; retf
0x0000000000414c92 : pop rdx ; add rsp, 0x30 ; pop rbx ; ret
0x000000000049cf31 : pop rdx ; call rcx
0x00000000004ad065 : pop rdx ; cld ; call rdi
0x00000000004ad061 : pop rdx ; cld ; inc dword ptr [rdx] ; pop rdx ; cld ; call rdi
0x00000000004baf71 : pop rdx ; cmc ; call qword ptr [rbx]
0x00000000004bafb9 : pop rdx ; cmc ; call rsp
0x0000000000422710 : pop rdx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049fc34 : pop rdx ; enter 0xff3, 0x5a ; shl dword ptr [rsi + 0xf], 1 ; ret 0x2676
0x00000000004a10b6 : pop rdx ; je 0x4a10c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401f6b : pop rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401de8 : pop rdx ; pop rbx ; pop rbp ; ret
0x00000000004bb28e : pop rdx ; ret
0x00000000004760d2 : pop rdx ; ret 0xfffb
0x0000000000463a82 : pop rdx ; retf
0x000000000048d79a : pop rdx ; retf 0xffff
0x00000000004b024e : pop rdx ; sahf ; retf
0x000000000049fc38 : pop rdx ; shl dword ptr [rsi + 0xf], 1 ; ret 0x2676
0x000000000040bf0a : pop rsi ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000042e31d : pop rsi ; add dword ptr [rax], eax ; add al, bl ; retf
0x00000000004b80d9 : pop rsi ; add dword ptr [rax], eax ; jo 0x4b8091 ; std ; jmp qword ptr [rax]
0x00000000004088b1 : pop rsi ; add rsp, 0x28 ; ret
0x00000000004b763d : pop rsi ; clc ; jmp rax
0x00000000004ad214 : pop rsi ; cld ; jmp rdi
0x00000000004b5a5d : pop rsi ; cmc ; call rax
0x000000000040954f : pop rsi ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004137c6 : pop rsi ; pop r15 ; jmp rax
0x00000000004021cc : pop rsi ; pop r15 ; ret
0x00000000004b010c : pop rsi ; pop rdi ; cwde ; sbb ebx, dword ptr [rax + 0x3332bdbd] ; ret
0x0000000000401e89 : pop rsi ; ret
0x0000000000485dae : pop rsi ; ret 0xfff8
0x000000000041ccb6 : pop rsi ; retf 0xf66
0x000000000049565e : pop rsi ; retf 0xfff7
0x00000000004b966c : pop rsp ; adc dword ptr [rax], eax ; add byte ptr [rax + 9], ah ; cmc ; jmp qword ptr [rbx]
0x00000000004c4908 : pop rsp ; add byte ptr [rax], al ; add ah, bh ; ret
0x000000000040bd1c : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004cc86c : pop rsp ; add dword ptr [r8], eax ; shl al, 0xfc ; call rax
0x000000000045b604 : pop rsp ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004b0882 : pop rsp ; add ecx, dword ptr [rcx + 1] ; retf 0x1003
0x00000000004cd06c : pop rsp ; add qword ptr [r8], rax ; nop ; std ; call qword ptr [rax]
0x000000000048e624 : pop rsp ; and al, 0x30 ; call 0x43b0c5
0x000000000048e55f : pop rsp ; and al, 0x30 ; jmp 0x48afaa
0x000000000048ed31 : pop rsp ; and al, 0x30 ; jmp 0x48b021
0x000000000048e5fb : pop rsp ; and al, 0x30 ; jmp 0x48b02e
0x000000000048ee1f : pop rsp ; and al, 0x30 ; jmp 0x48b0a3
0x00000000004b761d : pop rsp ; clc ; jmp rax
0x00000000004cb839 : pop rsp ; cld ; call qword ptr [rax]
0x00000000004bb149 : pop rsp ; cmc ; jmp rax
0x0000000000418528 : pop rsp ; pop r13 ; jmp rax
0x000000000040954b : pop rsp ; pop r13 ; pop r14 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004137c2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401e85 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000401f6f : pop rsp ; pop r13 ; ret
0x0000000000419759 : pop rsp ; pop r14 ; ret
0x00000000004ac1b0 : pop rsp ; push rbp ; call rsp
0x00000000004ac1ac : pop rsp ; push rbp ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x0000000000402049 : pop rsp ; ret
0x000000000049e808 : pop rsp ; ret 0xc283
0x0000000000489c1e : pop rsp ; retf
0x0000000000477b06 : pop rsp ; retf 0x71e9
0x00000000004116ca : pop rsp ; retf 0xf101
0x000000000049cae3 : pop rsp ; ror dword ptr [rax - 0x7d], 0xc0 ; or byte ptr [rax + 0x39], cl ; ret 0xff2
0x00000000004c229d : popfq ; add byte ptr [rax], al ; xor bh, bh ; call qword ptr [rcx]
0x00000000004b7d3d : popfq ; cli ; jmp qword ptr [rax]
0x000000000042841f : popfq ; lea ecx, [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000049b299 : por mm4, qword ptr [rdi + rcx + 0x1f] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d202 : por mm6, qword ptr [rdi + rcx + 0x1f] ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004b6059 : push -0x21800000 ; cmc ; call rax
0x00000000004136cb : push -0x3b7cb7d0 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004898e4 : push -0x740005cc ; je 0x489918 ; and al, 0x83 ; ret
0x00000000004820a1 : push -0x763fcebb ; ret 0x89be
0x0000000000419c3c : push -0x76b7fee2 ; ret 0x3975
0x00000000004531a7 : push -0x76dbf375 ; retf 0xc889
0x0000000000487ab9 : push -0x7cb72777 ; ret
0x0000000000421737 : push -0x7cb7fc75 ; ret
0x00000000004b66dd : push -0xa ; jmp qword ptr [rax]
0x00000000004befc5 : push 0 ; add byte ptr [rax - 0xe], ch ; cmc ; call rbx
0x00000000004185cc : push 0x20c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f4dd : push 0x247c8b48 ; sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004b5470 : push 0x33000092 ; retf
0x00000000004ac160 : push 0x50fff5fc ; sti ; cmc ; call qword ptr [rax]
0x0000000000472df0 : push 0x56b70f30 ; or dh, dh ; ret 0xf01
0x000000000040aff2 : push 0x5c415d5b ; pop r13 ; ret
0x00000000004acf9d : push 0x6320fff5 ; cmc ; jmp qword ptr [rax]
0x000000000045e702 : push 0x6348cf75 ; ret 0x4489
0x0000000000416431 : push 0x78b485b ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x000000000044b44b : push 0x8bf ; add al, ch ; retf 0xffe4
0x00000000004b81d9 : push 1 ; add al, dl ; or al, 0xfe ; call rax
0x00000000004b7a5f : push qword ptr [rax + 0x10000120] ; jle 0x4b7a68 ; call rax
0x00000000004b7c67 : push qword ptr [rax + 0x31] ; add dword ptr [rax], eax ; jo 0x4b7c8b ; cli ; call rax
0x00000000004b57af : push qword ptr [rax + 0x4000003a] ; cmp ch, dh ; call rax
0x00000000004ad097 : push qword ptr [rax + 0x54] ; cld ; ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004b5567 : push qword ptr [rax + 0x7f000031] ; push rsp ; call rax
0x00000000004b5ef7 : push qword ptr [rax - 0x2fffffa1] ; ret 0xfff5
0x00000000004b70ff : push qword ptr [rax - 0x4fffff2d] ; mov edi, esi ; jmp rax
0x00000000004b59c7 : push qword ptr [rax - 0x4fffffbe] ; cmc ; jmp rax
0x00000000004b5ff7 : push qword ptr [rax - 0x6fffff9a] ; fdiv st(5) ; jmp rax
0x00000000004b6057 : push qword ptr [rax - 0x7fffff98] ; fdivrp st(5) ; call rax
0x00000000004b56a7 : push qword ptr [rax - 0xffffca] ; and ebp, esi ; call rax
0x00000000004b5687 : push qword ptr [rax] ; add byte ptr ss:[rax], al ; retf
0x00000000004b6e6f : push qword ptr [rax] ; ret 0
0x00000000004b6fe7 : push qword ptr [rax] ; retf 0
0x0000000000404e96 : push qword ptr [rbp + 0x10] ; call 0x401925
0x0000000000438cd2 : push qword ptr [rbp + 0xb] ; pop rbx ; ret
0x000000000046c222 : push qword ptr [rbp + 2] ; ret
0x000000000041dac6 : push qword ptr [rbp + rax - 0x18] ; ret 0xff45
0x0000000000421064 : push qword ptr [rbp - 0x26] ; pop rbx ; ret
0x0000000000407e33 : push qword ptr [rbp - 0x26] ; xor eax, eax ; ret
0x000000000040be65 : push qword ptr [rbp - 0x28] ; mov dword ptr [rsi], 0xa0 ; ret
0x000000000041a73b : push qword ptr [rbp - 0x41] ; jmp 0x41a707
0x000000000042aac8 : push qword ptr [rbp - 0x44] ; pop rbx ; ret
0x0000000000409ac2 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rdi] ; ret
0x00000000004accef : push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x00000000004accd7 : push qword ptr [rbx + rdx*8] ; stc ; inc esp ; sar cl, 1 ; call rsp
0x00000000004acceb : push qword ptr [rbx + rdx*8] ; stc ; push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x0000000000413499 : push qword ptr [rcx] ; rcr byte ptr [rbx - 0x3d], 0x66 ; nop ; xor eax, eax ; ret
0x00000000004315e7 : push qword ptr [rcx] ; ror byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x2949
0x0000000000477506 : push qword ptr [rcx] ; shr al, 0x42 ; ret 0xfffc
0x00000000004774e4 : push qword ptr [rcx] ; shr al, 0x64 ; ret 0xfffc
0x000000000040ad0d : push qword ptr [rcx] ; shr bl, 0xd9 ; xor eax, eax ; ret
0x0000000000472c56 : push r14 ; add cl, ch ; ret 0xffca
0x000000000041d541 : push r8 ; add bh, bh ; inc dword ptr [rax] ; je 0x41d559 ; ret
0x000000000042125b : push r8 ; add bh, bh ; inc dword ptr [rax] ; je 0x421271 ; pop rbx ; ret
0x000000000049c442 : push r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044f261 : push r8 ; pop rbx ; ret
0x00000000004afdc9 : push r8 ; push rcx ; push rdx ; push rbx ; ret
0x000000000041db64 : push r8 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000046be69 : push rax ; adc al, 0x75 ; ret 0x8948
0x000000000045c5b9 : push rax ; adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000411ce2 : push rax ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b7927 : push rax ; adc eax, 0x1b900001 ; stc ; jmp qword ptr [rax]
0x00000000004289ba : push rax ; add al, 0x83 ; ret 0x101
0x000000000040eae3 : push rax ; add al, 0x83 ; ret 0x4101
0x000000000040ea94 : push rax ; add al, 0x83 ; ret 0x4102
0x000000000041d542 : push rax ; add bh, bh ; inc dword ptr [rax] ; je 0x41d558 ; ret
0x000000000042125c : push rax ; add bh, bh ; inc dword ptr [rax] ; je 0x421270 ; pop rbx ; ret
0x000000000040ba78 : push rax ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000047a137 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4363d7
0x0000000000448f88 : push rax ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041ad73 : push rax ; add cl, byte ptr [rcx + 0x39] ; ror dword ptr [rax + 0xf], cl ; ret 0x1f0f
0x0000000000451e27 : push rax ; add dword ptr [rax - 0x76b7fead], ecx ; insb byte ptr [rdi], dx ; ret
0x0000000000460538 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76bbfe16], al ; retf
0x00000000004135ea : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x000000000049912a : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000040eb93 : push rax ; add dword ptr [rcx], eax ; retf 0x4783
0x000000000040e2ca : push rax ; add dword ptr [rdx + 0xc], eax ; xor eax, eax ; ret
0x000000000049f4b8 : push rax ; add eax, dword ptr [rcx] ; retf 0x3941
0x000000000049f6fe : push rax ; add eax, dword ptr [rcx] ; retf 0xd539
0x00000000004c0381 : push rax ; add edi, dword ptr [rdx + 0x380e0a01] ; ret
0x000000000049c443 : push rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043421d : push rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040e871 : push rax ; and al, 1 ; sar byte ptr [rcx], cl ; bnd jg 0x40e849 ; ret
0x000000000048f694 : push rax ; and byte ptr [rbp - 0x75], al ; xor al, 0x24 ; jmp 0x48b8a9
0x00000000004979fc : push rax ; call 0x4244c3
0x00000000004b592c : push rax ; cmc ; jmp qword ptr [rax]
0x00000000004b64bc : push rax ; cmp dh, dh ; call rax
0x000000000043957d : push rax ; dec dword ptr [rbx + rcx*4 + 0x4a] ; and byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000004955d7 : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000004ac148 : push rax ; div ebp ; call qword ptr [rax]
0x00000000004ac837 : push rax ; fdivrp st(7) ; call qword ptr [rax]
0x00000000004b609f : push rax ; imul eax, dword ptr [rax], 0xf5e09000 ; call qword ptr [rax]
0x000000000045f9fe : push rax ; inc dword ptr [rdi + rcx + 0x48] ; ret 0x7980
0x000000000042c178 : push rax ; inc dword ptr [rdi + rcx + 0x48] ; retf 0x7980
0x00000000004b831c : push rax ; jae 0x4b8320 ; jmp qword ptr [rax]
0x0000000000489d5d : push rax ; je 0x489d51 ; jge 0x489cf1 ; idiv edi ; jmp 0x486787
0x000000000041109f : push rax ; jmp rcx
0x000000000040f23b : push rax ; jne 0x40f225 ; xor eax, eax ; ret
0x000000000046149b : push rax ; loopne 0x461518 ; or dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x00000000004b66d7 : push rax ; mov es, word ptr [rax] ; add al, dh ; push -0xa ; jmp qword ptr [rax]
0x00000000004213f0 : push rax ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000403b9e : push rax ; or byte ptr [rax - 1], cl ; ret
0x0000000000497fbd : push rax ; or byte ptr [rbx + 0x3968244c], cl ; retf 0xb74
0x0000000000453b39 : push rax ; or cl, ch ; ret 0xfff5
0x0000000000421853 : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f262 : push rax ; pop rbx ; ret
0x00000000004afdca : push rax ; push rcx ; push rdx ; push rbx ; ret
0x00000000004aefa0 : push rax ; ret
0x00000000004b6e8f : push rax ; ret 0
0x00000000004b6bcc : push rax ; retf
0x000000000043c0dc : push rax ; retf 0xffff
0x0000000000405227 : push rax ; sbb al, 0x8b ; in al, 1 ; ret 0x8b48
0x000000000041db65 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000432ad1 : push rax ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004ac164 : push rax ; sti ; cmc ; call qword ptr [rax]
0x000000000041644d : push rax ; sub byte ptr [rbp + 0x5bd774c0], al ; ret
0x00000000004b7adc : push rax ; xchg eax, ecx ; stc ; jmp qword ptr [rax]
0x00000000004b5637 : push rax ; xor al, 0 ; add byte ptr [rdi + rbx - 0xb], bh ; call qword ptr [rax]
0x00000000004b55b7 : push rax ; xor al, byte ptr [rax] ; add byte ptr [rsi], dh ; adc al, 0xf5 ; call qword ptr [rax]
0x00000000004b5577 : push rax ; xor dword ptr [rax], eax ; add byte ptr [rbx], bl ; add esi, ebp ; call qword ptr [rax]
0x00000000004b5677 : push rax ; xor eax, 0x20a50000 ; cmc ; call qword ptr [rax]
0x000000000040cc87 : push rax ; xor rax, rax ; ret
0x00000000004501b5 : push rbp ; adc bh, byte ptr [rcx] ; retf 0x2574
0x0000000000466a8c : push rbp ; adc byte ptr [rax + rdx - 0x7d], dh ; ret
0x000000000040e39c : push rbp ; add bl, ch ; retf
0x000000000040bcd2 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000472dca : push rbp ; add esi, esi ; ret 0x7401
0x0000000000414600 : push rbp ; add rsp, 0x18 ; ret
0x00000000004ac1b1 : push rbp ; call rsp
0x00000000004905f7 : push rbp ; lahf ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000004ac1ad : push rbp ; lcall [rdi + rdi*8 - 0xb] ; call rsp
0x000000000040485a : push rbp ; mov rbp, rsp ; call rax
0x00000000004be7bf : push rbp ; ret
0x000000000042ce47 : push rbp ; ret 0xffff
0x000000000049d612 : push rbp ; retf 0xf66
0x000000000044f3a4 : push rbp ; sub al, 0x39 ; ret 0x820f
0x000000000046e0af : push rbp ; sub byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x000000000044d208 : push rbp ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d21a ; call rax
0x000000000044d21e : push rbp ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d230 ; call rax
0x0000000000486d3f : push rbp ; sub esi, esi ; ret 0x7502
0x00000000004a543c : push rbp ; xor byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0x89 ; ret
0x00000000004291ae : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040beea : push rbx ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000451e2a : push rbx ; add dword ptr [rax - 0x77], ecx ; insb byte ptr [rdi], dx ; ret
0x00000000004cd8bd : push rbx ; add dword ptr [rax], eax ; loopne 0x4cd876 ; std ; call qword ptr [rax]
0x0000000000432ee2 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000040fb9e : push rbx ; and byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000004c22a1 : push rbx ; call qword ptr [rcx]
0x0000000000435a78 : push rbx ; fild word ptr [rax] ; add bl, ch ; ret
0x000000000040a0ee : push rbx ; ret
0x0000000000478372 : push rbx ; retf 0xffff
0x000000000044d465 : push rbx ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d477 ; call rax
0x000000000044d464 : push rbx ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d478 ; call rax
0x000000000044d490 : push rbx ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d4a2 ; call rax
0x000000000046e0ab : push rbx ; sub byte ptr [rcx + 0x2b], cl ; push rbp ; sub byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x000000000043b1e9 : push rbx ; xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000451535 : push rcx ; add al, byte ptr [rbx - 0x3f7cfc3f] ; add dword ptr [rcx], edi ; ret 0x440f
0x0000000000461f6f : push rcx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040befa : push rcx ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000047b903 : push rcx ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000451e65 : push rcx ; add dword ptr [rcx], edi ; ret 0x927d
0x00000000004020ae : push rcx ; and byte ptr [rcx], bh ; ret 0x4d0f
0x0000000000482d00 : push rcx ; dec dword ptr [rdi] ; ret 0x7e80
0x00000000004afdcb : push rcx ; push rdx ; push rbx ; ret
0x00000000004bf331 : push rcx ; ret
0x000000000042eb66 : push rcx ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000041e929 : push rdi ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040c021 : push rdi ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004bdc8d : push rdi ; add byte ptr [rax], al ; rol bl, 0xf5 ; jmp rdx
0x0000000000452703 : push rdi ; add dword ptr [rcx], eax ; ret 0x6348
0x000000000049c4d8 : push rdi ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049cefe : push rdi ; and al, 0x8b ; and byte ptr [r9], r15b ; ret 0x8d0f
0x00000000004b7d25 : push rdi ; cli ; call qword ptr [rax]
0x000000000049c90c : push rdi ; idiv edi ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004211ff : push rdi ; or bl, dh ; ret
0x000000000042fbf2 : push rdi ; or dh, dh ; ret 0x7402
0x00000000004bbe26 : push rdi ; ret
0x00000000004239ed : push rdi ; retf
0x0000000000438af5 : push rdi ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004b7a0d : push rdi ; stc ; jmp rax
0x00000000004ad0a9 : push rdx ; cld ; call rcx
0x00000000004b7fb5 : push rdx ; cld ; jmp qword ptr [rax]
0x00000000004257fa : push rdx ; in eax, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x7b8
0x00000000004afdcc : push rdx ; push rbx ; ret
0x00000000004c3f96 : push rdx ; ret
0x000000000044f64d : push rdx ; sbb al, 0xf ; retf 0x5589
0x000000000040f040 : push rdx ; xor byte ptr [rbp + 0x75c589c0], al ; ret 0x634d
0x000000000042062c : push rsi ; adc byte ptr [rax + 0x1d74014e], cl ; ret
0x0000000000418b71 : push rsi ; add al, 0xf6 ; ret 0x7401
0x000000000040bc5c : push rsi ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000472c57 : push rsi ; add cl, ch ; ret 0xffca
0x0000000000428f59 : push rsi ; and byte ptr [rcx - 0x77], cl ; ret
0x00000000004ad174 : push rsi ; and eax, 0x69a7fffc ; cld ; jmp rax
0x00000000004ad3a7 : push rsi ; clc ; std ; call rdi
0x000000000042d398 : push rsi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049c944 : push rsi ; idiv edi ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472df4 : push rsi ; or dh, dh ; ret 0xf01
0x00000000004bf39b : push rsi ; ret
0x000000000045b761 : push rsi ; ret 0xf20
0x000000000045ecf8 : push rsi ; ret 0xf40
0x000000000049fc0e : push rsi ; retf 0xff2
0x000000000043025e : push rsi ; rol byte ptr [rax - 0x78f0f606], 1 ; ret
0x00000000004b5d09 : push rsp ; add byte ptr [rax], al ; nop ; cwde ; cmc ; jmp qword ptr [rax]
0x00000000004bd9e5 : push rsp ; add byte ptr [rax], al ; sub al, al ; cmc ; call qword ptr [rdx]
0x00000000004ccb64 : push rsp ; add dword ptr [rax], r8d ; test al, 2 ; std ; call rdi
0x000000000040dd86 : push rsp ; and al, 0x20 ; xor eax, eax ; jmp 0x40dd5e
0x000000000048fc33 : push rsp ; and al, 0x30 ; mov rdi, qword ptr [r13] ; call 0x42bf29
0x0000000000413010 : push rsp ; and al, 8 ; call rax
0x00000000004b556d : push rsp ; call rax
0x00000000004ad09d : push rsp ; cld ; jmp rcx
0x00000000004ad099 : push rsp ; cld ; ljmp [rbx] ; push rsp ; cld ; jmp rcx
0x00000000004c6a64 : push rsp ; in eax, 0 ; add byte ptr [rax + 5], ch ; clc ; jmp rsp
0x0000000000454aa7 : push rsp ; int1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042ebc1 : push rsp ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c8d64 : push rsp ; or byte ptr [rcx], al ; add byte ptr [rax + 0x64], bh ; stc ; call rdx
0x00000000004798d9 : push rsp ; ret
0x0000000000424fa8 : push rsp ; retf 0xfffd
0x000000000049d60e : push rsp ; shl dword ptr [rsi + 0xf], 0x55 ; retf 0xf66
0x00000000004b9464 : push rsp ; sldt word ptr [rax] ; sub byte ptr [rsi], al ; cmc ; jmp qword ptr [rbx]
0x00000000004bb864 : push rsp ; xor eax, dword ptr [rax] ; add al, cl ; insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x00000000004c05ac : pushfq ; add byte ptr [rax], 0 ; mov al, 0x24 ; idiv bh ; ret
0x000000000042bb54 : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3920
0x00000000004bbbac : pushfq ; add byte ptr ss:[rax], al ; mov al, 0x72 ; cmc ; call qword ptr [rdx]
0x00000000004cd0ac : pushfq ; add qword ptr [r8], rax ; jo 0x4cd0ef ; std ; jmp rdi
0x000000000048588f : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000453340 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000004beeac : pushfq ; imul eax, dword ptr [rax], 0xf5f0e000 ; call qword ptr [rax]
0x00000000004ac2f4 : pushfq ; push rbp ; call rsp
0x0000000000497a75 : pushfq ; ret 0xd308
0x00000000004ad339 : pushfq ; std ; call qword ptr [rcx]
0x0000000000419227 : rcl byte ptr [rax + rcx*2], 0x39 ; ret 0xf275
0x0000000000419096 : rcl byte ptr [rax + rcx*2], 0x39 ; sal byte ptr [rbp - 0x25], 1 ; ret
0x00000000004b6304 : rcl byte ptr [rcx], 0xf6 ; jmp rax
0x00000000004b821c : rcl byte ptr [rcx], 0xfe ; call rax
0x00000000004b7c8c : rcl byte ptr [rdi], 1 ; cli ; call rax
0x00000000004b6f6c : rcl byte ptr [rsi - 9], 1 ; jmp rax
0x00000000004b6c14 : rcl ch, 0xf6 ; jmp qword ptr [rax]
0x000000000042133c : rcl dl, 8 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000432076 : rcr bh, 0xe9 ; fstp st(0) ; seta al ; ret
0x000000000041c27e : rcr byte ptr [rax], 0x48 ; cmp eax, ecx ; jne 0x41c279 ; xor eax, eax ; ret
0x000000000040b2da : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000409fb2 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000040a3e9 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000041a101 : rcr byte ptr [rbp + 0x41], 0x5e ; ret
0x0000000000412b08 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000409fa8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040f9b7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046366f : rcr byte ptr [rbx + 0x5d], 0x89 ; ret 0x1fbe
0x000000000043ba15 : rcr byte ptr [rbx + 0x5d], 0xc3 ; xor eax, eax ; ret
0x0000000000418457 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000412d1b : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004b8098 : rcr byte ptr [rbx + 1], 0 ; adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x000000000041349b : rcr byte ptr [rbx - 0x3d], 0x66 ; nop ; xor eax, eax ; ret
0x000000000044f25c : rcr byte ptr [rbx - 0x3d], 0x90 ; mov eax, dword ptr [rdi + 0x50] ; pop rbx ; ret
0x0000000000402742 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, edx ; ret
0x000000000040ccdb : rcr byte ptr [rbx - 0x3d], 1 ; xor r10d, r10d ; mov rax, r10 ; ret
0x000000000041b687 : rcr byte ptr [rdi], 0xf ; ret 0xf8c1
0x00000000004b5f00 : rcr byte ptr [rdi], 1 ; add byte ptr [rax], al ; ret
0x0000000000401f6a : rcr byte ptr [rdx + 0x5b], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000046a97e : rcr dword ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000425186 : rep stosq qword ptr [rdi], rax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x000000000044e0c8 : rep stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041db69 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004118c1 : rep stosq qword ptr [rdi], rax ; ret
0x00000000004018b9 : ret
0x000000000040342b : ret 0
0x000000000043e253 : ret 0x100
0x000000000040a5af : ret 0x101
0x000000000044416f : ret 0x1088
0x000000000045e837 : ret 0x10b9
0x000000000042d3ae : ret 0x10eb
0x000000000048beb9 : ret 0x11e8
0x000000000049116c : ret 0x11e9
0x0000000000401fe2 : ret 0x1275
0x0000000000447f23 : ret 0x127e
0x000000000043153a : ret 0x1375
0x000000000047f963 : ret 0x13be
0x00000000004b023b : ret 0x13cb
0x000000000047fa9e : ret 0x13e9
0x0000000000402b09 : ret 0x147d
0x00000000004040ca : ret 0x147f
0x000000000041fcbb : ret 0x148
0x0000000000495870 : ret 0x1488
0x00000000004528d8 : ret 0x149
0x000000000041ae9d : ret 0x14c
0x000000000043d9ee : ret 0x15eb
0x00000000004948cd : ret 0x163
0x00000000004751d7 : ret 0x17
0x0000000000482959 : ret 0x1775
0x000000000043c1ec : ret 0x177e
0x00000000004628da : ret 0x18
0x0000000000495d85 : ret 0x18eb
0x0000000000490a2f : ret 0x1a7
0x00000000004796fb : ret 0x1a7c
0x000000000040e18a : ret 0x1aeb
0x000000000040aacd : ret 0x1b8
0x000000000041bf53 : ret 0x1b9
0x000000000044f7ba : ret 0x1be
0x0000000000488072 : ret 0x1c
0x0000000000414161 : ret 0x1c73
0x000000000041ce21 : ret 0x1c74
0x000000000049fc01 : ret 0x1cb
0x00000000004af3cc : ret 0x1d04
0x0000000000431b93 : ret 0x1e7f
0x00000000004636a3 : ret 0x1ebe
0x000000000041648c : ret 0x1ee9
0x00000000004153da : ret 0x1f0f
0x000000000048b9a4 : ret 0x1f2
0x000000000046d42c : ret 0x1f74
0x0000000000443738 : ret 0x1fbe
0x0000000000485253 : ret 0x1feb
0x0000000000454563 : ret 0x2044
0x000000000043152d : ret 0x2076
0x0000000000452763 : ret 0x2108
0x000000000040b368 : ret 0x2149
0x000000000043f688 : ret 0x214c
0x000000000048826d : ret 0x227
0x000000000041ad4c : ret 0x2273
0x00000000004a7766 : ret 0x228d
0x00000000004930d8 : ret 0x22e8
0x000000000041b0b2 : ret 0x2374
0x0000000000456b3a : ret 0x2377
0x0000000000439f3f : ret 0x23e9
0x000000000049f109 : ret 0x2474
0x000000000041bebe : ret 0x25
0x000000000048eeff : ret 0x257e
0x000000000049fc3d : ret 0x2676
0x0000000000450872 : ret 0x26e9
0x00000000004a67ca : ret 0x277e
0x0000000000409535 : ret 0x287e
0x0000000000446dde : ret 0x28b9
0x000000000040877b : ret 0x2901
0x000000000044fd33 : ret 0x2944
0x0000000000430b0e : ret 0x2948
0x0000000000430b1f : ret 0x2949
0x000000000041a96e : ret 0x294c
0x000000000048c5d1 : ret 0x29e8
0x0000000000412cf3 : ret 0x2a7f
0x0000000000423942 : ret 0x2aeb
0x0000000000449909 : ret 0x2b48
0x00000000004a0b6f : ret 0x2b74
0x0000000000487bee : ret 0x2ba
0x000000000044f789 : ret 0x2be
0x000000000041203a : ret 0x2be3
0x0000000000460859 : ret 0x2c6
0x00000000004503ca : ret 0x2c74
0x0000000000404b5a : ret 0x2cd6
0x0000000000401bd2 : ret 0x2ce5
0x00000000004019d2 : ret 0x2ce6
0x000000000046502c : ret 0x2dbe
0x000000000043298c : ret 0x2e00
0x0000000000474f75 : ret 0x2e66
0x0000000000497708 : ret 0x2e8
0x0000000000464b5c : ret 0x2ebe
0x000000000040fefc : ret 0x2ee8
0x0000000000437b5b : ret 0x2fe9
0x0000000000479cd3 : ret 0x30a
0x000000000041495e : ret 0x3101
0x000000000045cb35 : ret 0x3102
0x000000000041ba44 : ret 0x3108
0x000000000045a7eb : ret 0x3138
0x000000000043bedd : ret 0x3145
0x0000000000462401 : ret 0x31be
0x0000000000466b30 : ret 0x3273
0x0000000000414693 : ret 0x327f
0x000000000049b37d : ret 0x3374
0x000000000041840a : ret 0x348
0x0000000000401e3a : ret 0x349
0x0000000000414678 : ret 0x357e
0x00000000004388e0 : ret 0x358
0x000000000043f0bb : ret 0x35e9
0x0000000000435af8 : ret 0x3901
0x0000000000486d66 : ret 0x3902
0x000000000040978c : ret 0x3903
0x000000000042fdea : ret 0x3904
0x000000000044130d : ret 0x390c
0x0000000000481275 : ret 0x3910
0x0000000000420b4a : ret 0x3920
0x000000000044a8b3 : ret 0x3930
0x00000000004589c9 : ret 0x3944
0x000000000041274d : ret 0x3948
0x000000000040b345 : ret 0x394c
0x000000000040882b : ret 0x394d
0x000000000047c098 : ret 0x3974
0x0000000000419c41 : ret 0x3975
0x00000000004491ed : ret 0x3a80
0x000000000045d982 : ret 0x3b04
0x000000000041b7b8 : ret 0x3b46
0x0000000000444e09 : ret 0x3c01
0x000000000044a10a : ret 0x3d
0x0000000000469d37 : ret 0x3e8
0x0000000000496af8 : ret 0x3ff
0x0000000000444775 : ret 0x3ffc
0x0000000000431138 : ret 0x4001
0x000000000042ba7a : ret 0x4030
0x0000000000455e4d : ret 0x4073
0x0000000000435d24 : ret 0x407e
0x0000000000409787 : ret 0x408d
0x000000000040eae6 : ret 0x4101
0x000000000040ea97 : ret 0x4102
0x0000000000446075 : ret 0x4103
0x0000000000450678 : ret 0x4104
0x000000000041772e : ret 0x4108
0x000000000040a5f6 : ret 0x4110
0x0000000000406e80 : ret 0x4118
0x000000000040a05b : ret 0x4120
0x0000000000439446 : ret 0x4130
0x000000000042a9dc : ret 0x4180
0x000000000046dff9 : ret 0x41e8
0x000000000040a88b : ret 0x41e9
0x000000000040b989 : ret 0x4201
0x000000000045898e : ret 0x4202
0x0000000000499fa4 : ret 0x420f
0x0000000000467858 : ret 0x426
0x0000000000496a35 : ret 0x4275
0x000000000049dc6a : ret 0x4375
0x000000000047aa73 : ret 0x4388
0x0000000000439d70 : ret 0x4389
0x0000000000408b8f : ret 0x4401
0x000000000045896a : ret 0x4402
0x0000000000426f15 : ret 0x4404
0x000000000045153e : ret 0x440f
0x0000000000439626 : ret 0x4430
0x000000000046ec30 : ret 0x4466
0x000000000040b082 : ret 0x4470
0x000000000043ec75 : ret 0x4483
0x0000000000436861 : ret 0x4489
0x00000000004030d4 : ret 0x448b
0x000000000041144d : ret 0x448d
0x00000000004303bb : ret 0x44c7
0x000000000040ba10 : ret 0x4501
0x000000000045070e : ret 0x4504
0x0000000000402889 : ret 0x4508
0x00000000004829eb : ret 0x450f
0x0000000000418aca : ret 0x4520
0x000000000042abdd : ret 0x4540
0x000000000044ffab : ret 0x4588
0x0000000000434421 : ret 0x4589
0x00000000004070f4 : ret 0x458b
0x0000000000445f96 : ret 0x4602
0x000000000040946b : ret 0x468b
0x000000000040e93f : ret 0x46c7
0x00000000004a01f1 : ret 0x47e
0x0000000000407ce4 : ret 0x4801
0x00000000004053ee : ret 0x4802
0x0000000000404cc4 : ret 0x4804
0x000000000043c138 : ret 0x4805
0x0000000000417c14 : ret 0x4807
0x000000000041ba87 : ret 0x4808
0x000000000040549c : ret 0x480a
0x0000000000405f5d : ret 0x480f
0x000000000040b3bb : ret 0x4810
0x000000000042d20a : ret 0x4820
0x0000000000408aed : ret 0x4828
0x0000000000440ed2 : ret 0x4830
0x000000000045ede2 : ret 0x4838
0x000000000046a54e : ret 0x4840
0x000000000044050b : ret 0x4850
0x000000000046a6e5 : ret 0x4858
0x0000000000414d0a : ret 0x4864
0x000000000045cf45 : ret 0x4870
0x00000000004146e3 : ret 0x48d
0x000000000041d6c6 : ret 0x48e9
0x0000000000414ddd : ret 0x4901
0x000000000040acb1 : ret 0x4904
0x0000000000402554 : ret 0x4908
0x000000000049df86 : ret 0x4920
0x000000000042b13a : ret 0x4980
0x000000000047f64e : ret 0x49be
0x0000000000403ff8 : ret 0x4a89
0x0000000000440ce4 : ret 0x4bbe
0x000000000040b905 : ret 0x4c01
0x000000000046d28c : ret 0x4c08
0x000000000049e856 : ret 0x4c30
0x0000000000435dfe : ret 0x4c5b
0x0000000000437eaa : ret 0x4c8b
0x000000000046631e : ret 0x4ce8
0x000000000041aed8 : ret 0x4d01
0x000000000040fd79 : ret 0x4d08
0x00000000004020b1 : ret 0x4d0f
0x000000000044360a : ret 0x4d14
0x000000000043e504 : ret 0x4e0f
0x000000000040f94f : ret 0x4f0f
0x000000000047f826 : ret 0x4fbe
0x00000000004347c2 : ret 0x4fe9
0x00000000004181b4 : ret 0x50ff
0x0000000000469ce9 : ret 0x51e8
0x00000000004673c5 : ret 0x52be
0x00000000004116dd : ret 0x5389
0x0000000000467354 : ret 0x53be
0x000000000041f3e7 : ret 0x5489
0x000000000043d16d : ret 0x548b
0x00000000004a49d6 : ret 0x54e8
0x0000000000444ff8 : ret 0x55e9
0x000000000040d9a4 : ret 0x56e8
0x000000000042ae11 : ret 0x5788
0x0000000000455f45 : ret 0x587c
0x0000000000429c0f : ret 0x58b
0x0000000000462ddf : ret 0x5abe
0x0000000000487730 : ret 0x5ae8
0x000000000048fa0a : ret 0x5ae9
0x000000000049d609 : ret 0x5ce
0x0000000000402bb5 : ret 0x5d5b
0x000000000048d4df : ret 0x5eb
0x00000000004967cb : ret 0x5fe8
0x0000000000450a3a : ret 0x60a
0x000000000046722e : ret 0x61be
0x00000000004261ef : ret 0x6348
0x0000000000407eab : ret 0x634c
0x000000000040f047 : ret 0x634d
0x0000000000476471 : ret 0x63e9
0x000000000045e6ee : ret 0x6601
0x000000000040fcf2 : ret 0x6602
0x0000000000418aa5 : ret 0x6608
0x0000000000476faf : ret 0x6638
0x0000000000450b67 : ret 0x66e9
0x000000000040a93d : ret 0x677
0x000000000040a809 : ret 0x6774
0x0000000000411685 : ret 0x6948
0x0000000000469068 : ret 0x6b48
0x000000000040f3ed : ret 0x6c3d
0x000000000040ec9a : ret 0x70e9
0x0000000000432ae9 : ret 0x71e8
0x00000000004107db : ret 0x7274
0x00000000004804d8 : ret 0x72e8
0x0000000000435307 : ret 0x73e8
0x0000000000418b74 : ret 0x7401
0x000000000042fbf5 : ret 0x7402
0x00000000004178a2 : ret 0x7408
0x000000000042fc00 : ret 0x7410
0x0000000000466e75 : ret 0x743e
0x000000000040fe4a : ret 0x74fe
0x0000000000486d42 : ret 0x7502
0x00000000004346ea : ret 0x755
0x000000000047e2c3 : ret 0x75e9
0x000000000040f124 : ret 0x75fe
0x0000000000402fd6 : ret 0x77e
0x0000000000499593 : ret 0x77e8
0x000000000045fa03 : ret 0x7980
0x000000000047c082 : ret 0x7abe
0x0000000000477527 : ret 0x7ae9
0x0000000000417742 : ret 0x7b76
0x0000000000425150 : ret 0x7b8
0x00000000004020b4 : ret 0x7d80
0x0000000000435d5f : ret 0x7e74
0x0000000000482d04 : ret 0x7e80
0x0000000000418545 : ret 0x7e9
0x000000000047fb33 : ret 0x7ee9
0x000000000042b25c : ret 0x7f74
0x00000000004312fa : ret 0x7fe
0x000000000049d793 : ret 0x7fe9
0x000000000042e712 : ret 0x8001
0x00000000004a0f31 : ret 0x803
0x0000000000428539 : ret 0x8041
0x0000000000448bc8 : ret 0x8080
0x0000000000447df9 : ret 0x80eb
0x0000000000444486 : ret 0x8101
0x000000000040cfbc : ret 0x8141
0x000000000042fcba : ret 0x8166
0x0000000000428257 : ret 0x818
0x00000000004052a1 : ret 0x820f
0x0000000000407c57 : ret 0x8301
0x000000000042fdb9 : ret 0x8304
0x0000000000422b54 : ret 0x8308
0x0000000000491387 : ret 0x830f
0x0000000000422cf9 : ret 0x8310
0x000000000042e2bf : ret 0x8341
0x0000000000402cf3 : ret 0x8348
0x0000000000402689 : ret 0x8349
0x000000000042ac13 : ret 0x8380
0x0000000000486bbb : ret 0x8389
0x0000000000407ca2 : ret 0x83c3
0x000000000040c25a : ret 0x8401
0x000000000040a95c : ret 0x840f
0x000000000040e035 : ret 0x8445
0x000000000045c436 : ret 0x8489
0x0000000000482d1e : ret 0x848b
0x00000000004a1ef7 : ret 0x84c7
0x000000000040d242 : ret 0x850f
0x00000000004a07fb : ret 0x8520
0x000000000043dca2 : ret 0x8541
0x000000000046dd09 : ret 0x8545
0x000000000041af68 : ret 0x8548
0x0000000000413137 : ret 0x854d
0x0000000000474b75 : ret 0x8550
0x00000000004077ff : ret 0x858b
0x000000000049d5f8 : ret 0x870f
0x0000000000437c47 : ret 0x875
0x0000000000444362 : ret 0x88
0x0000000000407318 : ret 0x880d
0x000000000044120d : ret 0x8820
0x000000000044893f : ret 0x882f
0x0000000000417aef : ret 0x8840
0x000000000040f583 : ret 0x8841
0x0000000000425abc : ret 0x8844
0x000000000045b7da : ret 0x89
0x000000000040d4b2 : ret 0x8901
0x0000000000409ce9 : ret 0x8908
0x0000000000408836 : ret 0x8941
0x0000000000402b90 : ret 0x8944
0x0000000000402c9f : ret 0x8948
0x000000000042bf22 : ret 0x8949
0x0000000000403c5d : ret 0x894c
0x000000000041aee1 : ret 0x894d
0x00000000004211fc : ret 0x8966
0x000000000040cf14 : ret 0x8980
0x00000000004820a6 : ret 0x89be
0x00000000004691c7 : ret 0x8b01
0x000000000043e614 : ret 0x8b41
0x000000000047e15d : ret 0x8b44
0x0000000000404b56 : ret 0x8b48
0x000000000041582d : ret 0x8b49
0x0000000000451f8e : ret 0x8b4c
0x000000000042451a : ret 0x8c0f
0x0000000000467ccd : ret 0x8c89
0x000000000043088d : ret 0x8d04
0x0000000000453316 : ret 0x8d0f
0x0000000000456b33 : ret 0x8d44
0x00000000004081ec : ret 0x8d48
0x0000000000444232 : ret 0x8d49
0x000000000046cc0d : ret 0x8d4b
0x000000000040b442 : ret 0x8d4c
0x00000000004546f6 : ret 0x8d4d
0x000000000046fd66 : ret 0x8d4e
0x000000000045571f : ret 0x8e0f
0x00000000004115da : ret 0x8ead
0x000000000041e79c : ret 0x8ee8
0x000000000043e6d0 : ret 0x8f0f
0x00000000004851eb : ret 0x8fe8
0x000000000047aa78 : ret 0x8fe9
0x000000000043550d : ret 0x9066
0x000000000040f67d : ret 0x90c3
0x0000000000411619 : ret 0x918d
0x0000000000451e68 : ret 0x927d
0x000000000042fd1a : ret 0x93eb
0x00000000004a58da : ret 0x94
0x00000000004577e6 : ret 0x940f
0x000000000047aae0 : ret 0x941
0x0000000000421be0 : ret 0x944
0x0000000000421bcc : ret 0x945
0x00000000004a1fc9 : ret 0x9488
0x0000000000407331 : ret 0x9777
0x00000000004a1d52 : ret 0x97eb
0x000000000043b2a0 : ret 0x9ae8
0x00000000004a41ba : ret 0x9deb
0x000000000047524a : ret 0x9e73
0x000000000040a8af : ret 0x9e74
0x0000000000430fdb : ret 0x9fe9
0x00000000004b0235 : ret 0x9ff4
0x00000000004c9176 : ret 0xa01
0x000000000040d36e : ret 0xa1e9
0x00000000004860cb : ret 0xa27f
0x000000000043777f : ret 0xa3d
0x000000000046b6f1 : ret 0xa47f
0x000000000042dc9d : ret 0xa67e
0x0000000000431eb2 : ret 0xa74
0x00000000004096c2 : ret 0xa76
0x00000000004273bb : ret 0xa801
0x0000000000473755 : ret 0xa838
0x000000000048fa6c : ret 0xa8eb
0x000000000041c43d : ret 0xa9e8
0x0000000000475ff8 : ret 0xa9e9
0x000000000041add2 : ret 0xab73
0x00000000004342d7 : ret 0xab8
0x000000000041c41f : ret 0xabe8
0x000000000047d90d : ret 0xac75
0x0000000000410545 : ret 0xae0f
0x000000000049776b : ret 0xae75
0x0000000000489e2c : ret 0xafe8
0x00000000004810ab : ret 0xb
0x000000000043f8a0 : ret 0xb07f
0x000000000044659a : ret 0xb0e8
0x00000000004af83e : ret 0xb2ff
0x000000000045ea86 : ret 0xb4e8
0x0000000000408ab5 : ret 0xb60f
0x0000000000409d36 : ret 0xb7c
0x0000000000414ffa : ret 0xb7eb
0x000000000040f7f1 : ret 0xb801
0x000000000046f96d : ret 0xb848
0x0000000000488cd5 : ret 0xb87f
0x000000000042046e : ret 0xb8eb
0x0000000000437067 : ret 0xb9eb
0x000000000047319b : ret 0xba
0x00000000004af880 : ret 0xbc00
0x00000000004a7511 : ret 0xbc74
0x000000000047e81a : ret 0xbc83
0x0000000000401fda : ret 0xbd41
0x000000000040cfe4 : ret 0xbe0f
0x000000000043c604 : ret 0xbe5b
0x00000000004b0bb0 : ret 0xbf04
0x000000000041c015 : ret 0xc031
0x000000000042ed79 : ret 0xc083
0x0000000000430900 : ret 0xc084
0x000000000047cc9e : ret 0xc085
0x000000000041bfe2 : ret 0xc101
0x0000000000408a05 : ret 0xc141
0x000000000040b0e4 : ret 0xc148
0x000000000042d4c5 : ret 0xc149
0x0000000000440ef5 : ret 0xc183
0x000000000042aa01 : ret 0xc189
0x00000000004af196 : ret 0xc202
0x00000000004b0cee : ret 0xc203
0x00000000004af3c8 : ret 0xc204
0x00000000004266c6 : ret 0xc209
0x00000000004b0238 : ret 0xc245
0x000000000040800c : ret 0xc269
0x00000000004083f6 : ret 0xc26b
0x0000000000457c86 : ret 0xc283
0x000000000042e2d6 : ret 0xc284
0x000000000040895b : ret 0xc2f6
0x000000000040cf7d : ret 0xc2f7
0x000000000040f6bf : ret 0xc35b
0x000000000049aad2 : ret 0xc383
0x000000000043b197 : ret 0xc3e8
0x000000000041a578 : ret 0xc3f3
0x00000000004afd1e : ret 0xc405
0x00000000004b1382 : ret 0xc4c3
0x0000000000466352 : ret 0xc589
0x0000000000409792 : ret 0xc5eb
0x000000000042507e : ret 0xc601
0x000000000042cdc8 : ret 0xc604
0x0000000000456df5 : ret 0xc609
0x000000000044c897 : ret 0xc639
0x00000000004453bf : ret 0xc641
0x000000000040ef17 : ret 0xc689
0x0000000000446d96 : ret 0xc748
0x00000000004a4976 : ret 0xc7eb
0x00000000004184a9 : ret 0xc7f
0x000000000041819e : ret 0xc829
0x000000000044ec35 : ret 0xc877
0x00000000004530c6 : ret 0xc889
0x000000000044b1ff : ret 0xc90f
0x000000000046015e : ret 0xc931
0x00000000004675b8 : ret 0xc985
0x000000000042e2e6 : ret 0xc9d8
0x0000000000403029 : ret 0xc9eb
0x00000000004261f2 : ret 0xca01
0x000000000049b71d : ret 0xca21
0x00000000004a79a1 : ret 0xca81
0x000000000042fb03 : ret 0xca83
0x00000000004b023a : ret 0xcbc2
0x0000000000469b6f : ret 0xcbe8
0x000000000042ff17 : ret 0xcbeb
0x00000000004af99c : ret 0xcc04
0x00000000004615c7 : ret 0xce83
0x000000000047edd1 : ret 0xce89
0x000000000046daa5 : ret 0xcf75
0x0000000000455fce : ret 0xcfeb
0x00000000004472ce : ret 0xd001
0x000000000044a11d : ret 0xd009
0x0000000000446d4c : ret 0xd021
0x000000000041b3f3 : ret 0xd029
0x0000000000481678 : ret 0xd030
0x00000000004051aa : ret 0xd089
0x0000000000493e2a : ret 0xd0e8
0x0000000000480f39 : ret 0xd0e9
0x000000000041b123 : ret 0xd0ff
0x00000000004a0b88 : ret 0xd101
0x0000000000430b50 : ret 0xd138
0x000000000040a818 : ret 0xd184
0x0000000000430f29 : ret 0xd1e8
0x000000000041c028 : ret 0xd231
0x000000000040803e : ret 0xd269
0x000000000049c335 : ret 0xd284
0x000000000041dc7a : ret 0xd289
0x0000000000497a76 : ret 0xd308
0x0000000000423e63 : ret 0xd329
0x000000000042e38a : ret 0xd375
0x000000000047d9c9 : ret 0xd3e9
0x000000000041313f : ret 0xd5e9
0x000000000040f146 : ret 0xd689
0x000000000045a243 : ret 0xd889
0x00000000004264f2 : ret 0xd989
0x000000000042729b : ret 0xda7f
0x0000000000437030 : ret 0xdaf7
0x000000000042db42 : ret 0xdb31
0x0000000000481d8f : ret 0xdb85
0x000000000045494f : ret 0xdbe8
0x0000000000450cd4 : ret 0xdc
0x000000000048c61e : ret 0xdce8
0x000000000042e5d8 : ret 0xde30
0x000000000042e857 : ret 0xde75
0x0000000000482b3f : ret 0xde89
0x000000000041796d : ret 0xde9
0x0000000000473fe0 : ret 0xe
0x00000000004adf9a : ret 0xe07
0x000000000040e022 : ret 0xe074
0x00000000004220ad : ret 0xe083
0x00000000004c3724 : ret 0xe0a
0x0000000000407ee6 : ret 0xe183
0x000000000040f316 : ret 0xe1c1
0x0000000000447527 : ret 0xe280
0x0000000000407c81 : ret 0xe281
0x0000000000407c91 : ret 0xe283
0x0000000000403820 : ret 0xe2ff
0x000000000040d0ca : ret 0xe375
0x000000000040963a : ret 0xe377
0x000000000041ae08 : ret 0xe575
0x000000000042b46b : ret 0xe680
0x000000000045edd8 : ret 0xe72
0x00000000004a79ad : ret 0xe725
0x000000000042424d : ret 0xe783
0x0000000000413afe : ret 0xe801
0x000000000045656c : ret 0xe804
0x000000000043269e : ret 0xe808
0x0000000000418918 : ret 0xe809
0x0000000000425867 : ret 0xe828
0x0000000000461e45 : ret 0xe838
0x0000000000474a36 : ret 0xe848
0x00000000004667f9 : ret 0xe8c1
0x0000000000450f42 : ret 0xe8e8
0x000000000042f2d5 : ret 0xe901
0x000000000043c203 : ret 0xe97f
0x000000000042aa17 : ret 0xe980
0x0000000000407ed3 : ret 0xea7f
0x000000000041fd14 : ret 0xeac1
0x000000000042e383 : ret 0xeadb
0x0000000000407d05 : ret 0xeb01
0x000000000040b182 : ret 0xeb75
0x0000000000470be0 : ret 0xed75
0x000000000041b0a8 : ret 0xed85
0x00000000004385fa : ret 0xee75
0x000000000041ad6e : ret 0xef72
0x000000000040d7de : ret 0xef75
0x000000000043697b : ret 0xf009
0x000000000040b792 : ret 0xf01
0x0000000000407c42 : ret 0xf02
0x000000000040fb09 : ret 0xf04
0x000000000045b242 : ret 0xf05
0x00000000004adf9e : ret 0xf07
0x0000000000431ada : ret 0xf0e8
0x000000000040d4ea : ret 0xf139
0x00000000004311bc : ret 0xf175
0x00000000004649c9 : ret 0xf183
0x000000000041a792 : ret 0xf189
0x0000000000496981 : ret 0xf1e9
0x000000000045b763 : ret 0xf20
0x000000000049e52b : ret 0xf208
0x0000000000413129 : ret 0xf221
0x000000000043e5c2 : ret 0xf24
0x000000000041922b : ret 0xf275
0x0000000000408b43 : ret 0xf276
0x0000000000408b0b : ret 0xf277
0x000000000049232d : ret 0xf2e9
0x0000000000461a77 : ret 0xf301
0x0000000000461a85 : ret 0xf370
0x00000000004397d8 : ret 0xf375
0x000000000045ecfa : ret 0xf40
0x0000000000407ee2 : ret 0xf41
0x000000000040b909 : ret 0xf42
0x00000000004672e3 : ret 0xf43
0x00000000004169cb : ret 0xf44
0x000000000040f86e : ret 0xf45
0x0000000000458501 : ret 0xf47f
0x000000000044bb45 : ret 0xf48
0x00000000004a0f3a : ret 0xf575
0x000000000044178b : ret 0xf5e9
0x000000000040b8c0 : ret 0xf601
0x000000000042db06 : ret 0xf631
0x00000000004287a7 : ret 0xf641
0x000000000046f6f8 : ret 0xf66
0x000000000049ca3a : ret 0xf71d
0x000000000045d243 : ret 0xf7e8
0x000000000043e3b2 : ret 0xf82
0x00000000004acbd8 : ret 0xf85e
0x00000000004577b8 : ret 0xf883
0x00000000004a84ba : ret 0xf8af
0x0000000000404daf : ret 0xf8c1
0x000000000049083a : ret 0xf8ff
0x00000000004a0b19 : ret 0xf980
0x000000000044eff7 : ret 0xf983
0x0000000000496cea : ret 0xf98f
0x000000000048d50a : ret 0xf9e2
0x0000000000488c0a : ret 0xfa2b
0x000000000046d64a : ret 0xfa49
0x0000000000476b3a : ret 0xfa5d
0x0000000000470caa : ret 0xfa64
0x000000000046a3fa : ret 0xfa7c
0x0000000000421ff3 : ret 0xfa7f
0x0000000000474dfa : ret 0xfaa1
0x00000000004472e4 : ret 0xfac1
0x000000000047e70a : ret 0xfad0
0x000000000041b719 : ret 0xfad1
0x0000000000465a1a : ret 0xfb20
0x000000000045fd0a : ret 0xfb49
0x000000000049110a : ret 0xfb5e
0x000000000044ae3a : ret 0xfb6b
0x000000000044ca3f : ret 0xfc3
0x00000000004a55ca : ret 0xfc6a
0x000000000044904a : ret 0xfc8f
0x00000000004631da : ret 0xfc9a
0x000000000045d10a : ret 0xfce6
0x00000000004709fa : ret 0xfd14
0x000000000042d63a : ret 0xfd43
0x0000000000429d3a : ret 0xfd7c
0x00000000004ad2e8 : ret 0xfdb5
0x000000000044341a : ret 0xfdd1
0x00000000004ad80c : ret 0xfdeb
0x000000000048fcda : ret 0xfdf3
0x000000000044911a : ret 0xfe0d
0x000000000043fcda : ret 0xfe1c
0x000000000044526a : ret 0xfe4e
0x00000000004316ba : ret 0xfe61
0x00000000004427ea : ret 0xfe79
0x00000000004301ad : ret 0xfe83
0x000000000042427a : ret 0xfe96
0x00000000004a395a : ret 0xfed6
0x0000000000434a7b : ret 0xff01
0x0000000000410db3 : ret 0xff2
0x000000000041ab1a : ret 0xff24
0x000000000041b737 : ret 0xff25
0x00000000004a345a : ret 0xff3c
0x000000000041daca : ret 0xff45
0x0000000000402ac4 : ret 0xff48
0x000000000041befa : ret 0xff61
0x000000000044dd3a : ret 0xff62
0x000000000041ce8a : ret 0xff7d
0x0000000000476ce1 : ret 0xff91
0x0000000000477d9f : ret 0xff95
0x000000000048ec32 : ret 0xffb5
0x00000000004a529d : ret 0xffb9
0x000000000040f570 : ret 0xffba
0x000000000045d1fe : ret 0xffbe
0x000000000041588a : ret 0xffc3
0x0000000000475872 : ret 0xffc5
0x00000000004766b3 : ret 0xffc8
0x0000000000472c5a : ret 0xffca
0x000000000049a8ca : ret 0xffce
0x000000000047720c : ret 0xffd0
0x0000000000471a5a : ret 0xffdc
0x000000000043f74a : ret 0xffe1
0x000000000047125a : ret 0xffe4
0x00000000004893fc : ret 0xffe9
0x000000000042f4bd : ret 0xffef
0x00000000004889ef : ret 0xfff0
0x00000000004b8501 : ret 0xfff4
0x0000000000453b3c : ret 0xfff5
0x00000000004b6b9d : ret 0xfff6
0x00000000004b721d : ret 0xfff7
0x00000000004280ed : ret 0xfff8
0x000000000048f5c4 : ret 0xfff9
0x0000000000466214 : ret 0xfffa
0x000000000045a150 : ret 0xfffb
0x0000000000422e2c : ret 0xfffc
0x000000000042586b : ret 0xfffd
0x0000000000416f90 : ret 0xfffe
0x0000000000405736 : ret 0xffff
0x00000000004007b8 : ret 1
0x000000000043e16a : ret 2
0x00000000004761d0 : ret 3
0x0000000000462120 : ret 4
0x0000000000435165 : ret 7
0x00000000004203f2 : ret 8
0x0000000000493b65 : ret 9
0x0000000000402001 : retf
0x00000000004185ae : retf 0
0x000000000043e809 : retf 0x1001
0x00000000004b0886 : retf 0x1003
0x0000000000460551 : retf 0x1039
0x000000000044335f : retf 0x1074
0x00000000004a0df6 : retf 0x1089
0x000000000040b78a : retf 0x10eb
0x000000000040c1f6 : retf 0x1275
0x0000000000455aba : retf 0x13eb
0x0000000000410d27 : retf 0x148
0x0000000000451a43 : retf 0x1489
0x0000000000447640 : retf 0x149
0x00000000004285ec : retf 0x1574
0x000000000048f395 : retf 0x15e8
0x0000000000414630 : retf 0x1689
0x0000000000439013 : retf 0x17e8
0x000000000040b3c7 : retf 0x197d
0x000000000041468c : retf 0x197f
0x000000000046f5f4 : retf 0x1a8
0x0000000000482333 : retf 0x1abe
0x00000000004a7449 : retf 0x1b8
0x0000000000484e72 : retf 0x1bb
0x0000000000447263 : retf 0x1be
0x00000000004491e1 : retf 0x1bf
0x00000000004284d5 : retf 0x1c74
0x0000000000494211 : retf 0x1e74
0x000000000046414e : retf 0x1ee9
0x000000000040db4c : retf 0x1f0f
0x00000000004ae194 : retf 0x201
0x000000000041783b : retf 0x2277
0x00000000004501b8 : retf 0x2574
0x000000000049e828 : retf 0x257d
0x0000000000415d05 : retf 0x25e9
0x00000000004657d7 : retf 0x26
0x000000000046909a : retf 0x2691
0x0000000000483825 : retf 0x276
0x0000000000403302 : retf 0x284
0x0000000000453289 : retf 0x2944
0x00000000004238f8 : retf 0x2a
0x0000000000415ab0 : retf 0x2b
0x000000000040579b : retf 0x2c
0x0000000000411bb2 : retf 0x2c0b
0x0000000000410192 : retf 0x2c1d
0x000000000040ada2 : retf 0x2c76
0x0000000000401bc2 : retf 0x2ce5
0x00000000004019c2 : retf 0x2ce6
0x000000000040ec18 : retf 0x2d74
0x0000000000416bd5 : retf 0x2e66
0x00000000004347fa : retf 0x30e8
0x0000000000408105 : retf 0x3145
0x000000000040c5b4 : retf 0x317e
0x0000000000461694 : retf 0x31ff
0x0000000000414671 : retf 0x347f
0x000000000042a1d3 : retf 0x348
0x00000000004828e9 : retf 0x34c
0x0000000000410815 : retf 0x387c
0x000000000043dc45 : retf 0x3880
0x0000000000451234 : retf 0x3941
0x0000000000440e86 : retf 0x3945
0x0000000000411a61 : retf 0x3948
0x000000000042b04a : retf 0x394c
0x0000000000463c5f : retf 0x3a80
0x0000000000414a02 : retf 0x3b48
0x00000000004a0b28 : retf 0x3b9
0x00000000004298e3 : retf 0x3b9a
0x000000000047723d : retf 0x3be9
0x000000000048969a : retf 0x3c80
0x00000000004addc6 : retf 0x3f00
0x0000000000497442 : retf 0x3ff
0x0000000000493ede : retf 0x40c6
0x000000000046f6b2 : retf 0x4108
0x000000000042dece : retf 0x4190
0x000000000042bd40 : retf 0x4289
0x000000000049e8df : retf 0x428d
0x000000000044e272 : retf 0x440f
0x0000000000499092 : retf 0x448b
0x00000000004287d1 : retf 0x4677
0x000000000040eb96 : retf 0x4783
0x000000000041f89c : retf 0x4801
0x0000000000461f0a : retf 0x485
0x000000000040d521 : retf 0x4880
0x000000000041149b : retf 0x48f2
0x00000000004046b9 : retf 0x48ff
0x000000000046436e : retf 0x4c89
0x000000000040d775 : retf 0x4c8b
0x00000000004470ae : retf 0x4ce8
0x000000000041581b : retf 0x4cff
0x0000000000440e77 : retf 0x4e7e
0x000000000041162e : retf 0x4f89
0x00000000004107fc : retf 0x517f
0x000000000042dc43 : retf 0x527f
0x000000000044a09c : retf 0x5355
0x000000000042c3c5 : retf 0x5388
0x000000000044b687 : retf 0x5389
0x0000000000463387 : retf 0x53e8
0x0000000000453bac : retf 0x5401
0x0000000000480986 : retf 0x54e8
0x000000000042d926 : retf 0x5541
0x0000000000404d98 : retf 0x5589
0x00000000004a5ad7 : retf 0x57
0x000000000040e86a : retf 0x5789
0x0000000000403e09 : retf 0x5bd
0x0000000000477d1d : retf 0x5be9
0x0000000000411498 : retf 0x6348
0x0000000000449bc5 : retf 0x6349
0x00000000004729f7 : retf 0x6601
0x0000000000471d4a : retf 0x6604
0x000000000040d8fc : retf 0x67e9
0x0000000000477d10 : retf 0x68e9
0x000000000045c1fc : retf 0x69be
0x0000000000414c75 : retf 0x6be
0x000000000049f949 : retf 0x6e83
0x000000000049d1b1 : retf 0x6ee9
0x0000000000438ce3 : retf 0x710
0x0000000000477b07 : retf 0x71e9
0x000000000049d72a : retf 0x7375
0x00000000004a7ab2 : retf 0x74
0x000000000044eb8e : retf 0x748d
0x000000000049ef58 : retf 0x7776
0x000000000042c17d : retf 0x7980
0x0000000000435e0e : retf 0x7b5
0x000000000043a3b7 : retf 0x7b9
0x000000000044d74d : retf 0x7bd
0x0000000000410eb0 : retf 0x7c80
0x000000000049d737 : retf 0x7d74
0x000000000044b72d : retf 0x7de8
0x000000000041b469 : retf 0x7eb
0x000000000049d706 : retf 0x820f
0x00000000004831fa : retf 0x8301
0x0000000000476375 : retf 0x8304
0x000000000041d72e : retf 0x8320
0x000000000042c77a : retf 0x8341
0x0000000000405f5a : retf 0x8348
0x000000000049a00d : retf 0x8349
0x000000000043e4f6 : retf 0x8366
0x00000000004674fe : retf 0x83ff
0x000000000040a7dd : retf 0x840f
0x000000000040fab5 : retf 0x850f
0x000000000043cddd : retf 0x8545
0x0000000000469fdf : retf 0x8548
0x000000000042ad48 : retf 0x860f
0x0000000000417c1d : retf 0x87e
0x00000000004935ef : retf 0x8802
0x00000000004054de : retf 0x8820
0x00000000004a3134 : retf 0x8840
0x0000000000460af1 : retf 0x8841
0x0000000000413f48 : retf 0x8842
0x0000000000408893 : retf 0x8880
0x00000000004110b3 : retf 0x8941
0x0000000000416179 : retf 0x8944
0x00000000004081d5 : retf 0x8948
0x000000000042adbf : retf 0x8949
0x00000000004335e0 : retf 0x894c
0x000000000040fd80 : retf 0x894d
0x0000000000451f7a : retf 0x8966
0x000000000049efcf : retf 0x8977
0x0000000000444daf : retf 0x8b41
0x000000000040730c : retf 0x8b48
0x0000000000477e6e : retf 0x8c0f
0x0000000000434b13 : retf 0x8d0f
0x000000000041143c : retf 0x8d42
0x00000000004278af : retf 0x8d48
0x00000000004a3060 : retf 0x8d4b
0x0000000000485237 : retf 0x8d4c
0x0000000000435d29 : retf 0x8d4d
0x0000000000402d4c : retf 0x8ee8
0x000000000048699c : retf 0x8f0f
0x00000000004207fd : retf 0x9066
0x000000000043a988 : retf 0x908
0x000000000040991b : retf 0x9088
0x000000000040a6f9 : retf 0x950f
0x0000000000450160 : retf 0x9848
0x000000000049ec0e : retf 0x9a7f
0x000000000044345e : retf 0x9ce8
0x000000000042e2ce : retf 0x9e0f
0x0000000000437881 : retf 0x9e9
0x000000000041b5a7 : retf 0xa6eb
0x000000000044a6f1 : retf 0xa9e8
0x0000000000449e5d : retf 0xab8
0x00000000004b0e00 : retf 0xad00
0x00000000004370f0 : retf 0xae8
0x000000000042c1de : retf 0xaeeb
0x0000000000420da2 : retf 0xaf0f
0x00000000004b075a : retf 0xb203
0x000000000042cde3 : retf 0xb275
0x000000000049b71f : retf 0xb3e9
0x00000000004539c9 : retf 0xb489
0x00000000004054d9 : retf 0xb60f
0x000000000040fda3 : retf 0xb70f
0x0000000000497fc4 : retf 0xb74
0x000000000040952a : retf 0xb7e
0x000000000043289f : retf 0xb948
0x0000000000435d64 : retf 0xb97c
0x000000000042b184 : retf 0xb9e9
0x0000000000428817 : retf 0xba76
0x0000000000497fcf : retf 0xba7d
0x0000000000475bff : retf 0xbbe8
0x0000000000498f5d : retf 0xbc7c
0x000000000041a0ec : retf 0xbeb
0x000000000048276d : retf 0xbeff
0x000000000047b850 : retf 0xc031
0x000000000041910e : retf 0xc083
0x0000000000412b3b : retf 0xc085
0x000000000040980a : retf 0xc089
0x0000000000408197 : retf 0xc148
0x0000000000434aa2 : retf 0xc183
0x000000000044b1fb : retf 0xc189
0x000000000042e358 : retf 0xc1d9
0x00000000004a3c63 : retf 0xc283
0x000000000042e36f : retf 0xc3d9
0x0000000000417873 : retf 0xc689
0x0000000000440ec2 : retf 0xc77f
0x00000000004094ba : retf 0xc789
0x000000000045b694 : retf 0xc829
0x000000000044a80c : retf 0xc883
0x00000000004531ac : retf 0xc889
0x00000000004b0dba : retf 0xc902
0x000000000042e2bb : retf 0xc9d9
0x00000000004af1ca : retf 0xca00
0x00000000004ae066 : retf 0xcb00
0x000000000042e302 : retf 0xcbd9
0x0000000000499131 : retf 0xcc7c
0x00000000004b138a : retf 0xcccb
0x00000000004080c4 : retf 0xcccc
0x0000000000465bd1 : retf 0xcdeb
0x000000000040e73d : retf 0xce39
0x000000000044a0d4 : retf 0xce89
0x0000000000470d96 : retf 0xd001
0x000000000040de20 : retf 0xd031
0x000000000040e76c : retf 0xd039
0x000000000040896e : retf 0xd089
0x00000000004ae0c8 : retf 0xd0ff
0x00000000004501e6 : retf 0xd275
0x000000000046ae5d : retf 0xd284
0x000000000041a0a3 : retf 0xd289
0x000000000049f701 : retf 0xd539
0x000000000049e1d9 : retf 0xd639
0x000000000047515c : retf 0xd839
0x000000000048a212 : retf 0xd8f7
0x000000000040ec3f : retf 0xd975
0x000000000043974a : retf 0xdb75
0x000000000045aa2b : retf 0xdb85
0x000000000049c253 : retf 0xdde9
0x000000000043958d : retf 0xdeb
0x000000000048fdfb : retf 0xdfe8
0x00000000004bae12 : retf 0xe0a
0x0000000000434b55 : retf 0xe0c1
0x00000000004839ee : retf 0xe0d3
0x000000000045eef9 : retf 0xe1e8
0x00000000004115d2 : retf 0xe281
0x0000000000431531 : retf 0xe283
0x00000000004278bd : retf 0xe2ff
0x00000000004b0211 : retf 0xe4c8
0x0000000000459a30 : retf 0xe575
0x000000000048aa4f : retf 0xe675
0x0000000000421be3 : retf 0xe680
0x000000000048e2d6 : retf 0xe775
0x0000000000401efb : retf 0xe8ff
0x000000000042e3bf : retf 0xe9db
0x00000000004676da : retf 0xe9ff
0x00000000004088fa : retf 0xea83
0x0000000000408d81 : retf 0xeac1
0x000000000042e342 : retf 0xeadb
0x000000000044737a : retf 0xebe9
0x00000000004284f1 : retf 0xec75
0x000000000041e050 : retf 0xec7e
0x00000000004614a5 : retf 0xed75
0x000000000048ecd8 : retf 0xf
0x00000000004758b1 : retf 0xf02
0x00000000004116cb : retf 0xf101
0x000000000049c5d0 : retf 0xf201
0x000000000041b00b : retf 0xf275
0x00000000004087d4 : retf 0xf41
0x00000000004672ef : retf 0xf42
0x0000000000418e82 : retf 0xf45
0x0000000000461ebb : retf 0xf46
0x000000000046e5ac : retf 0xf48
0x000000000042fb05 : retf 0xf602
0x000000000043115d : retf 0xf631
0x000000000041ccb7 : retf 0xf66
0x00000000004a2fc7 : retf 0xf685
0x00000000004a8162 : retf 0xf7d3
0x0000000000491142 : retf 0xf80e
0x000000000047cf32 : retf 0xf84a
0x000000000042395e : retf 0xf8c1
0x00000000004a0149 : retf 0xf8d1
0x00000000004ac3a8 : retf 0xf8f0
0x00000000004ac3c0 : retf 0xf8f2
0x0000000000454cbd : retf 0xf939
0x000000000047ec82 : retf 0xf949
0x000000000047a9f2 : retf 0xf976
0x0000000000490152 : retf 0xf9b6
0x0000000000489602 : retf 0xfa69
0x000000000040b633 : retf 0xfac1
0x000000000047d322 : retf 0xfbce
0x0000000000475f02 : retf 0xfbd2
0x00000000004723a2 : retf 0xfbfb
0x0000000000456982 : retf 0xfc0c
0x000000000045d012 : retf 0xfc35
0x000000000044cac2 : retf 0xfc61
0x00000000004a3762 : retf 0xfcb2
0x00000000004a49e2 : retf 0xfd45
0x00000000004a40e2 : retf 0xfd4e
0x000000000043e292 : retf 0xfd63
0x00000000004323d2 : retf 0xfd77
0x000000000048a912 : retf 0xfdb1
0x000000000049c1e2 : retf 0xfdcd
0x00000000004ad424 : retf 0xfdf4
0x000000000043b6f2 : retf 0xfe2c
0x00000000004523a2 : retf 0xfe37
0x0000000000443502 : retf 0xfe82
0x00000000004a71e6 : retf 0xfe83
0x00000000004a3652 : retf 0xfed9
0x000000000040dbcd : retf 0xff2
0x000000000040d932 : retf 0xff40
0x000000000041d182 : retf 0xff7a
0x0000000000475a72 : retf 0xffb4
0x0000000000414648 : retf 0xffb9
0x00000000004059c2 : retf 0xffc1
0x0000000000405262 : retf 0xffc8
0x0000000000489cb0 : retf 0xffca
0x000000000048c82a : retf 0xffd9
0x000000000043b062 : retf 0xffda
0x0000000000475681 : retf 0xffdb
0x0000000000478da5 : retf 0xffde
0x000000000044b452 : retf 0xffe4
0x0000000000469157 : retf 0xffe7
0x0000000000478e8e : retf 0xffee
0x00000000004b546d : retf 0xfff4
0x00000000004a4f5a : retf 0xfff5
0x000000000040d912 : retf 0xfff6
0x000000000049565f : retf 0xfff7
0x00000000004979ff : retf 0xfff8
0x000000000047d092 : retf 0xfff9
0x000000000043fb48 : retf 0xfffa
0x0000000000445026 : retf 0xfffb
0x0000000000445518 : retf 0xfffc
0x0000000000424fa9 : retf 0xfffd
0x000000000040d8a5 : retf 0xfffe
0x0000000000404e9b : retf 0xffff
0x0000000000403b0b : retf 1
0x0000000000423532 : retf 2
0x0000000000442fc9 : retf 3
0x0000000000407213 : retf 4
0x0000000000459532 : retf 5
0x00000000004489e1 : retf 6
0x0000000000459272 : retf 7
0x00000000004adf95 : rol al, 7 ; jo 0xffffffffc458e769 ; ret 0xf07
0x0000000000409b1c : rol bl, 0x66 ; nop ; ret
0x000000000040a35e : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004bdc90 : rol bl, 0xf5 ; jmp rdx
0x000000000041b1de : rol bl, 1 ; xor eax, eax ; ret
0x00000000004b6470 : rol byte ptr [rax + 0x31400000], 0xf6 ; call qword ptr [rax]
0x000000000046cc06 : rol byte ptr [rax + 0xf2a073c], cl ; xchg eax, esp ; ret 0x8d4b
0x00000000004b6528 : rol byte ptr [rax + rax - 0x9bc8000], 1 ; call qword ptr [rax]
0x0000000000455e49 : rol byte ptr [rax + rcx*2], 0x39 ; ret 0x4073
0x000000000040abc4 : rol byte ptr [rax - 0x188b7f07], 0xeb ; ret 0x8d48
0x000000000041b231 : rol byte ptr [rax - 0x6af0ffc5], 0xc0 ; pop rbx ; ret
0x0000000000419eef : rol byte ptr [rax - 0x6bf0bd05], 0xc0 ; pop rbx ; ret
0x00000000004471f9 : rol byte ptr [rax - 0x6bf0d9c8], cl ; ret 0x8348
0x000000000043025f : rol byte ptr [rax - 0x78f0f606], 1 ; ret
0x000000000040a379 : rol byte ptr [rax - 0x80], 0xfe ; sete al ; ret
0x000000000043f1ff : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b6e41 : rol byte ptr [rax], 0 ; xor byte ptr [rax - 9], al ; call rax
0x000000000048e70f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp 0x48b1f6
0x000000000048e63a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x43b0c9
0x0000000000438c0c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040cd11 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000004add96 : rol byte ptr [rax], 3 ; hlt ; rol byte ptr [rax], 4 ; ret 0x100
0x00000000004add9a : rol byte ptr [rax], 4 ; ret 0x100
0x000000000041bfbf : rol byte ptr [rbp - 0x77], 1 ; ret 0x8d48
0x000000000042e495 : rol byte ptr [rbp - 0x7b], 1 ; in al, 0xf ; lahf ; ret 0x448d
0x00000000004a1ceb : rol byte ptr [rbp - 0x7c378a2e], 1 ; ret 0xeb01
0x0000000000401fd4 : rol byte ptr [rbp - 0x7c], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xbd41
0x000000000042fc11 : rol byte ptr [rbx + 0x117401e2], 0xf3 ; ret
0x000000000042be32 : rol byte ptr [rbx - 0x3a7c471a], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000040ba0a : rol byte ptr [rbx - 0x7cb7fe40], 1 ; ret 0x4501
0x000000000040f729 : rol byte ptr [rcx + 0x20], 1 ; xor byte ptr [rax], r10b ; ret
0x0000000000435db2 : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000044a114 : rol byte ptr [rcx + 0x80000fe], 1 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd009
0x000000000040c53c : rol byte ptr [rcx + 0xf], 0x44 ; ret
0x0000000000456b2f : rol byte ptr [rcx + 0xf], 1 ; ret 0x8d44
0x0000000000464f02 : rol byte ptr [rcx + rcx*4 - 0x17], 0x89 ; ret 0x8944
0x000000000045bcad : rol byte ptr [rcx + rcx*4 - 0x1f], 0x89 ; ret 0x1fbe
0x0000000000464a46 : rol byte ptr [rcx + rcx*4 - 0xf], 0x89 ; ret 0x8944
0x0000000000463c6b : rol byte ptr [rcx + rcx*4 - 0xf], 0x89 ; ret 0x8948
0x0000000000402b04 : rol byte ptr [rcx + rdi - 0x40], 0x89 ; ret 0x147d
0x0000000000475efa : rol byte ptr [rcx - 0x42], 0xb ; add byte ptr [rax], al ; add al, ch ; retf 0xfbd2
0x00000000004284e9 : rol byte ptr [rcx - 0x80], 1 ; cmp al, 0xe ; add byte ptr [rax - 0x77], cl ; retf 0xec75
0x000000000043e1bb : rol byte ptr [rcx - 0xa], 1 ; ret 0x4901
0x00000000004a5562 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; je 0x4a5579 ; xor eax, eax ; ret
0x0000000000451557 : rol byte ptr [rcx], 0x39 ; ret
0x000000000045153b : rol byte ptr [rcx], 0x39 ; ret 0x440f
0x000000000040d23f : rol byte ptr [rcx], 0x39 ; ret 0x850f
0x00000000004584fe : rol byte ptr [rcx], 0x39 ; ret 0xf47f
0x000000000041b493 : rol byte ptr [rcx], 0x44 ; mov byte ptr [rdx], al ; mov dword ptr [rdi + 8], eax ; ret
0x00000000004252f9 : rol byte ptr [rcx], 0x88 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000498bff : rol byte ptr [rcx], 0x89 ; ret 0x8489
0x0000000000468375 : rol byte ptr [rcx], 0x89 ; ret 0x8941
0x000000000041c4e7 : rol byte ptr [rcx], 0xc0 ; ret
0x000000000041bfec : rol byte ptr [rcx], 1 ; ret 0x894c
0x0000000000484c0e : rol byte ptr [rcx], 1 ; ret 0x8b48
0x000000000040f322 : rol byte ptr [rcx], 1 ; ret 0xe283
0x000000000042b047 : rol byte ptr [rcx], 1 ; retf 0x394c
0x0000000000434b53 : rol byte ptr [rcx], cl ; retf 0xe0c1
0x00000000004998cf : rol byte ptr [rdx], 0x39 ; ret
0x0000000000407ed0 : rol byte ptr [rdx], 0x39 ; ret 0xea7f
0x000000000043d167 : rol byte ptr [rdx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x548b
0x00000000004b0d9a : rol byte ptr [rdx], cl ; xchg eax, esi ; add dword ptr [rbx + 3], edx ; sbb byte ptr [rbx], al ; retf
0x000000000040e8ab : rol byte ptr [rip + 0x48900deb], 0x83 ; ret 0x4801
0x00000000004176c3 : rol byte ptr [rsi], 0x41 ; mov dword ptr [rax + 0x16], eax ; ret
0x00000000004b1380 : rol cl, 0xc2 ; ret
0x00000000004b5efc : rol dl, 1 ; cmc ; call rax
0x0000000000464e9b : rol dword ptr [rax], 0 ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx]
0x00000000004b7109 : rol dword ptr [rax], cl ; add byte ptr [rax], dl ; mov dh, bh ; call qword ptr [rax]
0x0000000000451538 : rol dword ptr [rbx], 0x83 ; rol byte ptr [rcx], 0x39 ; ret 0x440f
0x0000000000407ea6 : rol dword ptr [rcx + rbp - 0x38], 0x39 ; ret 0x634c
0x000000000049aaca : rol dword ptr [rcx + rdi + 0x64], 0x24 ; or byte ptr [rdi], cl ; lahf ; ret 0xc383
0x000000000049b715 : rol dword ptr [rcx + rdi + 0x64], 0x24 ; or byte ptr [rdi], cl ; lahf ; ret 0xca21
0x000000000040a811 : rol dword ptr [rcx - 0x7d], 0xfa ; jg 0x40a82d ; xchg eax, esi ; ret 0xd184
0x000000000043127f : rol dword ptr [rcx], 0x39 ; retf
0x000000000048e2d3 : rol dword ptr [rcx], 0x39 ; retf 0xe775
0x0000000000434b41 : rol ecx, 0xf8 ; or al, 0x39 ; ret 0xc189
0x0000000000472d5f : rol esi, 0x43 ; or al, byte ptr [rcx] ; jmp 0x46f845
0x0000000000434b40 : rol rcx, 0xf8 ; or al, 0x39 ; ret 0xc189
0x000000000041a965 : ror byte ptr [r11 + r9*4 + 0x44], 0x24 ; sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004077fb : ror byte ptr [r8 + 1], 1 ; ret 0x858b
0x000000000040f267 : ror byte ptr [r9 + 0x1b816], 1 ; add byte ptr [rax], al ; ret
0x000000000043e1b8 : ror byte ptr [rax + 0x21], 1 ; rol byte ptr [rcx - 0xa], 1 ; ret 0x4901
0x00000000004096a0 : ror byte ptr [rax + 0x29], 0xf1 ; lea eax, [rcx + r8 + 4] ; ret
0x000000000041c4e1 : ror byte ptr [rax + 0x39], 0xf7 ; setne al ; add eax, eax ; ret
0x000000000045edd5 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000042a678 : ror byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000004326fd : ror byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000046cd95 : ror byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000043106e : ror byte ptr [rax + 0xf], 0x44 ; ret 0xb60f
0x000000000041a574 : ror byte ptr [rax + 0xf], 0x44 ; ret 0xc3f3
0x0000000000473197 : ror byte ptr [rax + 0xf], 1 ; ret 0xba
0x0000000000470a8d : ror byte ptr [rax + 1], 1 ; ret
0x000000000042dc3d : ror byte ptr [rax + 1], 1 ; ret 0x3948
0x00000000004077fc : ror byte ptr [rax + 1], 1 ; ret 0x858b
0x00000000004114a0 : ror byte ptr [rax + 1], 1 ; retf 0x148
0x00000000004a43ef : ror byte ptr [rax + 1], 1 ; retf 0xc148
0x0000000000455e43 : ror byte ptr [rax + 1], cl ; ret 0x8348
0x0000000000405f57 : ror byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004054d6 : ror byte ptr [rax + 1], cl ; retf 0xb60f
0x000000000040e3b4 : ror byte ptr [rax - 0x3f], 0xe6 ; add eax, 0x323c8948 ; ret
0x0000000000428d2d : ror byte ptr [rax - 0x73], 0x77 ; add dword ptr [rcx - 0x77], eax ; ret 0xc148
0x0000000000415883 : ror byte ptr [rax - 0x75], 1 ; jl 0x4158b3 ; or al, ch ; ret 0xffc3
0x00000000004077f8 : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 + 1], 1 ; ret 0x858b
0x00000000004291ab : ror byte ptr [rax - 0x77], 0x53 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004253e3 : ror byte ptr [rax - 0x77], 0xb ; pop rbx ; ret
0x00000000004118bd : ror byte ptr [rax - 0x77], 0xd7 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000466177 : ror byte ptr [rax - 0x77], 1 ; ret 0x349
0x000000000042f853 : ror byte ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000408194 : ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x000000000040893c : ror byte ptr [rax - 0x77], 6 ; mov eax, 2 ; ret
0x0000000000487c47 : ror byte ptr [rax - 0x77], cl ; ret
0x0000000000407da1 : ror byte ptr [rax - 0x7b], 0xf6 ; setne al ; neg eax ; ret
0x0000000000446d46 : ror byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; lahf ; ret 0xd021
0x000000000040e111 : ror byte ptr [rax - 0x7d], 0x7f ; and byte ptr [rax], al ; sete al ; ret
0x000000000041c01e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ac09 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000004180e6 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000042eb67 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000048c0da : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000041b3eb : ror byte ptr [rax - 0x7d], cl ; jle 0x41b468 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd029
0x000000000041b42b : ror byte ptr [rax - 0x7d], cl ; jle 0x41b4a8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd029
0x00000000004053eb : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000404cc1 : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000405499 : ror byte ptr [rax - 0x7d], cl ; ret 0x480a
0x0000000000421328 : ror byte ptr [rax], cl ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004315e9 : ror byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x2949
0x0000000000407306 : ror byte ptr [rbx + 0x6348fc55], 1 ; retf 0x8b48
0x0000000000481349 : ror byte ptr [rbx + 0xf382444], 1 ; ret
0x000000000041a966 : ror byte ptr [rbx + rcx*4 + 0x44], 0x24 ; sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000471389 : ror byte ptr [rbx - 0x74b7b790], cl ; cmp al, ch ; retf
0x00000000004b6e9c : ror byte ptr [rbx - 9], 0xff ; ret
0x000000000040f268 : ror byte ptr [rcx + 0x1b816], 1 ; add byte ptr [rax], al ; ret
0x0000000000409785 : ror byte ptr [rcx + 0x2408dc2], 0x83 ; ret 0x3903
0x000000000046e1cf : ror byte ptr [rcx + 0x2b], 1 ; sub byte ptr [rax + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret
0x000000000044f337 : ror byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040d02d : ror byte ptr [rcx + 0x5b806], 1 ; add byte ptr [rax], al ; ret
0x0000000000432805 : ror byte ptr [rcx + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000040c0ed : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000041a7be : ror byte ptr [rcx + rax - 0x36], 1 ; mov qword ptr [rdi], rdx ; ret
0x000000000040ccd8 : ror byte ptr [rcx + rcx*4 - 0x30], cl ; pop rbx ; ret
0x000000000040cce0 : ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000043b05d : ror byte ptr [rcx + rcx*4 - 1], 0xe8 ; retf 0xffda
0x00000000004a63d8 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000040f875 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000004b7fb0 : ror byte ptr [rdi + 1], 1 ; add byte ptr [rax], al ; push rdx ; cld ; jmp qword ptr [rax]
0x0000000000410f2c : ror byte ptr [rdi], 0x44 ; ret
0x00000000004873e9 : ror byte ptr [rdi], 0x44 ; ret 0x4388
0x00000000004a19fe : ror byte ptr [rdi], 0x44 ; ret 0xdb31
0x0000000000477524 : ror byte ptr [rdi], 0x45 ; ret 0x7ae9
0x0000000000475ff5 : ror byte ptr [rdi], 0x45 ; ret 0xa9e9
0x00000000004308fd : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000404dac : ror byte ptr [rdi], 0x48 ; ret 0xf8c1
0x0000000000434b3e : ror byte ptr [rdi], 0x48 ; rol ecx, 0xf8 ; or al, 0x39 ; ret 0xc189
0x00000000004a40ab : ror byte ptr [rdi], 0x84 ; add dword ptr ss:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f916 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000438914 : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000004280ea : ror byte ptr [rdi], 0x84 ; ret 0xfff8
0x0000000000486043 : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x0000000000404f07 : ror byte ptr [rdi], 0x84 ; retf
0x000000000046ddd6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000041892f : ror byte ptr [rdi], 0x85 ; ret 0
0x0000000000478321 : ror byte ptr [rdi], 0x85 ; ret 0xff95
0x000000000040df9e : ror byte ptr [rdi], 0x85 ; retf
0x0000000000425eb6 : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000048fcdf : ror byte ptr [rdi], 0x85 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000000004598b5 : ror byte ptr [rdi], 0x85 ; xchg eax, esp ; add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000040d685 : ror byte ptr [rdi], 0x88 ; retf 1
0x00000000004a1ae2 : ror byte ptr [rdi], 0x8e ; ret
0x000000000043e3de : ror byte ptr [rdi], 0x8e ; retf
0x0000000000430a66 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a6d99 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000491169 : ror byte ptr [rdi], 0x94 ; ret 0x11e9
0x000000000043f0b8 : ror byte ptr [rdi], 0x94 ; ret 0x35e9
0x000000000043ec72 : ror byte ptr [rdi], 0x94 ; ret 0x4483
0x00000000004347bf : ror byte ptr [rdi], 0x94 ; ret 0x4fe9
0x00000000004a41b7 : ror byte ptr [rdi], 0x94 ; ret 0x9deb
0x00000000004a4973 : ror byte ptr [rdi], 0x94 ; ret 0xc7eb
0x000000000049c24e : ror byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000049c332 : ror byte ptr [rdi], 0x94 ; ret 0xd284
0x0000000000408828 : ror byte ptr [rdi], 0x95 ; ret 0x394d
0x000000000041c1d4 : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x00000000004288f0 : ror byte ptr [rdi], 0x95 ; ret 0xd184
0x0000000000428921 : ror byte ptr [rdi], 0x95 ; sar dword ptr [rsi + rbp], 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000004315ec : ror byte ptr [rdi], 0x9f ; ret 0x2949
0x0000000000487beb : ror byte ptr [rdi], 1 ; ret 0x2ba
0x000000000043d16a : ror byte ptr [rdi], 1 ; ret 0x548b
0x000000000040bbbe : ror byte ptr [rdi], 1 ; test dword ptr [rax + 2], eax ; add byte ptr [rax], al ; ret
0x00000000004667f6 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret 0xe8c1
0x0000000000455e34 : ror byte ptr [rdi], cl ; mov bh, 0x14 ; adc dword ptr [rsi - 0x3f], esp ; ret 0x6608
0x00000000004146bb : ror byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rcx], al ; clc ; ret
0x00000000004146a1 : ror byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rcx], al ; ret
0x000000000040f56d : ror byte ptr [rdi], cl ; ret 0xffba
0x000000000040a7d4 : ror byte ptr [rdi], cl ; test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], al ; retf 0x840f
0x000000000040d59d : ror byte ptr [rdi], cl ; xchg eax, esp ; ror dword ptr [rcx + rdi - 0x1b], 0xf ; lahf ; ret 0xd184
0x00000000004b7f98 : ror byte ptr [rsi + 1], 0 ; and byte ptr [rdx - 4], cl ; jmp qword ptr [rax]
0x00000000004b81dc : ror byte ptr [rsi + rdi*8], 1 ; call rax
0x00000000004b6bdc : ror dh, 0xf6 ; call qword ptr [rax]
0x0000000000414645 : ror dword ptr [rax + 0x39], 1 ; retf 0xffb9
0x000000000041ad77 : ror dword ptr [rax + 0xf], cl ; ret 0x1f0f
0x00000000004a641b : ror dword ptr [rax + 1], 1 ; retf 0x3948
0x00000000004212d5 : ror dword ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000426415 : ror dword ptr [rax - 0x73], 0x4f ; add dword ptr [rcx - 0x77], eax ; ret 0xc148
0x000000000049cae4 : ror dword ptr [rax - 0x7d], 0xc0 ; or byte ptr [rax + 0x39], cl ; ret 0xff2
0x0000000000426f12 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4404
0x0000000000430287 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000041bfa2 : ror dword ptr [rax - 0x7d], 1 ; ret 0xf01
0x000000000042a0e7 : ror dword ptr [rax - 0x7d], cl ; clc ; std ; ja 0x42a0f7 ; call rsi
0x000000000040266f : ror dword ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rbp + 9], dh ; jmp 0x40264d
0x00000000004810cc : ror dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000049aff9 : ror dword ptr [rcx + 0x48682444], 0x63 ; ret
0x000000000044e70a : ror dword ptr [rcx + rcx*2], 0x89 ; ret
0x000000000040d5a0 : ror dword ptr [rcx + rdi - 0x1b], 0xf ; lahf ; ret 0xd184
0x00000000004a4655 : ror dword ptr [rcx - 0x73], 0x78 ; add dword ptr [rcx - 0x77], eax ; ret 0xc148
0x0000000000495d82 : ror dword ptr [rcx - 0x77], cl ; ret 0x18eb
0x000000000049a134 : ror dword ptr [rcx - 0x77], cl ; retf 0x1f0f
0x00000000004415dc : ror dword ptr [rdi - 0x73], 4 ; ret 0x8349
0x0000000000473fdd : ror dword ptr [rdi], 0x85 ; ret 0xe
0x0000000000476cde : ror dword ptr [rdi], 0x85 ; ret 0xff91
0x0000000000430b4d : ror dword ptr [rdi], 0x92 ; ret 0xd138
0x00000000004a3c60 : ror dword ptr [rdi], 0xaf ; retf 0xc283
0x000000000049f4b5 : ror dword ptr [rdi], 1 ; mov dh, 0x50 ; add eax, dword ptr [rcx] ; retf 0x3941
0x000000000049f6fb : ror dword ptr [rdi], 1 ; mov dh, 0x50 ; add eax, dword ptr [rcx] ; retf 0xd539
0x000000000045454e : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000048526e : sahf ; jl 0x48526f ; inc dword ptr [rcx + 1] ; ret 0x8b49
0x000000000049783a : sahf ; ret 0xc031
0x000000000042e382 : sahf ; ret 0xeadb
0x00000000004b024f : sahf ; retf
0x0000000000491308 : sahf ; stc ; dec dword ptr [rcx - 0x77] ; ret 0xc031
0x00000000004b54c5 : sal ah, cl ; call qword ptr [rax]
0x00000000004beee0 : sal al, 1 ; cmc ; call qword ptr [rax]
0x000000000040a6d6 : sal bh, 0xd0 ; and eax, 6 ; ret
0x000000000048e6fb : sal bh, 0xd6 ; add esi, 0x4f ; call 0x43b178
0x0000000000407da7 : sal bh, 0xd8 ; ret
0x000000000041babf : sal bl, 1 ; ret
0x0000000000423aa6 : sal byte ptr [rax + rbx*4 + 0x5b], 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004a362d : sal byte ptr [rax + rcx + 0x48], 0x89 ; ret
0x00000000004217a6 : sal byte ptr [rax + rcx + 0x4c], 0x89 ; out dx, al ; mov rdi, rbp ; call rax
0x000000000042964d : sal byte ptr [rax + rcx + 0x5b], cl ; ret
0x0000000000421672 : sal byte ptr [rax + rdx + 0x4c], 0x89 ; out dx, al ; mov rdi, rbp ; call rax
0x000000000040fb13 : sal byte ptr [rax + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x4102
0x00000000004b61c8 : sal byte ptr [rax], 0 ; xor dh, 0xf5 ; call qword ptr [rax]
0x0000000000493856 : sal byte ptr [rax], 1 ; retf 0x3948
0x000000000044ac27 : sal byte ptr [rbp + 0x16], 0xf3 ; ret
0x00000000004a5671 : sal byte ptr [rbp + 0x34], 0x83 ; ret
0x000000000046da87 : sal byte ptr [rbp + 0x3a], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004320d2 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042d8ea : sal byte ptr [rbp + 0xb], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004569b7 : sal byte ptr [rbp + 6], 0xb8 ; add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000408c07 : sal byte ptr [rbp + 6], cl ; ret
0x000000000041b3b4 : sal byte ptr [rbp + 9], 0x5b ; ret
0x0000000000415f04 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000041b27d : sal byte ptr [rbp - 0x10], 0x80 ; cmp eax, dword ptr [rax] ; jne 0x41b29d ; pop rbx ; ret
0x000000000041b30d : sal byte ptr [rbp - 0x10], 0x80 ; cmp eax, dword ptr [rax] ; jne 0x41b32d ; pop rbx ; ret
0x0000000000407a4e : sal byte ptr [rbp - 0x11], 0xf3 ; ret
0x0000000000438f35 : sal byte ptr [rbp - 0x18], 0x4d ; mov dword ptr [rbx + 0x68], ecx ; pop rbx ; ret
0x0000000000408bd6 : sal byte ptr [rbp - 0x19], 0x4c ; mov eax, ecx ; ret
0x000000000041ba0e : sal byte ptr [rbp - 0x19], 1 ; mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x0000000000417686 : sal byte ptr [rbp - 0x1a], 0xf3 ; ret
0x000000000040a609 : sal byte ptr [rbp - 0x1c], 0x44 ; mov eax, ecx ; pop rbx ; ret
0x000000000041909a : sal byte ptr [rbp - 0x25], 1 ; ret
0x0000000000408d9b : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000004a4849 : sal byte ptr [rbp - 0xc], 1 ; retf 0x8941
0x000000000041a0fc : sal byte ptr [rbp - 0xf], 1 ; pop rbx ; xor eax, eax ; pop rbp ; pop r14 ; ret
0x0000000000414c22 : sal byte ptr [rbx + rcx + 0x5b], 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000043f362 : sal byte ptr [rbx + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000042fb5f : sal byte ptr [rbx + rcx*8 + 0x5b], 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000041300c : sal byte ptr [rbx + rdx - 0x78], 0x54 ; and al, 8 ; call rax
0x00000000004b7ca8 : sal byte ptr [rbx], 1 ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x000000000043967c : sal byte ptr [rcx + 0x49], 0x83 ; ret
0x0000000000410f44 : sal byte ptr [rcx + rcx - 0x48], 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000404857 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x000000000049a5b0 : sal byte ptr [rcx], 1 ; shr al, 0x18 ; retf 0xfffa
0x0000000000434a70 : sal byte ptr [rcx], cl ; inc dword ptr [rbx + 0xf4c02e2] ; scasd eax, dword ptr [rdi] ; retf
0x000000000047c789 : sal byte ptr [rcx], cl ; shr al, 0x9f ; ret
0x000000000046a743 : sal byte ptr [rdi + rbp + 0x48], 0x83 ; ret 0x4858
0x000000000040c1f2 : sal byte ptr [rdx + 0x38], cl ; retf 0x1275
0x000000000046a6e0 : sal byte ptr [rdx + rbp + 0x48], 0x83 ; ret 0x4858
0x00000000004b7c90 : sal byte ptr [rdx], 1 ; add dword ptr [rax], eax ; sbb byte ptr [rdx], 0xfa ; jmp qword ptr [rax]
0x0000000000423a17 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x00000000004134da : sal byte ptr [rsi + rax + 0x48], 0x8b ; jg 0x413500 ; call rax
0x00000000004123e6 : sal byte ptr [rsi + rax + 0x48], 0x8b ; jnp 0x4123fc ; call rax
0x0000000000413738 : sal byte ptr [rsi + rax + 0x48], 0x8b ; jnp 0x41374e ; call rax
0x000000000041b988 : sal byte ptr [rsi + rax + 0x48], 0x8b ; jnp 0x41b9ae ; call rax
0x000000000046a30d : sal byte ptr [rsi + rax + 0x48], 0x8b ; jnp 0x46a30b ; call rax
0x0000000000423c70 : sal byte ptr [rsi + rbx*8 + 0x31], 0xc0 ; pop rbx ; ret
0x000000000042fbcf : sal byte ptr [rsi + rcx - 0x75], 0x43 ; or al, 0x5b ; ret
0x000000000043973d : sal byte ptr [rsp + rbp + 0x41], 0x83 ; ret 0x4801
0x00000000004489ba : sal byte ptr [rsp + rbp - 0x7d], cl ; ret
0x0000000000415b73 : sal byte ptr [rsp + rcx + 0x48], cl ; mov dword ptr [rsp + 8], eax ; call rdx
0x0000000000402b8b : sal byte ptr [rsp + rdi + 0x48], 0x89 ; ret 0x8944
0x0000000000454b16 : sal byte ptr [rsp + rdi*4 + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044d860 : sal byte ptr [rsp + rdx + 0x5b], cl ; ret
0x00000000004b5fbd : sal ch, 1 ; jmp qword ptr [rax]
0x00000000004c2ae1 : sal dh, cl ; jmp qword ptr [rbx]
0x000000000040dca7 : sal dl, 0xf ; adc dword ptr [rsi + 0x40], ebx ; ret
0x000000000040ecb0 : sal dl, 0xf ; adc dword ptr [rsi + 0x40], ecx ; ret
0x000000000040e002 : sal dword ptr [rbx + rdx + 0x48], 0x83 ; ret 0xf01
0x000000000044e12f : sal dword ptr [rsi + rbp*8 + 0x39], cl ; retf
0x000000000040975f : sal dword ptr [rsi + rbp*8 - 0x77], 0xc8 ; ret
0x00000000004116ed : sal edx, 0xf ; adc dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004b786c : sar ah, 0xf8 ; jmp qword ptr [rax]
0x00000000004bf550 : sar ah, 1 ; cmc ; call rsi
0x00000000004ae0c0 : sar bh, 0xc4 ; inc esi ; dec eax ; dec edx ; call rax
0x0000000000438e1d : sar byte ptr [rax + 0x35], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000439c63 : sar byte ptr [rax + 1], 0xf6 ; ret 0xf04
0x00000000004199f0 : sar byte ptr [rax - 0x1e], 0x80 ; and al, 1 ; xor eax, eax ; ret
0x000000000040a33d : sar byte ptr [rax - 0x2c], cl ; ret
0x0000000000419c7a : sar byte ptr [rcx - 0x59], 0xf3 ; ret
0x00000000004b833c : sar byte ptr [rcx - 2], 1 ; jmp qword ptr [rax]
0x000000000041ba75 : sar byte ptr [rcx], 0xc6 ; jl 0x41ba56 ; ret
0x000000000041babb : sar byte ptr [rcx], 0xc6 ; jl 0x41ba96 ; ret
0x000000000049ec0c : sar byte ptr [rcx], 1 ; retf 0x9a7f
0x000000000040e874 : sar byte ptr [rcx], cl ; bnd jg 0x40e846 ; ret
0x00000000004107fa : sar byte ptr [rcx], cl ; retf 0x517f
0x000000000044e12d : sar byte ptr [rcx], cl ; sal dword ptr [rsi + rbp*8 + 0x39], cl ; retf
0x000000000046da03 : sar byte ptr [rdi - 0x26], 1 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ef1d : sar byte ptr [rdi - 0x38], cl ; pop rbx ; ret
0x000000000040f6b7 : sar byte ptr [rdx + 0x41], 0xf ; ret 0xc35b
0x00000000004b7d58 : sar byte ptr [rdx], 1 ; add dword ptr [rax], eax ; jo 0x4b7d47 ; cli ; call qword ptr [rax]
0x00000000004b7d90 : sar byte ptr [rip - 0xb0fffff], 1 ; cli ; jmp qword ptr [rax]
0x000000000046cd91 : sar byte ptr [rsi + 0x26], 0x31 ; ror byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000407951 : sar ch, 0xff ; inc dword ptr [rcx] ; ret 0x458b
0x00000000004ad7c5 : sar ch, cl ; jmp qword ptr [rsi]
0x00000000004accdd : sar cl, 1 ; call rsp
0x00000000004ad518 : sar cl, 1 ; std ; call qword ptr [rdx]
0x00000000004ad384 : sar cl, 1 ; std ; call rax
0x000000000040f94c : sar dword ptr [rax], 0x39 ; ret 0x4f0f
0x0000000000436453 : sar dword ptr [rip - 0x5fd65969], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000428924 : sar dword ptr [rsi + rbp], 0xf ; xchg eax, ebp ; ret 0xd184
0x000000000041b68c : sar eax, 5 ; imul eax, dword ptr [rdi + 0xc] ; ret
0x0000000000408dbf : sar eax, cl ; and eax, 1 ; ret
0x00000000004ad7d1 : sar ebp, 1 ; jmp qword ptr [rsi]
0x00000000004ad7d5 : sar ebp, cl ; call qword ptr [rsi]
0x00000000004accfd : sar ecx, 1 ; jmp rsp
0x00000000004accf1 : sar ecx, cl ; call rsp
0x00000000004accd9 : sar ecx, cl ; inc esp ; sar cl, 1 ; call rsp
0x00000000004acced : sar ecx, cl ; push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x000000000040590e : sar edi, 0xff ; mov eax, 1 ; leave ; ret
0x000000000040a886 : sar edi, cl ; inc dword ptr [rcx - 0x77] ; ret 0x41e9
0x0000000000423b19 : sar edx, 6 ; sub edx, ecx ; mov eax, edx ; pop rbx ; ret
0x00000000004b8550 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], cl ; ret
0x00000000004c5078 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000041ccf1 : sbb al, 0 ; xor eax, eax ; pop rbx ; ret
0x00000000004122e4 : sbb al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ad248 : sbb al, 0x3c ; cld ; jmp qword ptr [rax]
0x000000000041d327 : sbb al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041d809 : sbb al, 0x78 ; xor al, 0x48 ; mov edi, dword ptr [rcx + 0x40] ; call r8
0x0000000000410316 : sbb al, 0x83 ; ret
0x000000000044cf9d : sbb al, 0x83 ; ret 0x4804
0x0000000000475bb2 : sbb al, 0x89 ; ret 0xe083
0x0000000000405228 : sbb al, 0x8b ; in al, 1 ; ret 0x8b48
0x00000000004357f0 : sbb al, 0xc5 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000044517f : sbb al, 0xd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c622c : sbb al, 0xdd ; add byte ptr [rax], al ; nop ; fcomip st(7) ; jmp qword ptr [rbx]
0x0000000000491140 : sbb al, 0xe8 ; retf 0xf80e
0x0000000000489c1c : sbb al, 0xe9 ; pop rsp ; retf
0x000000000044f64e : sbb al, 0xf ; retf 0x5589
0x00000000004b9c09 : sbb al, 0xf5 ; jmp qword ptr [rax]
0x000000000041cd02 : sbb al, 1 ; xor eax, eax ; ret
0x00000000004b8d2c : sbb al, 8 ; add byte ptr [rax], al ; nop ; out dx, al ; hlt ; jmp qword ptr [rbx]
0x00000000004cc8e8 : sbb al, bh ; cld ; jmp qword ptr [rax]
0x00000000004cc908 : sbb al, bh ; cld ; jmp qword ptr [rbx]
0x00000000004b00b4 : sbb al, bl ; ret
0x000000000040bdf2 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000404b51 : sbb al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000047d320 : sbb al, ch ; retf 0xfbce
0x0000000000438af6 : sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000489d3d : sbb bh, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b7c95 : sbb bh, dl ; jmp qword ptr [rax]
0x00000000004a4735 : sbb bl, ch ; ret
0x0000000000403e01 : sbb bl, ch ; xor byte ptr [rax - 0x75], cl ; sub bl, bpl ; retf 0x5bd
0x000000000043f40a : sbb byte ptr [r8 - 0x7cb7e7ec], r9b ; ret
0x0000000000458966 : sbb byte ptr [r8 - 0x7d], r9b ; ret 0x4402
0x0000000000416aef : sbb byte ptr [r8], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004950b8 : sbb byte ptr [r9 + rcx*4 + 0x69], cl ; call 0x401b38
0x000000000040efbb : sbb byte ptr [r9], r8b ; add word ptr [rax + 0x2e], 1 ; ret
0x00000000004184a2 : sbb byte ptr [rax + 0x48000000], 0x39 ; ret 0xc7f
0x000000000040eb58 : sbb byte ptr [rax + 0x6274063a], al ; xor eax, eax ; ret
0x0000000000402074 : sbb byte ptr [rax + 0x69], cl ; ret
0x0000000000418125 : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000040e7cf : sbb byte ptr [rax + 1], cl ; ret 0xb60f
0x0000000000411cdc : sbb byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000460852 : sbb byte ptr [rax + 3], cl ; or byte ptr [r8 - 0x77], cl ; ret 0x2c6
0x00000000004030cd : sbb byte ptr [rax + 3], cl ; or byte ptr [r8 - 0x77], cl ; ret 0x448b
0x0000000000482d17 : sbb byte ptr [rax + 3], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x848b
0x000000000043f375 : sbb byte ptr [rax + rcx + 0x5b], bh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004c69f8 : sbb byte ptr [rax + rdi*8], al ; call qword ptr [rdx]
0x000000000047d99c : sbb byte ptr [rax - 0x39], cl ; ret
0x00000000004a19b1 : sbb byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000402baf : sbb byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x0000000000472677 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000494a31 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047f4e2 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000041819b : sbb byte ptr [rax - 0x77], cl ; ret 0xc829
0x00000000004953be : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000421061 : sbb byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x26] ; pop rbx ; ret
0x000000000043c577 : sbb byte ptr [rax - 0x7cb7e7ec], cl ; ret
0x000000000043c576 : sbb byte ptr [rax - 0x7cb7e7ec], r9b ; ret
0x000000000043c57a : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000458967 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4402
0x00000000004247f9 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440508 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000000000042fdb6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000044120a : sbb byte ptr [rax - 0x7d], cl ; ret 0x8820
0x0000000000416868 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402fd0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x77e
0x00000000004b9d15 : sbb byte ptr [rax], al ; add byte ptr [rax], cl ; sub ch, dh ; jmp qword ptr [rbx]
0x0000000000416af0 : sbb byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409cf8 : sbb byte ptr [rax], al ; je 0x409d07 ; mov eax, dword ptr [rdi + 4] ; ret
0x0000000000413e37 : sbb byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040906d : sbb byte ptr [rbp + 0x21], dh ; add rsp, 0x58 ; ret
0x00000000004895fe : sbb byte ptr [rbp + rcx*4 + 0xd], cl ; retf 0xfa69
0x00000000004bab08 : sbb byte ptr [rbp - 0xb], cl ; call rcx
0x000000000044e939 : sbb byte ptr [rbx + 0x2178801b], cl ; add byte ptr [rdi], cl ; retf
0x000000000041bba9 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000418524 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x0000000000404763 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042dd6d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040920d : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c3a18 : sbb byte ptr [rbx - 0x4ff1a6fd], al ; add al, 2 ; retf 0xe0a
0x0000000000458988 : sbb byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4202
0x00000000004b0da0 : sbb byte ptr [rbx], al ; retf
0x000000000042cddd : sbb byte ptr [rcx + 0x394cf471], cl ; retf 0xb275
0x0000000000418455 : sbb byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000004338eb : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000403ff1 : sbb byte ptr [rcx + 3], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x4a89
0x00000000004675b1 : sbb byte ptr [rcx + 3], cl ; or byte ptr [rax - 0x77], cl ; ret 0xc985
0x00000000004950b9 : sbb byte ptr [rcx + rcx*4 + 0x69], cl ; call 0x401b37
0x000000000041b0bb : sbb byte ptr [rcx + rcx*4 - 0xf], al ; mov rdx, r13 ; call r12
0x000000000047ea5f : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000047b835 : sbb byte ptr [rcx - 0x77], cl ; retf
0x00000000004ca0e8 : sbb byte ptr [rcx - 6], cl ; call qword ptr [rdx]
0x000000000040efbc : sbb byte ptr [rcx], al ; add word ptr [rax + 0x2e], 1 ; ret
0x0000000000420652 : sbb byte ptr [rcx], al ; ret
0x000000000040a6d3 : sbb byte ptr [rcx], al ; sbb eax, eax ; not eax ; and eax, 6 ; ret
0x0000000000493fac : sbb byte ptr [rcx], bh ; ret 0x8f0f
0x00000000004127f3 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000489e28 : sbb byte ptr [rdi + rcx], cl ; xchg eax, ebp ; ret 0xafe8
0x0000000000489e27 : sbb byte ptr [rdi + rcx], r9b ; xchg eax, ebp ; ret 0xafe8
0x00000000004097cc : sbb byte ptr [rdi], cl ; mov bh, 4 ; pop rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b7c94 : sbb byte ptr [rdx], 0xfa ; jmp qword ptr [rax]
0x0000000000434441 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004b77d8 : sbb byte ptr [rdx], cl ; add dword ptr [rax], eax ; loopne 0x4b77bf ; clc ; jmp rax
0x00000000004af3c6 : sbb byte ptr [rip + 0x4c204c2], al ; ret 0x1d04
0x00000000004af3c2 : sbb byte ptr [rip + 0x5180518], al ; ret 0xc204
0x00000000004bbdb8 : sbb byte ptr [rsi - 0xb], dh ; call qword ptr [rax]
0x00000000004c85b8 : sbb ch, bl ; clc ; call rdx
0x00000000004b8b38 : sbb ch, bl ; hlt ; call qword ptr [rbx]
0x00000000004acf9c : sbb ch, byte ptr [rax - 0xb] ; jmp qword ptr [rax]
0x000000000047e008 : sbb cl, byte ptr [rax - 0x77] ; retf 0x7eb
0x00000000004b605c : sbb dh, 0xf5 ; call rax
0x00000000004c3be9 : sbb dh, bh ; jmp qword ptr [rdx]
0x0000000000466e73 : sbb dh, dh ; ret 0x743e
0x000000000049a5b4 : sbb dl, cl ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411682 : sbb dword ptr [rax + 0x29], ecx ; ret 0x6948
0x0000000000411581 : sbb dword ptr [rax + 0x29], ecx ; retf 0xff2
0x0000000000417703 : sbb dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004c9e95 : sbb dword ptr [rcx], eax ; add byte ptr [rax + 0x38], cl ; cli ; jmp qword ptr [rax]
0x0000000000425962 : sbb dword ptr [rcx], eax ; pop rbx ; ret
0x00000000004839a2 : sbb dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xf883
0x00000000004203ba : sbb eax, 0x1f0fffff ; add bl, dh ; ret
0x00000000004b7a09 : sbb eax, 0x57b00001 ; stc ; jmp rax
0x0000000000402072 : sbb eax, 0x69481879 ; ret
0x00000000004165c4 : sbb eax, dword ptr [rax + 0x7405167b] ; retf
0x000000000044e93b : sbb eax, dword ptr [rax + 0xf002178] ; retf
0x000000000040c007 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add eax, 1 ; ret
0x000000000040bcc8 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov dword ptr [rsi], edx ; ret
0x000000000040b8ca : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004b557c : sbb eax, dword ptr [rbx] ; cmc ; call qword ptr [rax]
0x0000000000444c35 : sbb eax, dword ptr [rcx + 0xf] ; retf
0x00000000004ca0e5 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], bl ; cli ; call qword ptr [rdx]
0x000000000040a6d5 : sbb eax, eax ; not eax ; and eax, 6 ; ret
0x00000000004b010f : sbb ebx, dword ptr [rax + 0x3332bdbd] ; ret
0x0000000000476161 : sbb ebx, dword ptr [rsi + 0x1ce9fffa] ; retf 0xffff
0x000000000049060c : sbb ebx, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000041b0a2 : sbb ecx, dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xed85
0x0000000000419224 : sbb ecx, dword ptr [rax - 0x7d] ; rcl byte ptr [rax + rcx*2], 0x39 ; ret 0xf275
0x0000000000411324 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ed32 : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004b792d : sbb edi, ecx ; jmp qword ptr [rax]
0x0000000000489c71 : sbb edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000472e9c : sbb esi, esi ; and esi, 0xfffffffb ; add esi, 0x17 ; call r9
0x00000000004a4734 : sbb r11b, r13b ; ret
0x00000000004c3be8 : sbb sil, dil ; jmp qword ptr [rdx]
0x00000000004b6bc9 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; push rax ; retf
0x00000000004b6bd9 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ror dh, 0xf6 ; call qword ptr [rax]
0x00000000004ad324 : scasb al, byte ptr [rdi] ; mov dh, 0xfd ; call rbx
0x00000000004afed5 : scasb al, byte ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004b00b2 : scasb al, byte ptr [rdi] ; scasd eax, dword ptr [rdi] ; sbb al, bl ; ret
0x00000000004cd8c1 : scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000461b37 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040f948 : scasd eax, dword ptr [rdi] ; enter -0x7cb8, -0x3f ; cmp byte ptr [rcx], bh ; ret 0x4f0f
0x000000000044f3d4 : scasd eax, dword ptr [rdi] ; enter -0x7cbf, -4 ; add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x000000000041b6b4 : scasd eax, dword ptr [rdi] ; or al, 0x8d ; add al, 0x40 ; ret
0x0000000000434b0c : scasd eax, dword ptr [rdi] ; ret
0x000000000041d9ca : scasd eax, dword ptr [rdi] ; ret 0x8548
0x0000000000473180 : scasd eax, dword ptr [rdi] ; ret 0x8941
0x000000000044f489 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000046f97a : scasd eax, dword ptr [rdi] ; ret 0x8b41
0x00000000004a3490 : scasd eax, dword ptr [rdi] ; ret 0xc283
0x000000000044ff80 : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000497a9d : scasd eax, dword ptr [rdi] ; ret 0xfff8
0x0000000000434a78 : scasd eax, dword ptr [rdi] ; retf
0x0000000000443062 : scasd eax, dword ptr [rdi] ; retf 0x8948
0x0000000000477871 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x00000000004a3c62 : scasd eax, dword ptr [rdi] ; retf 0xc283
0x00000000004a43ee : scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 1], 1 ; retf 0xc148
0x0000000000409784 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx + 0x2408dc2], 0x83 ; ret 0x3903
0x00000000004b00b3 : scasd eax, dword ptr [rdi] ; sbb al, bl ; ret
0x0000000000489d6d : scasd eax, dword ptr [rdi] ; sbb bh, dl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432047 : seta al ; mov eax, r8d ; neg eax ; ret
0x0000000000431faf : seta al ; ret
0x0000000000432046 : seta r8b ; mov eax, r8d ; neg eax ; ret
0x000000000040eb06 : setae al ; movzx eax, al ; ret
0x000000000040a31d : setbe al ; ret
0x000000000040a2bb : sete al ; movzx eax, al ; ret
0x000000000041b93a : sete al ; pop rbp ; pop r14 ; ret
0x0000000000419ef3 : sete al ; pop rbx ; ret
0x0000000000409b1a : sete al ; ret
0x000000000041c01c : setg al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041c4e5 : setne al ; add eax, eax ; ret
0x000000000041b3cb : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000407da5 : setne al ; neg eax ; ret
0x000000000041b235 : setne al ; pop rbx ; ret
0x000000000041b356 : setne al ; ret
0x000000000041c1d5 : setne dl ; mov eax, edx ; pop rbx ; ret
0x000000000040a6fa : setne dl ; movzx edx, dl ; add eax, edx ; ret
0x0000000000475ff3 : setp al ; cmovne eax, edx ; jmp 0x4722af
0x00000000004b7869 : sgdt [rax] ; sar ah, 0xf8 ; jmp qword ptr [rax]
0x00000000004cc870 : shl al, 0xfc ; call rax
0x000000000041a531 : shl byte ptr [rax], 0x48 ; cmp eax, ecx ; jne 0x41a529 ; xor eax, eax ; ret
0x000000000040760a : shl byte ptr [rbx - 0x76b70001], cl ; ret 0x8b48
0x00000000004b5754 : shl byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rax]
0x00000000004b69a8 : shl byte ptr [rdx - 0x5a100000], 0xf6 ; jmp rax
0x000000000040b3c3 : shl byte ptr [rsi + 0x44], 0x39 ; retf 0x197d
0x0000000000431faa : shl byte ptr [rsi + 0xf], 0x2e ; enter -0x68f1, -0x40 ; ret
0x0000000000419a9d : shl byte ptr [rsi - 0x70], 1 ; mov rax, qword ptr [r11 + 0x60] ; ret
0x000000000040a6bf : shl byte ptr [rsi - 0x7b], 0xc9 ; js 0x40a70f ; ret
0x0000000000409971 : shl byte ptr [rsi - 0x7d], 0x7f ; or byte ptr [rax], al ; js 0x409989 ; ret
0x0000000000448bb1 : shl dword ptr [rcx], 1 ; retf 0xe281
0x00000000004672ed : shl dword ptr [rcx], 1 ; retf 0xf42
0x000000000049d60f : shl dword ptr [rsi + 0xf], 0x55 ; retf 0xf66
0x000000000049fc39 : shl dword ptr [rsi + 0xf], 1 ; ret 0x2676
0x0000000000408cc4 : shl eax, 8 ; and eax, 0x1000 ; ret
0x000000000041b7f3 : shl eax, cl ; and eax, 0x361f8 ; ret
0x000000000041b807 : shl eax, cl ; and eax, 0x8029fdf ; ret
0x000000000040f726 : shl eax, cl ; not eax ; and byte ptr [r8 + rsi + 0x10], al ; ret
0x0000000000414748 : shl eax, cl ; ret
0x000000000040e3b6 : shl esi, 5 ; mov qword ptr [rdx + rsi], rdi ; ret
0x0000000000414747 : shl rax, cl ; ret
0x000000000040e3b5 : shl rsi, 5 ; mov qword ptr [rdx + rsi], rdi ; ret
0x000000000049a5b2 : shr al, 0x18 ; retf 0xfffa
0x00000000004489a6 : shr al, 0x24 ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000432db5 : shr al, 0x35 ; retf
0x0000000000477508 : shr al, 0x42 ; ret 0xfffc
0x000000000043c0da : shr al, 0x50 ; retf 0xffff
0x00000000004774e6 : shr al, 0x64 ; ret 0xfffc
0x0000000000483d5c : shr al, 0x6e ; xor bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000047c7a8 : shr al, 0x82 ; ret
0x0000000000495d0a : shr al, 0x90 ; ret 0xfffa
0x0000000000490609 : shr al, 0x91 ; sbb ebx, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000047c78b : shr al, 0x9f ; ret
0x000000000047c771 : shr al, 0xb9 ; ret
0x000000000048ed9a : shr al, 0xd0 ; ret
0x00000000004765e6 : shr al, 0xe4 ; retf
0x000000000040995c : shr al, 3 ; and eax, 1 ; ret
0x0000000000409aec : shr al, 6 ; and eax, 1 ; ret
0x000000000042ce45 : shr al, cl ; push rbp ; ret 0xffff
0x0000000000446505 : shr al, cl ; sub eax, 0x8948fffe ; ret
0x00000000004466b5 : shr al, cl ; xchg eax, ebp ; sub edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041732e : shr ax, 2 ; and eax, 1 ; ret
0x00000000004b618c : shr bh, 1 ; cmc ; call rax
0x0000000000486662 : shr bl, 0x8c ; xor eax, eax ; jmp 0x48663a
0x0000000000401e74 : shr bl, 0xb ; mov eax, 1 ; ret
0x000000000040ad0f : shr bl, 0xd9 ; xor eax, eax ; ret
0x000000000047b99d : shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004970a5 : shr byte ptr [rax], 0x39 ; retf 0x840f
0x0000000000431fe9 : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000407d9b : shr byte ptr [rcx], 0xd0 ; ret
0x0000000000423288 : shr byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004b83f4 : shr ch, 0xfe ; call rax
0x0000000000436635 : shr cl, 0x95 ; retf
0x000000000040d8a3 : shr cl, 1 ; retf 0xfffe
0x000000000042db7d : shr dword ptr [rcx], cl ; ret
0x0000000000423188 : shr dword ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047c2fd : shr eax, 1 ; insd dword ptr [rdi], dx ; out dx, al ; sti ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000041072d : shr eax, 1 ; mov dword ptr [rdx + 0xc], eax ; mov word ptr [rdx + 8], cx ; ret
0x000000000041732f : shr eax, 2 ; and eax, 1 ; ret
0x0000000000414724 : shr eax, cl ; ret
0x0000000000419a9b : shr ebx, cl ; shl byte ptr [rsi - 0x70], 1 ; mov rax, qword ptr [r11 + 0x60] ; ret
0x0000000000476094 : shr ecx, 0x70 ; ret
0x00000000004b87f8 : shr ecx, 1 ; hlt ; call qword ptr [rbx]
0x000000000040982b : shr ecx, 1 ; jne 0x40980d ; ret
0x000000000041db66 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040982a : shr r9d, 1 ; jne 0x40980e ; ret
0x0000000000414723 : shr rax, cl ; ret
0x00000000004a0145 : sidt [rax - 0x77] ; retf 0xf8d1
0x00000000004b941d : sldt word ptr [rax] ; adc byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b944d : sldt word ptr [rax] ; and byte ptr [rsi], al ; cmc ; call qword ptr [rbx]
0x00000000004b9465 : sldt word ptr [rax] ; sub byte ptr [rsi], al ; cmc ; jmp qword ptr [rbx]
0x00000000004c7e45 : stc ; add byte ptr [rax], al ; cwde ; xchg eax, esi ; clc ; call rbx
0x00000000004c93b2 : stc ; call qword ptr [rbx]
0x00000000004b7a2e : stc ; call rax
0x00000000004c8d6a : stc ; call rdx
0x00000000004accde : stc ; call rsp
0x00000000004ac17d : stc ; cmc ; call rax
0x00000000004ac179 : stc ; cmc ; dec dword ptr [rax - 7] ; cmc ; call rax
0x0000000000485ae5 : stc ; dec dword ptr [rax + 0xf] ; ret 0x894c
0x00000000004759d5 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000491309 : stc ; dec dword ptr [rcx - 0x77] ; ret 0xc031
0x00000000004b7a26 : stc ; inc dword ptr [rax - 0x6ffffee2] ; movsxd rdi, ecx ; call rax
0x00000000004b7ad6 : stc ; inc dword ptr [rax] ; and al, 1 ; add byte ptr [rax - 0x6f], dl ; stc ; jmp qword ptr [rax]
0x00000000004accda : stc ; inc esp ; sar cl, 1 ; call rsp
0x000000000040975b : stc ; je 0x409759 ; cmp ecx, eax ; je 0x409759 ; mov eax, ecx ; ret
0x0000000000417728 : stc ; jg 0x4177a7 ; xor dword ptr [rcx - 0x7d], ecx ; ret 0x4108
0x000000000042ada2 : stc ; jg 0x42adbd ; xchg byte ptr [rsi - 0x77000000], ch ; retf 0xe281
0x00000000004b792e : stc ; jmp qword ptr [rax]
0x00000000004c8c5a : stc ; jmp qword ptr [rdi]
0x00000000004b78fe : stc ; jmp rax
0x00000000004accfe : stc ; jmp rsp
0x000000000040cfca : stc ; jne 0x40cfb0 ; mov qword ptr [rsi], rdx ; sub eax, edi ; ret
0x00000000004b7b96 : stc ; lcall [rax + 0x6000012a] ; leave ; stc ; jmp rax
0x00000000004b7a06 : stc ; lcall [rax - 0x4ffffee3] ; push rdi ; stc ; jmp rax
0x000000000040f237 : stc ; lea rdx, [rax + rdx*2] ; jne 0x40f229 ; xor eax, eax ; ret
0x00000000004b78f6 : stc ; ljmp [rax - 0x7ffffeec] ; adc al, 0xf9 ; jmp rax
0x000000000042ad42 : stc ; mov edi, 0x89000000 ; retf 0x860f
0x00000000004a0b14 : stc ; or al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xf980
0x0000000000408ce3 : stc ; outsb dx, byte ptr [rsi] ; sub al, 0 ; ret
0x00000000004b7a5e : stc ; push qword ptr [rax + 0x10000120] ; jle 0x4b7a69 ; call rax
0x0000000000407e32 : stc ; push qword ptr [rbp - 0x26] ; xor eax, eax ; ret
0x00000000004accee : stc ; push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x00000000004accd6 : stc ; push qword ptr [rbx + rdx*8] ; stc ; inc esp ; sar cl, 1 ; call rsp
0x00000000004accea : stc ; push qword ptr [rbx + rdx*8] ; stc ; push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x00000000004b7926 : stc ; push rax ; adc eax, 0x1b900001 ; stc ; jmp qword ptr [rax]
0x00000000004ad519 : stc ; std ; call qword ptr [rdx]
0x00000000004ad381 : stc ; std ; call rax
0x00000000004ad3a5 : stc ; std ; push rsi ; clc ; std ; call rdi
0x00000000004b809e : std ; call qword ptr [rax]
0x00000000004ad33a : std ; call qword ptr [rcx]
0x00000000004ad5fe : std ; call qword ptr [rdi]
0x00000000004ad51a : std ; call qword ptr [rdx]
0x00000000004ad632 : std ; call qword ptr [rsi]
0x00000000004ad382 : std ; call rax
0x00000000004ad326 : std ; call rbx
0x00000000004ad546 : std ; call rcx
0x00000000004ad3aa : std ; call rdi
0x00000000004ccf1a : std ; call rdx
0x00000000004ad472 : std ; call rsp
0x00000000004b6225 : std ; cmc ; jmp qword ptr [rax]
0x000000000043b6a0 : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000432ad2 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000042df54 : std ; dec dword ptr [rax - 0x75] ; jl 0x42df87 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000437f34 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004357f2 : std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004ad3ca : std ; dec dword ptr [rax] ; clc ; std ; call rbx
0x0000000000429959 : std ; dec dword ptr [rbx - 0x76f7dbb4] ; retf
0x0000000000496436 : std ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000004ad50e : std ; dec dword ptr [rcx] ; out dx, eax ; std ; jmp qword ptr [rdx]
0x00000000004750c4 : std ; dec dword ptr [rdi] ; mov esi, 0x63485855 ; retf 0xd089
0x00000000004ad4ba : std ; dec edx ; hlt ; std ; jmp rax
0x00000000004ad7b6 : std ; inc dword ptr [rax - 0x2c] ; std ; jmp qword ptr [rsi]
0x0000000000407c9c : std ; inc dword ptr [rax] ; add byte ptr [rdi], cl ; ret 0x83c3
0x000000000048fcdc : std ; inc dword ptr [rbp - 0x557af040] ; ret 0xffff
0x00000000004ad7ce : std ; inc dword ptr [rbx + 0x26fffdd1] ; sar ebp, cl ; call qword ptr [rsi]
0x00000000004ad7be : std ; inc dword ptr [rsi - 0x7300022d] ; sar ch, cl ; jmp qword ptr [rsi]
0x00000000004b8096 : std ; inc eax ; pop rbx ; add dword ptr [rax], eax ; adc byte ptr [rax], cl ; std ; call qword ptr [rax]
0x000000000042a0eb : std ; ja 0x42a0f3 ; call rsi
0x0000000000426dd4 : std ; jmp 0x426d9c
0x00000000004ad5aa : std ; jmp qword ptr [rax]
0x00000000004ad68e : std ; jmp qword ptr [rbx]
0x00000000004ad336 : std ; jmp qword ptr [rdi + 0x11fffd9c]
0x00000000004ad512 : std ; jmp qword ptr [rdx]
0x00000000004ad6ca : std ; jmp qword ptr [rsi]
0x00000000004ad4be : std ; jmp rax
0x00000000004cd0b2 : std ; jmp rdi
0x00000000004ad37e : std ; jmp rsi
0x00000000004ad60a : std ; lcall [rax - 0x17] ; std ; call qword ptr [rcx]
0x00000000004ad6de : std ; lcall [rdi - 0x25] ; std ; call qword ptr [rsi]
0x00000000004ad50a : std ; lcall [rdi] ; out dx, eax ; std ; dec dword ptr [rcx] ; out dx, eax ; std ; jmp qword ptr [rdx]
0x00000000004ad332 : std ; lcall [rdi] ; wait ; std ; jmp qword ptr [rdi + 0x11fffd9c]
0x00000000004ad5ee : std ; ljmp [rax - 0x15] ; std ; call rdi
0x00000000004ad346 : std ; ljmp [rax - 0x4200025a] ; cdq ; std ; call qword ptr [rcx]
0x00000000004ad64e : std ; ljmp [rcx - 0x1b] ; std ; jmp qword ptr [rdx]
0x00000000004ad6c6 : std ; ljmp [rsi] ; clc ; std ; jmp qword ptr [rsi]
0x000000000042e31c : std ; pop rsi ; add dword ptr [rax], eax ; add al, bl ; retf
0x00000000004ad3a6 : std ; push rsi ; clc ; std ; call rdi
0x0000000000414746 : std ; shl rax, cl ; ret
0x00000000004ad515 : std ; std ; call rax
0x0000000000429a12 : std ; test rax, rax ; je 0x429a20 ; call rax
0x000000000041390b : sti ; add al, 0x29 ; ret
0x00000000004b7671 : sti ; add byte ptr [rax], al ; add byte ptr [rdi - 8], ah ; call rax
0x00000000004c808d : sti ; add byte ptr [rax], al ; and dl, al ; clc ; jmp qword ptr [rcx]
0x0000000000472ea0 : sti ; add esi, 0x17 ; call r9
0x00000000004b7dc6 : sti ; call qword ptr [rax]
0x00000000004b7f16 : sti ; call rax
0x00000000004acf56 : sti ; call rbx
0x00000000004cb10a : sti ; call rdi
0x00000000004ac165 : sti ; cmc ; call qword ptr [rax]
0x000000000047f65a : sti ; dec dword ptr [rax - 0x75] ; je 0x47f68d ; xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047f832 : sti ; dec dword ptr [rax - 0x75] ; je 0x47f865 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047fa9a : sti ; dec dword ptr [rax - 0x77] ; ret 0x13e9
0x000000000047fb2f : sti ; dec dword ptr [rax - 0x77] ; ret 0x7ee9
0x000000000049060d : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004acf52 : sti ; dec dword ptr [rax - 5] ; call rbx
0x00000000004acf4e : sti ; dec dword ptr [rbx + rbx*2 + 0x604cfffb] ; sti ; call rbx
0x0000000000456f5f : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000047c301 : sti ; dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000047c0cf : sti ; dec dword ptr [rcx - 0x77] ; ret 0xc748
0x000000000047e2bf : sti ; inc dword ptr [rcx - 0x77] ; ret 0x75e9
0x0000000000476090 : sti ; inc dword ptr [rcx - 0x77] ; shr ecx, 0x70 ; ret
0x00000000004ca61a : sti ; jmp qword ptr [rbx]
0x00000000004b7e9e : sti ; jmp rax
0x00000000004ca942 : sti ; jmp rdi
0x00000000004acf3a : sti ; jmp rsp
0x00000000004b7e4e : sti ; lcall [rax + 0x10000145] ; pop rbx ; sti ; call qword ptr [rax]
0x0000000000459191 : sti ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004b7e96 : sti ; ljmp [rax - 0x4ffffeb9] ; insb byte ptr [rdi], dx ; sti ; jmp rax
0x000000000040c60e : sti ; mov rdi, qword ptr [rdi + 8] ; call rax
0x0000000000445969 : sti ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000046a5f1 : sti ; retf 0xfffa
0x0000000000404f81 : sti ; retf 0xffff
0x0000000000419ef1 : sti ; sete al ; pop rbx ; ret
0x00000000004c2fed : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; adc ah, ch ; idiv bh ; ret 0
0x00000000004a4c72 : stosb byte ptr [rdi], al ; ret
0x000000000048fce2 : stosb byte ptr [rdi], al ; ret 0xffff
0x0000000000412d15 : stosd dword ptr [rdi], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000425188 : stosd dword ptr [rdi], eax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x000000000047c1e6 : stosd dword ptr [rdi], eax ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044e0ca : stosd dword ptr [rdi], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041db6b : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004ad0f4 : stosd dword ptr [rdi], eax ; pop rdi ; cld ; jmp qword ptr [rax]
0x00000000004118c3 : stosd dword ptr [rdi], eax ; ret
0x0000000000425187 : stosq qword ptr [rdi], rax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x000000000044e0c9 : stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041db6a : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004118c2 : stosq qword ptr [rdi], rax ; ret
0x00000000004285e8 : str word ptr [rax - 0x77] ; retf 0x1574
0x00000000004284d1 : str word ptr [rax - 0x77] ; retf 0x1c74
0x00000000004266c2 : str word ptr [rdi] ; xchg eax, esp ; ret 0xc209
0x00000000004bb145 : sub al, 0 ; add al, bl ; pop rsp ; cmc ; jmp rax
0x00000000004bdbe8 : sub al, 0 ; add byte ptr [rax], al ; fcom qword ptr [rsi] ; add byte ptr [rax], ah ; ret
0x00000000004c4800 : sub al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c5e88 : sub al, 0 ; add byte ptr [rax], al ; jl 0x4c5e70 ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000004c4770 : sub al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000404837 : sub al, 0 ; add ebx, esi ; ret
0x0000000000407bcd : sub al, 0 ; add rsp, 8 ; cdqe ; ret
0x0000000000408f06 : sub al, 0 ; jne 0x408f15 ; ret
0x00000000004150c9 : sub al, 0 ; jne 0x4150d5 ; pop rbx ; ret
0x00000000004076da : sub al, 0 ; mov dword ptr [rdx], eax ; nop ; pop rbp ; ret
0x0000000000407a0a : sub al, 0 ; movsxd rdi, edi ; mov rax, qword ptr [rax + rdi*8] ; ret
0x0000000000407b09 : sub al, 0 ; nop dword ptr [rax + rax] ; ret
0x0000000000407b49 : sub al, 0 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000040a3e5 : sub al, 0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000407a71 : sub al, 0 ; ret
0x0000000000408c04 : sub al, 0 ; test edx, edx ; jne 0x408c16 ; ret
0x0000000000408c44 : sub al, 0 ; test edx, edx ; jne 0x408c56 ; ret
0x000000000040cd54 : sub al, 0 ; test edx, edx ; jne 0x40cd66 ; ret
0x000000000040cd53 : sub al, 0 ; test edx, edx ; jne 0x40cd67 ; ret
0x000000000040cd94 : sub al, 0 ; test edx, edx ; jne 0x40cda6 ; ret
0x000000000040cd93 : sub al, 0 ; test edx, edx ; jne 0x40cda7 ; ret
0x000000000040cd92 : sub al, 0 ; test edx, edx ; jne 0x40cda8 ; ret
0x00000000004095b4 : sub al, 0 ; xor eax, eax ; ret
0x00000000004ac8c8 : sub al, 0x1f ; clc ; call rdi
0x00000000004ac8c4 : sub al, 0x1f ; clc ; ljmp [rdi + rbx] ; clc ; call rdi
0x00000000004ca93c : sub al, 0x24 ; add dword ptr [rax], eax ; loopne 0x4ca992 ; sti ; jmp rdi
0x000000000047f6b0 : sub al, 0x24 ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000044f3a5 : sub al, 0x39 ; ret 0x820f
0x000000000041c4aa : sub al, 0x39 ; ret 0x840f
0x00000000004489bc : sub al, 0x83 ; ret
0x0000000000408f73 : sub al, 0xa8 ; and dword ptr [rax + rbx - 0x77], esi ; ret 0xe283
0x00000000004c4181 : sub al, 0xf7 ; call qword ptr [rdx]
0x00000000004465cb : sub al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b7bd1 : sub al, 1 ; add byte ptr [rax], dh ; idiv cl ; jmp qword ptr [rax]
0x0000000000415339 : sub al, 1 ; test esi, esi ; jne 0x41534f ; ret
0x00000000004458e3 : sub al, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415092 : sub al, 2 ; jne 0x4150a4 ; ret
0x0000000000415091 : sub al, 2 ; jne 0x4150a5 ; ret
0x0000000000408e42 : sub al, 8 ; jne 0x408e41 ; mov qword ptr [rax + 0x10], rdi ; ret
0x0000000000408e41 : sub al, 8 ; jne 0x408e42 ; mov qword ptr [rax + 0x10], rdi ; ret
0x00000000004bd9e8 : sub al, al ; cmc ; call qword ptr [rdx]
0x0000000000486427 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; ret 0xc031
0x00000000004238b1 : sub al, byte ptr [rax] ; call rax
0x0000000000423a90 : sub al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423a14 : sub al, byte ptr [rax] ; test eax, eax ; je 0x423a28 ; xor eax, eax ; ret
0x0000000000429a45 : sub al, byte ptr [rax] ; test rax, rax ; je 0x429a55 ; call rax
0x00000000004b7b99 : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x37], ah ; stc ; jmp rax
0x0000000000485dac : sub al, ch ; pop rsi ; ret 0xfff8
0x0000000000403c67 : sub al, ch ; ret
0x0000000000439f0f : sub al, ch ; retf
0x000000000044e6b6 : sub al, r13b ; ret
0x00000000004913f0 : sub bh, bh ; dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x000000000040ef12 : sub bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xc689
0x000000000040572e : sub bh, byte ptr [rdi + 0x4a899b] ; call 0x401968
0x00000000004b6e98 : sub bl, al ; add byte ptr [rax], al ; ror byte ptr [rbx - 9], 0xff ; ret
0x0000000000403e06 : sub bl, bpl ; retf 0x5bd
0x0000000000403e07 : sub bl, ch ; retf 0x5bd
0x0000000000419237 : sub bl, dh ; ret
0x00000000004ccf18 : sub bpl, dil ; call rdx
0x000000000040a209 : sub byte ptr [r13 + 0x37], sil ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000412199 : sub byte ptr [r8 - 0x77], cl ; and al, 0x28 ; call r9
0x0000000000465eea : sub byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000047de32 : sub byte ptr [r9 - 0x7d], cl ; ret
0x000000000047b8fe : sub byte ptr [r9 - 0x80], al ; jg 0x47b95e ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000041538b : sub byte ptr [r9], r8b ; mov byte ptr [rax + 0x14], 0 ; ret
0x000000000041154c : sub byte ptr [r9], r8b ; ret
0x00000000004385f7 : sub byte ptr [rax + 0x39], cl ; ret 0xee75
0x000000000049b12d : sub byte ptr [rax + 0x39], cl ; retf 0x40c6
0x000000000043573a : sub byte ptr [rax + 0xb], bh ; pop rbx ; pop rbp ; ret
0x000000000046e1d3 : sub byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000046e0b0 : sub byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x000000000046e1d2 : sub byte ptr [rax + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret
0x00000000004c72c8 : sub byte ptr [rax + rdi*8], bh ; call rdi
0x000000000041219a : sub byte ptr [rax - 0x77], cl ; and al, 0x28 ; call r9
0x0000000000436567 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000495659 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x4120c6
0x000000000041a96b : sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000041dac3 : sub byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xff45
0x0000000000417b10 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000476fac : sub byte ptr [rax - 0x7d], cl ; ret 0x6638
0x000000000043e1b5 : sub byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x21], 1 ; rol byte ptr [rcx - 0xa], 1 ; ret 0x4901
0x0000000000419fbc : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465eeb : sub byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000040a2b9 : sub byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x000000000044c620 : sub byte ptr [rax], al ; test rax, rax ; je 0x44c630 ; call rax
0x000000000044d209 : sub byte ptr [rax], al ; test rax, rax ; je 0x44d219 ; call rax
0x000000000044d21f : sub byte ptr [rax], al ; test rax, rax ; je 0x44d22f ; call rax
0x000000000044d466 : sub byte ptr [rax], al ; test rax, rax ; je 0x44d476 ; call rax
0x000000000044d491 : sub byte ptr [rax], al ; test rax, rax ; je 0x44d4a1 ; call rax
0x00000000004b95a8 : sub byte ptr [rax], cl ; cmc ; call rsi
0x000000000040a20a : sub byte ptr [rbp + 0x37], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041644e : sub byte ptr [rbp + 0x5bd774c0], al ; ret
0x00000000004828e6 : sub byte ptr [rbp - 0x77], cl ; retf 0x34c
0x000000000041caa7 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004166d9 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000402465 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004bae0a : sub byte ptr [rbx - 0x7ff1acfb], al ; add dword ptr [rdx], eax ; retf 0xe0a
0x000000000046e0ac : sub byte ptr [rcx + 0x2b], cl ; push rbp ; sub byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8548
0x0000000000495de7 : sub byte ptr [rcx + 0xf], al ; mov edi, 0x39413c47 ; ret 0x840f
0x0000000000416874 : sub byte ptr [rcx + rbx*8 + 0x5b], bh ; pop rbp ; pop r12 ; ret
0x00000000004612bb : sub byte ptr [rcx - 0x16b7dbbc], cl ; retf
0x000000000047ac73 : sub byte ptr [rcx - 0x75], cl ; and byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047de33 : sub byte ptr [rcx - 0x7d], cl ; ret
0x000000000047b8ff : sub byte ptr [rcx - 0x80], al ; jg 0x47b95d ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000041538c : sub byte ptr [rcx], al ; mov byte ptr [rax + 0x14], 0 ; ret
0x000000000041154d : sub byte ptr [rcx], al ; ret
0x0000000000434aa0 : sub byte ptr [rcx], al ; retf 0xc183
0x00000000004b0dfa : sub byte ptr [rcx], al ; sub dword ptr [rcx], eax ; sub eax, dword ptr [rcx] ; retf 0xad00
0x00000000004970a6 : sub byte ptr [rcx], bh ; retf 0x840f
0x0000000000402b02 : sub byte ptr [rcx], dh ; rol byte ptr [rcx + rdi - 0x40], 0x89 ; ret 0x147d
0x0000000000402b01 : sub byte ptr [rcx], r14b ; rol byte ptr [rcx + rdi - 0x40], 0x89 ; ret 0x147d
0x000000000043b0dd : sub byte ptr [rdi + 0x10], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041715b : sub byte ptr [rdi - 0x28], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042bb61 : sub byte ptr [rdi - 0x34], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b6188 : sub byte ptr [rdi], 0 ; shr bh, 1 ; cmc ; call rax
0x000000000046ad5b : sub byte ptr [rdi], cl ; lea esp, [rcx + rax - 0x7cb80000] ; ret
0x00000000004589c6 : sub byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3944
0x00000000004b81d8 : sub byte ptr [rdx + 1], 0 ; ror byte ptr [rsi + rdi*8], 1 ; call rax
0x00000000004c115a : sub byte ptr [rsi + 0x300e4305], al ; add dword ptr [rsi], 0x75 ; ret
0x00000000004b9468 : sub byte ptr [rsi], al ; cmc ; jmp qword ptr [rbx]
0x0000000000416873 : sub byte ptr gs:[rcx + rbx*8 + 0x5b], bh ; pop rbp ; pop r12 ; ret
0x00000000004ccf19 : sub ch, bh ; call rdx
0x00000000004b9d19 : sub ch, dh ; jmp qword ptr [rbx]
0x000000000042bbb7 : sub cl, byte ptr [rax + 0x63] ; ret
0x000000000040a5ac : sub cl, byte ptr [rax - 0x7d] ; ret 0x101
0x000000000046a6e2 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4858
0x0000000000493853 : sub cl, byte ptr [rax - 0x7d] ; sal byte ptr [rax], 1 ; retf 0x3948
0x0000000000472673 : sub cl, byte ptr [rcx + rcx*4 + 0x60] ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000041aed5 : sub cl, byte ptr [rcx - 0x7d] ; ret 0x4d01
0x000000000046cc0a : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8d4b
0x0000000000454965 : sub cl, ch ; ret 0xfffe
0x0000000000450090 : sub cl, ch ; retf
0x000000000042f293 : sub dh, al ; and al, 0x28 ; add cl, ch ; ret 0xfffc
0x00000000004b8a78 : sub dl, 0xf4 ; call qword ptr [rbx]
0x00000000004152e1 : sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x000000000042ba77 : sub dword ptr [rax - 0x7d], ecx ; ret 0x4030
0x000000000041171c : sub dword ptr [rax], eax ; je 0x41172d ; ret
0x0000000000437ab8 : sub dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004362f8 : sub dword ptr [rax], eax ; test rax, rax ; je 0x436308 ; call rax
0x000000000043634d : sub dword ptr [rax], eax ; test rax, rax ; je 0x436361 ; call rax
0x0000000000415337 : sub dword ptr [rcx + 0x2c], 1 ; test esi, esi ; jne 0x415351 ; ret
0x0000000000415046 : sub dword ptr [rcx + rcx*4 - 0x19], ecx ; call rcx
0x00000000004b0dfc : sub dword ptr [rcx], eax ; sub eax, dword ptr [rcx] ; retf 0xad00
0x000000000046d6e0 : sub dword ptr [rdi + 0x40], 1 ; je 0x46d6f8 ; xor eax, eax ; ret
0x0000000000414f35 : sub dword ptr [rdi + 0x4c], 1 ; xor eax, eax ; ret
0x0000000000401fa3 : sub dword ptr [rdi - 0x1776ffff], esi ; pop rdx ; pop rbx ; pop rbp ; ret
0x0000000000415cf4 : sub dword ptr [rdx + 0x28], 1 ; ret
0x00000000004ac7cc : sub dword ptr [rdx - 0x4e3c0009], esi ; idiv edi ; ret
0x000000000041a4c5 : sub dword ptr [rsi], 1 ; je 0x41a4d6 ; ret
0x00000000004463f7 : sub eax, 0x24448d41 ; dec dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000446508 : sub eax, 0x8948fffe ; ret
0x00000000004377f2 : sub eax, 0x8ec8348 ; mov rdi, rdx ; call r8
0x000000000040b2fb : sub eax, 1 ; cdqe ; movzx eax, byte ptr [rdx + rax] ; ret
0x0000000000455bf9 : sub eax, 1 ; mov word ptr [rcx + 0x70], ax ; xor eax, eax ; ret
0x000000000042dcce : sub eax, 1 ; sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000041d534 : sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000416ff1 : sub eax, dword ptr [rax] ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x0000000000411e2c : sub eax, dword ptr [rax] ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004119f4 : sub eax, dword ptr [rax] ; pop rax ; ret
0x000000000041725b : sub eax, dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000415041 : sub eax, dword ptr [rax] ; test esi, esi ; js 0x415079 ; mov rdi, r12 ; call rcx
0x000000000041304b : sub eax, dword ptr [rax] ; test rax, rax ; je 0x41305b ; call rax
0x00000000004148af : sub eax, dword ptr [rax] ; test rax, rax ; je 0x4148bf ; call rax
0x00000000004148cb : sub eax, dword ptr [rax] ; test rax, rax ; je 0x4148db ; call rax
0x00000000004158a2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x41592c ; call rax
0x0000000000415b52 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x415b62 ; call rax
0x0000000000415bca : sub eax, dword ptr [rax] ; test rax, rax ; je 0x415bda ; call rax
0x0000000000415c15 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x415c25 ; call rax
0x0000000000410fa4 : sub eax, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044416c : sub eax, dword ptr [rcx + rcx - 0x3e] ; mov byte ptr [rax], dl ; mov eax, ebx ; pop rbx ; ret
0x00000000004546f3 : sub eax, dword ptr [rcx - 0x77] ; ret 0x8d4d
0x00000000004cb105 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x4e], bl ; sti ; call rdi
0x00000000004b0dfe : sub eax, dword ptr [rcx] ; retf 0xad00
0x000000000042dcd1 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000041b41a : sub eax, dword ptr [rdi] ; ret
0x0000000000431fea : sub eax, ecx ; ret
0x000000000040cfd1 : sub eax, edi ; ret
0x00000000004114c7 : sub eax, edx ; mov qword ptr [rdi], rax ; ret
0x0000000000407d9c : sub eax, edx ; ret
0x00000000004096d0 : sub eax, esi ; ret
0x000000000040f63c : sub ebx, eax ; ret
0x00000000004b8bb8 : sub ebx, ebp ; hlt ; call qword ptr [rsi]
0x000000000040c539 : sub ebx, ebx ; test eax, eax ; cmove eax, r11d ; pop rbx ; ret
0x00000000004212d4 : sub ebx, edx ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000440a4a : sub ecx, dword ptr [rax + 0x63] ; ret 0xc148
0x0000000000414721 : sub ecx, edx ; shr rax, cl ; ret
0x00000000004096a2 : sub ecx, esi ; lea eax, [rcx + r8 + 4] ; ret
0x00000000004a7701 : sub edi, dword ptr [rdi + rsi*8 + 0x74c085ff] ; ret 0xc35b
0x00000000004466b8 : sub edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad039 : sub edi, esp ; call qword ptr [rip - 0x2c0003d5]
0x00000000004ad03d : sub edi, esp ; call rbx
0x000000000040cc83 : sub edx, 1 ; mov dword ptr [rax + 0x48], edx ; xor eax, eax ; ret
0x0000000000499592 : sub edx, eax ; call 0x426014
0x0000000000423b1c : sub edx, ecx ; mov eax, edx ; pop rbx ; ret
0x000000000040e063 : sub edx, edi ; mov rax, rdi ; mov dword ptr [rsi], edx ; ret
0x0000000000499606 : sub edx, esi ; add rsi, r13 ; call 0x426017
0x000000000041ccee : sub esi, eax ; sbb al, 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000486d40 : sub esi, esi ; ret 0x7502
0x0000000000412209 : sub esp, -0x80 ; pop rbx ; ret
0x00000000004a87d1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004377f4 : sub esp, 8 ; mov rdi, rdx ; call r8
0x00000000004114c6 : sub rax, rdx ; mov qword ptr [rdi], rax ; ret
0x00000000004096cf : sub rax, rsi ; ret
0x00000000004212d3 : sub rbx, rdx ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004096a1 : sub rcx, rsi ; lea eax, [rcx + r8 + 4] ; ret
0x00000000004ad038 : sub rdi, r12 ; call qword ptr [rip - 0x2c0003d5]
0x000000000040e062 : sub rdx, rdi ; mov rax, rdi ; mov dword ptr [rsi], edx ; ret
0x0000000000412208 : sub rsp, -0x80 ; pop rbx ; ret
0x00000000004a87d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004377f3 : sub rsp, 8 ; mov rdi, rdx ; call r8
0x0000000000403290 : syscall
0x0000000000484d76 : test ah, bl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x74fe
0x000000000041cd87 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c2d1d : test al, 0 ; add byte ptr [rax], dl ; loop 0x4c2d1f ; call qword ptr [rax]
0x00000000004b9978 : test al, 0x13 ; cmc ; jmp rsp
0x00000000004ad278 : test al, 0x34 ; cld ; jmp rax
0x00000000004b7e98 : test al, 0x47 ; add dword ptr [rax], eax ; mov al, 0x6c ; sti ; jmp rax
0x00000000004989ea : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000004b64b8 : test al, 0x82 ; add byte ptr [rax], al ; push rax ; cmp dh, dh ; call rax
0x00000000004ac780 : test al, 0xb3 ; idiv edi ; ret
0x00000000004be4f8 : test al, 0xdd ; cmc ; jmp qword ptr [rcx]
0x00000000004b8cb8 : test al, 0xee ; hlt ; call qword ptr [rdx]
0x00000000004bd3a1 : test al, 0xf5 ; jmp qword ptr [rdi]
0x0000000000408f7d : test al, 1 ; jne 0x408fa0 ; mov word ptr [rdi + 0x2c], dx ; ret
0x00000000004ccb68 : test al, 2 ; std ; call rdi
0x00000000004b0df8 : test al, 2 ; sub byte ptr [rcx], al ; sub dword ptr [rcx], eax ; sub eax, dword ptr [rcx] ; retf 0xad00
0x00000000004ccc98 : test al, 6 ; std ; jmp qword ptr [rax]
0x00000000004569b6 : test al, al ; jne 0x4569c9 ; mov eax, 4 ; ret
0x000000000041c1d3 : test al, al ; setne dl ; mov eax, edx ; pop rbx ; ret
0x00000000004c7d94 : test al, bh ; add byte ptr [rax], al ; xchg rax, rcx ; clc ; call rsi
0x000000000045b23c : test bh, cl ; add byte ptr [rax], al ; add dh, dh ; ret 0xf05
0x00000000004b7f15 : test bl, bh ; call rax
0x000000000046a27c : test bl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041b663 : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x000000000041109b : test byte ptr [rax + 3], 0x70 ; push rax ; jmp rcx
0x00000000004b8994 : test byte ptr [rax + rax], al ; add byte ptr [rdx - 0x16], cl ; hlt ; call qword ptr [rbx]
0x000000000045853e : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a1fb9 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8545
0x00000000004711a5 : test byte ptr [rax + rcx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000468332 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000441cf2 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048c62a : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000048d822 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000440c5d : test byte ptr [rax - 0x77], 0xc2 ; call 0x42d706
0x00000000004a7f8b : test byte ptr [rax - 0x77], 0xdf ; call r12
0x00000000004317c1 : test byte ptr [rax - 0x7d000000], al ; ret
0x000000000048bb22 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000040e9fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000040909a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x2c] ; ret
0x000000000040983a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; ret
0x000000000040984a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000040c55a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x60] ; ret
0x000000000040c56a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000040b6da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000004047ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000041207a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000407b8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042fbda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000407b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000491380 : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x00000000004b0248 : test byte ptr [rbp + 0x59888786], al ; pop rdx ; sahf ; retf
0x0000000000449902 : test byte ptr [rbp + rdi*8 - 1], cl ; dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000049c24c : test byte ptr [rbp - 0x3d6bf040], 0x21 ; retf 0xdde9
0x00000000004acfc0 : test byte ptr [rbp - 0xb], ah ; jmp qword ptr [rax]
0x0000000000493bf9 : test byte ptr [rbx + 1], dh ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000472e9d : test byte ptr [rbx - 0x397c041a], 0x17 ; call r9
0x00000000004822cf : test byte ptr [rbx - 0x76000002], al ; retf 0xeac1
0x0000000000467a18 : test byte ptr [rbx - 0x7d000000], al ; ret 0x4801
0x00000000004b8894 : test byte ptr [rbx], al ; add byte ptr [rax], al ; in al, 0xe9 ; hlt ; call qword ptr [rbx]
0x000000000040c0f1 : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000004950c8 : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; pop rdi ; retf 0xfff6
0x000000000048fcd5 : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; ret 0xfdf3
0x00000000004a543f : test byte ptr [rcx + rcx*4 - 9], 0x89 ; ret
0x000000000040ba50 : test byte ptr [rcx + rdi], 0x46 ; jne 0x40ba47 ; ret
0x000000000040bc42 : test byte ptr [rcx + rdx], 4 ; jne 0x40bc3f ; ret
0x000000000040beda : test byte ptr [rcx + rdx], 8 ; jne 0x40bed7 ; ret
0x0000000000483ded : test byte ptr [rcx - 0x42], 0xb ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004bbe94 : test byte ptr [rcx], bh ; add byte ptr [rax], al ; cwde ; jbe 0x4bbe97 ; call qword ptr [rax]
0x00000000004c9e94 : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; cmp dl, dil ; jmp qword ptr [rax]
0x0000000000415090 : test byte ptr [rdi + 0x2c], 2 ; jne 0x4150a6 ; ret
0x00000000004a7011 : test byte ptr [rdi*8 - 0xce0001], bh ; call rax
0x00000000004128a3 : test byte ptr [rdi], 0x84 ; ret
0x0000000000412147 : test byte ptr [rdi], 0x84 ; ret 0
0x00000000004a2845 : test byte ptr [rdi], 0x84 ; retf 4
0x00000000004810b4 : test byte ptr [rdi], 0x8e ; retf
0x0000000000453aea : test byte ptr [rdi], 0x94 ; ret
0x000000000049703c : test byte ptr [rdi], 0x94 ; ret 0x8941
0x0000000000453ba2 : test byte ptr [rdi], 0x94 ; ret 0x8948
0x000000000044adf8 : test byte ptr [rdi], 0x94 ; ret 0x8b48
0x0000000000407da4 : test byte ptr [rdi], 0x95 ; sal bh, 0xd8 ; ret
0x0000000000481672 : test byte ptr [rdi], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0xd030
0x0000000000418e7f : test byte ptr [rdi], 0xbf ; retf 0xf45
0x000000000047023c : test byte ptr [rdi], dh ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042adb9 : test byte ptr [rdx - 0x77000000], bl ; retf 0x8949
0x000000000043c771 : test byte ptr [rdx - 0x7cffffff], bh ; ret 0x4401
0x000000000047d069 : test byte ptr [rdx - 0x7d000000], al ; ret 0x3901
0x000000000045837d : test byte ptr [rsi + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004473d2 : test byte ptr [rsi + rdi*8 - 0x7cb70001], ah ; ret 0x8001
0x000000000048ef79 : test byte ptr [rsi], bh ; retf 0xffff
0x00000000004a40ad : test byte ptr [rsi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045b602 : test byte ptr [rsp + rbx*2], ah ; add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000040a7d6 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], al ; retf 0x840f
0x0000000000471738 : test ch, cl ; cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x000000000046d285 : test cl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000040a6c0 : test cx, cx ; js 0x40a70e ; ret
0x0000000000438916 : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046bb9b : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000040bbc0 : test dword ptr [rax + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000472a1b : test dword ptr [rax + 8], 0x89482460 ; ret
0x00000000004b7601 : test dword ptr [rax], 0xf84f7000 ; call qword ptr [rax]
0x0000000000413459 : test dword ptr [rax], 0xffffff ; je 0x413471 ; ret
0x0000000000432809 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000043044f : test dword ptr [rax], esp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000432808 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000477f0a : test dword ptr [rbx], ecx ; retf 0xffff
0x000000000040b264 : test dword ptr [rcx + rax - 0x7cb80000], ebp ; ret
0x000000000041b767 : test dword ptr [rcx + rax*4], edx ; sete al ; movzx eax, al ; ret
0x0000000000441df1 : test dword ptr [rcx - 0x7d], 0x834801c7 ; ret
0x000000000040fd1f : test dword ptr [rdi + 0x48000000], ecx ; add esp, 0x28 ; ret
0x000000000042a7d3 : test dword ptr [rdi + 8], 0x840f2460 ; ret 0xfffe
0x0000000000405349 : test dword ptr [rdi - 0x6f000004], esp ; leave ; ret
0x000000000041c4e4 : test dword ptr [rdi], 0xc001c095 ; ret
0x000000000044725c : test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x1be
0x0000000000444699 : test dword ptr [rdx + 0x69000000], esi ; ret
0x0000000000458d44 : test dword ptr [rdx - 0x16000002], ecx ; retf 0xfffe
0x000000000042834d : test dword ptr [rdx], 0x4b8d0000 ; add dword ptr [rax - 0x77], ecx ; retf
0x0000000000474196 : test dword ptr [rdx], ebx ; ret 0xffff
0x00000000004b0249 : test dword ptr [rsi + 0x5a598887], eax ; sahf ; retf
0x0000000000415c72 : test dword ptr [rsi - 0x16000003], edx ; retf
0x000000000047883a : test dword ptr [rsi - 0x16000008], ecx ; ret 0xffff
0x000000000048e93e : test dword ptr [rsi], edi ; ret 0xffff
0x0000000000458993 : test eax, 0x39ee894c ; retf
0x0000000000438cce : test eax, 0xfffffffd ; jne 0x438ce9 ; pop rbx ; ret
0x000000000040c53b : test eax, eax ; cmove eax, r11d ; pop rbx ; ret
0x000000000041a573 : test eax, eax ; cmove rax, rdx ; ret
0x0000000000404856 : test eax, eax ; je 0x404853 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000411ca7 : test eax, eax ; je 0x411cbf ; mov edi, 0x64 ; call rax
0x0000000000411ec8 : test eax, eax ; je 0x411f09 ; mov edi, 0xc8 ; call rax
0x00000000004123e5 : test eax, eax ; je 0x4123f7 ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000412675 : test eax, eax ; je 0x41267f ; call rax
0x000000000041300b : test eax, eax ; je 0x41302a ; mov byte ptr [rsp + 8], dl ; call rax
0x000000000041304e : test eax, eax ; je 0x413058 ; call rax
0x00000000004134d9 : test eax, eax ; je 0x4134eb ; mov rdi, qword ptr [rdi + 0x18] ; call rax
0x0000000000413601 : test eax, eax ; je 0x413619 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000413737 : test eax, eax ; je 0x413749 ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000414415 : test eax, eax ; je 0x414424 ; ret
0x00000000004148b2 : test eax, eax ; je 0x4148bc ; call rax
0x00000000004148ce : test eax, eax ; je 0x4148d8 ; call rax
0x0000000000415879 : test eax, eax ; je 0x415892 ; mov qword ptr [rsp + 8], rdi ; call rax
0x00000000004158a5 : test eax, eax ; je 0x415929 ; call rax
0x0000000000415b55 : test eax, eax ; je 0x415b5f ; call rax
0x0000000000415bcd : test eax, eax ; je 0x415bd7 ; call rax
0x0000000000415c18 : test eax, eax ; je 0x415c22 ; call rax
0x00000000004163f0 : test eax, eax ; je 0x416404 ; call rax
0x000000000041644f : test eax, eax ; je 0x41642f ; pop rbx ; ret
0x0000000000416540 : test eax, eax ; je 0x416555 ; pop rbx ; ret
0x000000000041843e : test eax, eax ; je 0x418469 ; mov edi, 0xc9 ; call rax
0x00000000004185a9 : test eax, eax ; je 0x4185e9 ; mov edi, 0xca ; call rax
0x000000000041b987 : test eax, eax ; je 0x41b999 ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000041dbd5 : test eax, eax ; je 0x41dc09 ; mov edi, 0x64 ; call rax
0x0000000000423a16 : test eax, eax ; je 0x423a26 ; xor eax, eax ; ret
0x0000000000423c6f : test eax, eax ; je 0x423c58 ; xor eax, eax ; pop rbx ; ret
0x000000000042904d : test eax, eax ; je 0x429071 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000429a14 : test eax, eax ; je 0x429a1e ; call rax
0x0000000000429a48 : test eax, eax ; je 0x429a52 ; call rax
0x000000000042a151 : test eax, eax ; je 0x42a199 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042fbce : test eax, eax ; je 0x42fbe8 ; mov eax, dword ptr [rbx + 0xc] ; pop rbx ; ret
0x000000000042fd4b : test eax, eax ; je 0x42fd71 ; mov rax, qword ptr [rbx + 0x10] ; pop rbx ; ret
0x00000000004362fb : test eax, eax ; je 0x436305 ; call rax
0x0000000000436350 : test eax, eax ; je 0x43635e ; call rax
0x000000000043f361 : test eax, eax ; je 0x43f378 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b33b : test eax, eax ; je 0x44b353 ; call rax
0x000000000044c67d : test eax, eax ; je 0x44c406 ; call rax
0x000000000044c623 : test eax, eax ; je 0x44c62d ; call rax
0x000000000044d20c : test eax, eax ; je 0x44d216 ; call rax
0x000000000044d222 : test eax, eax ; je 0x44d22c ; call rax
0x000000000044d469 : test eax, eax ; je 0x44d473 ; call rax
0x000000000044d494 : test eax, eax ; je 0x44d49e ; call rax
0x000000000044e5d8 : test eax, eax ; je 0x44e59d ; pop rbx ; ret
0x0000000000454b15 : test eax, eax ; je 0x454add ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045522c : test eax, eax ; je 0x455236 ; call rax
0x00000000004552b7 : test eax, eax ; je 0x4552c1 ; call rax
0x0000000000458f93 : test eax, eax ; je 0x458f9d ; call rax
0x0000000000458fb3 : test eax, eax ; je 0x458fbd ; call rax
0x00000000004590a6 : test eax, eax ; je 0x4590b0 ; call rax
0x000000000045913a : test eax, eax ; je 0x459144 ; call rax
0x000000000046a30c : test eax, eax ; je 0x46a31e ; mov rdi, qword ptr [rbx - 0x10] ; call rax
0x000000000046a351 : test eax, eax ; je 0x46a365 ; mov rdi, qword ptr [r12 + 0x10] ; call rax
0x000000000046b0b8 : test eax, eax ; je 0x46b0c2 ; call rax
0x000000000046b0d8 : test eax, eax ; je 0x46b0e2 ; call rax
0x000000000046bbdc : test eax, eax ; je 0x46bbe6 ; call rax
0x000000000046bc25 : test eax, eax ; je 0x46bc2f ; call rax
0x00000000004954d0 : test eax, eax ; je 0x4954e5 ; pop rbx ; ret
0x00000000004a7705 : test eax, eax ; je 0x4a76d0 ; pop rbx ; ret
0x00000000004a77b7 : test eax, eax ; je 0x4a77c1 ; call rax
0x0000000000407a4d : test eax, eax ; jne 0x407a45 ; ret
0x0000000000408bd5 : test eax, eax ; jne 0x408bc7 ; mov rax, r9 ; ret
0x0000000000408d9a : test eax, eax ; jne 0x408d7d ; ret
0x000000000040a608 : test eax, eax ; jne 0x40a5f8 ; mov eax, r9d ; pop rbx ; ret
0x0000000000415f03 : test eax, eax ; jne 0x415f15 ; ret
0x0000000000415f43 : test eax, eax ; jne 0x415f54 ; ret
0x0000000000417685 : test eax, eax ; jne 0x417674 ; ret
0x000000000041b3b3 : test eax, eax ; jne 0x41b3c5 ; pop rbx ; ret
0x000000000044ac26 : test eax, eax ; jne 0x44ac45 ; ret
0x0000000000419c79 : test eax, eax ; jns 0x419c29 ; ret
0x000000000041d6d6 : test eax, eax ; mov dword ptr [rdi + 0x14], eax ; je 0x41d6e7 ; ret
0x000000000041b3c9 : test eax, eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000049b125 : test eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x0000000000472c3b : test eax, esp ; retf 0xffff
0x00000000004b5be5 : test ebp, esi ; call qword ptr [rax]
0x0000000000419a77 : test ebx, ebx ; je 0x419ab9 ; mov rax, rbx ; pop rbx ; ret
0x00000000004465d2 : test ebx, ebx ; jne 0x446565 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044674a : test ebx, ebx ; jne 0x446715 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041251a : test ebx, ebx ; mov rdi, rbx ; jne 0x412518 ; pop rbx ; ret
0x000000000040de74 : test ecx, ecx ; je 0x40dea1 ; mov rdi, rbx ; call rcx
0x000000000040a6c1 : test ecx, ecx ; js 0x40a70d ; ret
0x0000000000409a71 : test edi, edi ; je 0x409a87 ; mov eax, dword ptr [rdi + 0x78] ; ret
0x0000000000409ac1 : test edi, edi ; je 0x409ad7 ; mov rax, qword ptr [rdi] ; ret
0x0000000000415d9c : test edi, edi ; je 0x415dbb ; call 0x412016
0x000000000046a01c : test edi, edi ; je 0x46a035 ; call rax
0x000000000040a0e7 : test edi, edi ; jne 0x409fe9 ; ret
0x000000000041a73a : test edi, edi ; jne 0x41a702 ; jmp 0x41a708
0x0000000000421063 : test edi, edi ; jne 0x421047 ; pop rbx ; ret
0x000000000042aac7 : test edi, edi ; jne 0x42aa8c ; pop rbx ; ret
0x000000000046c221 : test edi, edi ; jne 0x46c22c ; ret
0x0000000000411768 : test edx, edx ; je 0x41178c ; call rdx
0x0000000000415b72 : test edx, edx ; je 0x415b8b ; mov qword ptr [rsp + 8], rax ; call rdx
0x000000000042964c : test edx, edx ; je 0x42965d ; pop rbx ; ret
0x000000000044d85f : test edx, edx ; je 0x44d87c ; pop rbx ; ret
0x000000000040ef1c : test edx, edx ; jg 0x40eeed ; pop rbx ; ret
0x0000000000408c06 : test edx, edx ; jne 0x408c14 ; ret
0x0000000000408c46 : test edx, edx ; jne 0x408c54 ; ret
0x000000000040cd56 : test edx, edx ; jne 0x40cd64 ; ret
0x000000000040cd96 : test edx, edx ; jne 0x40cda4 ; ret
0x000000000040a33c : test edx, edx ; js 0x40a319 ; ret
0x000000000041533b : test esi, esi ; jne 0x41534d ; ret
0x0000000000415043 : test esi, esi ; js 0x415077 ; mov rdi, r12 ; call rcx
0x0000000000407da3 : test esi, esi ; setne al ; neg eax ; ret
0x000000000041eb58 : test esp, esp ; jne 0x41eb19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ba53 : test esp, esp ; jne 0x47b7dd ; jmp 0x47ba29
0x000000000041a572 : test rax, rax ; cmove rax, rdx ; ret
0x0000000000404855 : test rax, rax ; je 0x404854 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004123e4 : test rax, rax ; je 0x4123f8 ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000412674 : test rax, rax ; je 0x412680 ; call rax
0x000000000041300a : test rax, rax ; je 0x41302b ; mov byte ptr [rsp + 8], dl ; call rax
0x000000000041304d : test rax, rax ; je 0x413059 ; call rax
0x00000000004134d8 : test rax, rax ; je 0x4134ec ; mov rdi, qword ptr [rdi + 0x18] ; call rax
0x0000000000413736 : test rax, rax ; je 0x41374a ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000414414 : test rax, rax ; je 0x414425 ; ret
0x00000000004148b1 : test rax, rax ; je 0x4148bd ; call rax
0x00000000004148cd : test rax, rax ; je 0x4148d9 ; call rax
0x00000000004158a4 : test rax, rax ; je 0x41592a ; call rax
0x0000000000415b54 : test rax, rax ; je 0x415b60 ; call rax
0x0000000000415bcc : test rax, rax ; je 0x415bd8 ; call rax
0x0000000000415c17 : test rax, rax ; je 0x415c23 ; call rax
0x00000000004163ef : test rax, rax ; je 0x416405 ; call rax
0x000000000041b986 : test rax, rax ; je 0x41b99a ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000429a13 : test rax, rax ; je 0x429a1f ; call rax
0x0000000000429a47 : test rax, rax ; je 0x429a53 ; call rax
0x000000000042fbcd : test rax, rax ; je 0x42fbe9 ; mov eax, dword ptr [rbx + 0xc] ; pop rbx ; ret
0x00000000004362fa : test rax, rax ; je 0x436306 ; call rax
0x000000000043634f : test rax, rax ; je 0x43635f ; call rax
0x000000000043f360 : test rax, rax ; je 0x43f379 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b33a : test rax, rax ; je 0x44b354 ; call rax
0x000000000044c67c : test rax, rax ; je 0x44c407 ; call rax
0x000000000044c622 : test rax, rax ; je 0x44c62e ; call rax
0x000000000044d20b : test rax, rax ; je 0x44d217 ; call rax
0x000000000044d221 : test rax, rax ; je 0x44d22d ; call rax
0x000000000044d468 : test rax, rax ; je 0x44d474 ; call rax
0x000000000044d493 : test rax, rax ; je 0x44d49f ; call rax
0x000000000045522b : test rax, rax ; je 0x455237 ; call rax
0x00000000004552b6 : test rax, rax ; je 0x4552c2 ; call rax
0x0000000000458f92 : test rax, rax ; je 0x458f9e ; call rax
0x0000000000458fb2 : test rax, rax ; je 0x458fbe ; call rax
0x00000000004590a5 : test rax, rax ; je 0x4590b1 ; call rax
0x0000000000459139 : test rax, rax ; je 0x459145 ; call rax
0x000000000046a30b : test rax, rax ; je 0x46a31f ; mov rdi, qword ptr [rbx - 0x10] ; call rax
0x000000000046b0b7 : test rax, rax ; je 0x46b0c3 ; call rax
0x000000000046b0d7 : test rax, rax ; je 0x46b0e3 ; call rax
0x000000000046bbdb : test rax, rax ; je 0x46bbe7 ; call rax
0x000000000046bc24 : test rax, rax ; je 0x46bc30 ; call rax
0x00000000004a77b6 : test rax, rax ; je 0x4a77c2 ; call rax
0x0000000000407a4c : test rax, rax ; jne 0x407a46 ; ret
0x0000000000417684 : test rax, rax ; jne 0x417675 ; ret
0x0000000000419a76 : test rbx, rbx ; je 0x419aba ; mov rax, rbx ; pop rbx ; ret
0x00000000004465d1 : test rbx, rbx ; jne 0x446566 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446749 : test rbx, rbx ; jne 0x446716 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412519 : test rbx, rbx ; mov rdi, rbx ; jne 0x412519 ; pop rbx ; ret
0x000000000040de73 : test rcx, rcx ; je 0x40dea2 ; mov rdi, rbx ; call rcx
0x0000000000409a70 : test rdi, rdi ; je 0x409a88 ; mov eax, dword ptr [rdi + 0x78] ; ret
0x0000000000409ac0 : test rdi, rdi ; je 0x409ad8 ; mov rax, qword ptr [rdi] ; ret
0x0000000000415d9b : test rdi, rdi ; je 0x415dbc ; call 0x412017
0x0000000000415d9a : test rdi, rdi ; je 0x415dbd ; call 0x412018
0x000000000046a01b : test rdi, rdi ; je 0x46a036 ; call rax
0x000000000046a01a : test rdi, rdi ; je 0x46a037 ; call rax
0x000000000041a739 : test rdi, rdi ; jne 0x41a703 ; jmp 0x41a709
0x0000000000421062 : test rdi, rdi ; jne 0x421048 ; pop rbx ; ret
0x000000000042aac6 : test rdi, rdi ; jne 0x42aa8d ; pop rbx ; ret
0x000000000046c220 : test rdi, rdi ; jne 0x46c22d ; ret
0x0000000000411767 : test rdx, rdx ; je 0x41178d ; call rdx
0x0000000000407da2 : test rsi, rsi ; setne al ; neg eax ; ret
0x0000000000431fab : ucomisd xmm1, xmm0 ; seta al ; ret
0x0000000000431fac : ucomiss xmm1, xmm0 ; seta al ; ret
0x000000000044738b : ud0 ; add byte ptr [rbp - 0x77], cl ; retf 0x850f
0x000000000040f5f7 : ud2 ; xor eax, eax ; ret
0x00000000004238af : vcvtsi2sd xmm0, xmm6, dword ptr [rax] ; call rax
0x000000000045a63a : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; ret
0x000000000049df81 : vpmuludq ymm9, ymm1, ymmword ptr [rax - 0x7d] ; ret 0x4920
0x000000000044f359 : vpsubsb xmm3, xmm14, xmmword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000402abf : vunpcklpd ymm9, ymm0, ymmword ptr [rax - 0x77] ; ret 0xff48
0x0000000000437ea5 : wait ; cld ; inc dword ptr [rcx - 0x77] ; ret 0x4c8b
0x0000000000405730 : wait ; mov dword ptr [rdx], ecx ; call 0x401966
0x000000000048e57d : wait ; retf 0xffff
0x0000000000477523 : wait ; ror byte ptr [rdi], 0x45 ; ret 0x7ae9
0x00000000004308fc : wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000004ad335 : wait ; std ; jmp qword ptr [rdi + 0x11fffd9c]
0x00000000004146de : xadd edx, edi ; adc ch, byte ptr [rcx] ; ret 0x48d
0x0000000000444576 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004bdb0a : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; ret
0x00000000004a78ea : xchg byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000466d76 : xchg byte ptr [rcx - 4], ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b024a : xchg byte ptr [rdi - 0x61a5a678], al ; retf
0x00000000004c4875 : xchg byte ptr [rdx], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004be4d0 : xchg byte ptr [rip + 0x38d048c], al ; mov es, word ptr [rdx] ; ret
0x000000000042ada5 : xchg byte ptr [rsi - 0x77000000], ch ; retf 0xe281
0x00000000004b024b : xchg dword ptr [rax + 0x269e5a59], ecx ; retf
0x000000000040c781 : xchg dword ptr [rax + 1], ecx ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000408d98 : xchg dword ptr [rax], edx ; test eax, eax ; jne 0x408d7f ; ret
0x0000000000408d97 : xchg dword ptr [rax], r10d ; test eax, eax ; jne 0x408d80 ; ret
0x00000000004465d5 : xchg dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000445e5c : xchg dword ptr [rdi], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000004b9ae3 : xchg dword ptr [rdx], ecx ; ret
0x000000000042e90d : xchg dword ptr [rip - 0x76fffffb], ecx ; ret 0x348
0x000000000045454d : xchg dword ptr [rsi + 0x29000001], ebx ; ret
0x00000000004055a7 : xchg eax, ebp ; adc byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000410b38 : xchg eax, ebp ; ret
0x0000000000454562 : xchg eax, ebp ; ret 0x2044
0x0000000000466709 : xchg eax, ebp ; ret 0x3145
0x000000000040882a : xchg eax, ebp ; ret 0x394d
0x000000000048772f : xchg eax, ebp ; ret 0x5ae8
0x00000000004804d7 : xchg eax, ebp ; ret 0x72e8
0x000000000042e674 : xchg eax, ebp ; ret 0x8348
0x000000000041c1bd : xchg eax, ebp ; ret 0x8548
0x000000000047bf4a : xchg eax, ebp ; ret 0x854d
0x0000000000479c7d : xchg eax, ebp ; ret 0x894c
0x0000000000489e2b : xchg eax, ebp ; ret 0xafe8
0x000000000040a6fb : xchg eax, ebp ; ret 0xb60f
0x000000000047e819 : xchg eax, ebp ; ret 0xbc83
0x0000000000401fd9 : xchg eax, ebp ; ret 0xbd41
0x0000000000471350 : xchg eax, ebp ; ret 0xc283
0x0000000000481a7d : xchg eax, ebp ; ret 0xd009
0x000000000041c1d6 : xchg eax, ebp ; ret 0xd089
0x000000000040a923 : xchg eax, ebp ; ret 0xd184
0x000000000042db41 : xchg eax, ebp ; ret 0xdb31
0x00000000004667f8 : xchg eax, ebp ; ret 0xe8c1
0x000000000041b0a7 : xchg eax, ebp ; ret 0xed85
0x000000000047ce48 : xchg eax, ebp ; ret 0xf41
0x00000000004839a4 : xchg eax, ebp ; ret 0xf883
0x0000000000436637 : xchg eax, ebp ; retf
0x000000000041c4e6 : xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000040a810 : xchg eax, ebp ; rol dword ptr [rcx - 0x7d], 0xfa ; jg 0x40a82e ; xchg eax, esi ; ret 0xd184
0x000000000041b1a0 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000491307 : xchg eax, ebp ; sahf ; stc ; dec dword ptr [rcx - 0x77] ; ret 0xc031
0x0000000000407da6 : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000436452 : xchg eax, ebp ; sar dword ptr [rip - 0x5fd65969], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000428923 : xchg eax, ebp ; sar dword ptr [rsi + rbp], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000486661 : xchg eax, ebp ; shr bl, 0x8c ; xor eax, eax ; jmp 0x48663b
0x00000000004b7f5d : xchg eax, ebp ; sti ; call rax
0x00000000004466b7 : xchg eax, ebp ; sub edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a98ce : xchg eax, ebx ; cld ; ret
0x00000000004b5cb5 : xchg eax, ebx ; cmc ; call rax
0x0000000000416401 : xchg eax, ebx ; mov eax, 0x5b000000 ; ret
0x000000000042fd1c : xchg eax, ebx ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004589c8 : xchg eax, ebx ; ret 0x3944
0x000000000042e2d5 : xchg eax, ebx ; ret 0xc284
0x0000000000407bff : xchg eax, ebx ; xor byte ptr [rbx], al ; add byte ptr [rax], al ; add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004c7d99 : xchg eax, ecx ; clc ; call rsi
0x000000000043516b : xchg eax, ecx ; ret
0x0000000000483a4b : xchg eax, ecx ; retf
0x000000000049060b : xchg eax, ecx ; sbb ebx, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004b7add : xchg eax, ecx ; stc ; jmp qword ptr [rax]
0x000000000043b69f : xchg eax, ecx ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000041725a : xchg eax, ecx ; sub eax, dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004b5491 : xchg eax, edi ; add byte ptr [rax], al ; mov esp, cs ; hlt ; dec eax ; retf
0x0000000000407d35 : xchg eax, edi ; mov eax, 0xffffffff ; ret
0x000000000044d21d : xchg eax, edi ; push rbp ; sub byte ptr [rax], al ; test rax, rax ; je 0x44d231 ; call rax
0x0000000000430a65 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000430b4c : xchg eax, edi ; ror dword ptr [rdi], 0x92 ; ret 0xd138
0x00000000004b6739 : xchg eax, edx ; add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], dh ; jmp qword ptr [rax]
0x0000000000430a68 : xchg eax, edx ; ret 0xd029
0x0000000000430b4f : xchg eax, edx ; ret 0xd138
0x0000000000423df6 : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004b5479 : xchg eax, esi ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x00000000004b0d9c : xchg eax, esi ; add dword ptr [rbx + 3], edx ; sbb byte ptr [rbx], al ; retf
0x0000000000432701 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x00000000004c7e49 : xchg eax, esi ; clc ; call rbx
0x00000000004cbe29 : xchg eax, esi ; cld ; jmp qword ptr [rdi]
0x000000000040a817 : xchg eax, esi ; ret 0xd184
0x00000000004b95a4 : xchg eax, esp ; adc byte ptr [rax], al ; add byte ptr [rax], ch ; or ch, dh ; call rsi
0x00000000004598b8 : xchg eax, esp ; add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000045b382 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4120
0x000000000047d220 : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000452ac7 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000004bc9f1 : xchg eax, esp ; cmc ; call rsp
0x000000000046bc20 : xchg eax, esp ; imul esp, dword ptr [rsi], 0 ; test rax, rax ; je 0x46bc34 ; call rax
0x000000000045a584 : xchg eax, esp ; mov byte ptr [rax + 1], bh ; add byte ptr [rax], al ; je 0x45a599 ; ret
0x000000000041b93b : xchg eax, esp ; rcr byte ptr [rbp + 0x41], 0x5e ; ret
0x000000000043a5e1 : xchg eax, esp ; ret
0x00000000004c47a4 : xchg eax, esp ; ret 0
0x000000000049116b : xchg eax, esp ; ret 0x11e9
0x0000000000450871 : xchg eax, esp ; ret 0x26e9
0x00000000004242cd : xchg eax, esp ; ret 0x294c
0x0000000000463aa0 : xchg eax, esp ; ret 0x3145
0x000000000043f0ba : xchg eax, esp ; ret 0x35e9
0x000000000044a109 : xchg eax, esp ; ret 0x3d
0x000000000043ec74 : xchg eax, esp ; ret 0x4483
0x000000000048267e : xchg eax, esp ; ret 0x44c7
0x00000000004347c1 : xchg eax, esp ; ret 0x4fe9
0x000000000040f3ec : xchg eax, esp ; ret 0x6c3d
0x0000000000450292 : xchg eax, esp ; ret 0x8041
0x0000000000495863 : xchg eax, esp ; ret 0x8141
0x00000000004471fe : xchg eax, esp ; ret 0x8348
0x00000000004a04d7 : xchg eax, esp ; ret 0x8349
0x00000000004a1fc0 : xchg eax, esp ; ret 0x8545
0x000000000044f422 : xchg eax, esp ; ret 0x8548
0x0000000000413136 : xchg eax, esp ; ret 0x854d
0x000000000049703e : xchg eax, esp ; ret 0x8941
0x0000000000453ba4 : xchg eax, esp ; ret 0x8948
0x00000000004740c1 : xchg eax, esp ; ret 0x894c
0x000000000044adfa : xchg eax, esp ; ret 0x8b48
0x000000000046cc0c : xchg eax, esp ; ret 0x8d4b
0x000000000047aadf : xchg eax, esp ; ret 0x941
0x00000000004a41b9 : xchg eax, esp ; ret 0x9deb
0x000000000045c1a0 : xchg eax, esp ; ret 0xb60f
0x00000000004266c5 : xchg eax, esp ; ret 0xc209
0x00000000004a4975 : xchg eax, esp ; ret 0xc7eb
0x0000000000481624 : xchg eax, esp ; ret 0xc985
0x000000000049c250 : xchg eax, esp ; ret 0xca21
0x000000000044a11c : xchg eax, esp ; ret 0xd009
0x000000000041b3f2 : xchg eax, esp ; ret 0xd029
0x000000000049c334 : xchg eax, esp ; ret 0xd284
0x0000000000481d8e : xchg eax, esp ; ret 0xdb85
0x0000000000413128 : xchg eax, esp ; ret 0xf221
0x000000000040f86d : xchg eax, esp ; ret 0xf45
0x00000000004a0b18 : xchg eax, esp ; ret 0xf980
0x0000000000462078 : xchg eax, esp ; ret 0xfffb
0x000000000048e628 : xchg eax, esp ; retf 0xfffa
0x0000000000409b1b : xchg eax, esp ; rol bl, 0x66 ; nop ; ret
0x000000000040a35d : xchg eax, esp ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000049aac9 : xchg eax, esp ; rol dword ptr [rcx + rdi + 0x64], 0x24 ; or byte ptr [rdi], cl ; lahf ; ret 0xc383
0x000000000049b714 : xchg eax, esp ; rol dword ptr [rcx + rdi + 0x64], 0x24 ; or byte ptr [rdi], cl ; lahf ; ret 0xca21
0x000000000040ac08 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000040d59f : xchg eax, esp ; ror dword ptr [rcx + rdi - 0x1b], 0xf ; lahf ; ret 0xd184
0x0000000000416ff0 : xchg eax, esp ; sub eax, dword ptr [rax] ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000004750c3 : xchg ebp, edi ; dec dword ptr [rdi] ; mov esi, 0x63485855 ; retf 0xd089
0x0000000000464e9a : xchg ecx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; call qword ptr [rbx]
0x00000000004ad644 : xchg esi, esp ; std ; call qword ptr [rsi]
0x00000000004c7d98 : xchg rax, rcx ; clc ; call rsi
0x00000000004b5478 : xchg rax, rsi ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x000000000040da57 : xlatb ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000045a14d : xlatb ; call 0x4163b3
0x00000000004377f9 : xlatb ; call r8
0x0000000000404cf3 : xlatb ; call rax
0x0000000000408569 : xlatb ; jmp 0x408539
0x000000000047419d : xlatb ; jmp 0x4703e3
0x00000000004950c5 : xlatb ; mov rsi, r14 ; mov rdi, r13 ; call 0x401b39
0x0000000000416452 : xlatb ; pop rbx ; ret
0x00000000004118c0 : xlatb ; rep stosq qword ptr [rdi], rax ; ret
0x000000000042004f : xor ah, byte ptr [rsi - 0x77] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000048f5be : xor al, 0 ; add byte ptr [rax], al ; call 0x42b7d6
0x00000000004c4878 : xor al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004b5639 : xor al, 0 ; add byte ptr [rdi + rbx - 0xb], bh ; call qword ptr [rax]
0x00000000004b5629 : xor al, 0 ; add byte ptr [rsi + 0x1f], dl ; cmc ; call rax
0x000000000048d7ea : xor al, 0x24 ; add rsp, 0x20 ; jmp 0x48a200
0x000000000048d797 : xor al, 0x24 ; jmp 0x48a1fc
0x000000000048f698 : xor al, 0x24 ; jmp 0x48b8a5
0x00000000004979f6 : xor al, 0x24 ; mov rdi, qword ptr [rsp + 0x50] ; call 0x4244c9
0x00000000004bb644 : xor al, 0x31 ; add byte ptr [rax], al ; fsubr dword ptr [rax - 0xb] ; jmp rsp
0x000000000041d80b : xor al, 0x48 ; mov edi, dword ptr [rcx + 0x40] ; call r8
0x000000000046d998 : xor al, 0x75 ; ret
0x000000000044ea1c : xor al, 0x83 ; ret
0x000000000044e962 : xor al, 0x89 ; ret
0x0000000000411ecb : xor al, 0xbf ; enter 0, 0 ; call rax
0x00000000004accf0 : xor al, 0xd3 ; stc ; call rsp
0x00000000004accd8 : xor al, 0xd3 ; stc ; inc esp ; sar cl, 1 ; call rsp
0x00000000004accec : xor al, 0xd3 ; stc ; push qword ptr [rbx + rdx*8] ; stc ; call rsp
0x00000000004b8af8 : xor al, 0xeb ; hlt ; call qword ptr [rbx]
0x00000000004c7e44 : xor al, 0xf9 ; add byte ptr [rax], al ; cwde ; xchg eax, esi ; clc ; call rbx
0x00000000004898e5 : xor al, 0xfa ; dec dword ptr [rbx - 0x7cdbdb8c] ; ret
0x00000000004ad279 : xor al, 0xfc ; jmp rax
0x000000000043b1ea : xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b55b9 : xor al, byte ptr [rax] ; add byte ptr [rsi], dh ; adc al, 0xf5 ; call qword ptr [rax]
0x0000000000418fa5 : xor al, byte ptr [rax] ; jne 0x418fb5 ; ret
0x0000000000487965 : xor al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000045b7d8 : xor al, ch ; ret 0x89
0x000000000048029f : xor al, ch ; retf
0x000000000044cac0 : xor al, ch ; retf 0xfc61
0x000000000048e626 : xor al, ch ; xchg eax, esp ; retf 0xfffa
0x0000000000483d5f : xor bh, ah ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004c22a0 : xor bh, bh ; call qword ptr [rcx]
0x00000000004b84ad : xor bh, bh ; call rax
0x00000000004b8495 : xor bh, bh ; jmp qword ptr [rax]
0x0000000000407692 : xor bh, byte ptr [rax + 1] ; pop rbp ; ret
0x00000000004865f2 : xor bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000004865f3 : xor bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043a2e7 : xor bl, ch ; ret
0x00000000004a5a6c : xor byte ptr [r11 + r9*4 + 0x6c], r9b ; retf
0x000000000044d192 : xor byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x00000000004980d9 : xor byte ptr [r8 - 0x7d], r9b ; ret
0x000000000046d994 : xor byte ptr [r9], r15b ; xor al, 0x75 ; ret
0x000000000040e7ae : xor byte ptr [rax + 1], cl ; ret 0xb60f
0x000000000043c0d5 : xor byte ptr [rax - 0x75], cl ; adc byte ptr [rcx], dh ; shr al, 0x50 ; retf 0xffff
0x0000000000403e03 : xor byte ptr [rax - 0x75], cl ; sub bl, bpl ; retf 0x5bd
0x000000000044ac96 : xor byte ptr [rax - 0x77], cl ; jl 0x44acc6 ; or byte ptr [rcx], bh ; retf
0x000000000044ac95 : xor byte ptr [rax - 0x77], cl ; jl 0x44acc7 ; or byte ptr [rcx], bh ; retf
0x000000000042d8d6 : xor byte ptr [rax - 0x77], cl ; ret
0x0000000000469ce6 : xor byte ptr [rax - 0x77], cl ; ret 0x51e8
0x000000000047f660 : xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000422854 : xor byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000419e31 : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004828cd : xor byte ptr [rax - 0x77], cl ; retf
0x00000000004980da : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000042f2d2 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004b6e44 : xor byte ptr [rax - 9], al ; call rax
0x000000000047daa0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048f62c : xor byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xffca
0x0000000000445099 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax] ; call 0x401ad9
0x000000000044501d : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x401ad9
0x00000000004b5539 : xor byte ptr [rax], al ; add byte ptr [rsi], ah ; hlt ; hlt ; call qword ptr [rax]
0x0000000000446e8e : xor byte ptr [rax], al ; retf 0x3b9a
0x000000000040ea12 : xor byte ptr [rax], cl ; add byte ptr [rax], al ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000040f72d : xor byte ptr [rax], dl ; ret
0x000000000040f72c : xor byte ptr [rax], r10b ; ret
0x000000000044d193 : xor byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000040f041 : xor byte ptr [rbp + 0x75c589c0], al ; ret 0x634d
0x00000000004a0141 : xor byte ptr [rbp + rcx*4 + 0x44], cl ; sidt [rax - 0x77] ; retf 0xf8d1
0x00000000004cb077 : xor byte ptr [rbx + 0x1380306], al ; ret
0x0000000000415693 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041f59d : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004311b6 : xor byte ptr [rbx + 0x634804fa], al ; ret 0xf175
0x00000000004be457 : xor byte ptr [rbx + 0xa430206], al ; ret
0x00000000004bdf8f : xor byte ptr [rbx + 0xa620206], al ; ret
0x00000000004bba97 : xor byte ptr [rbx + 0xa750206], al ; ret
0x00000000004b9adf : xor byte ptr [rbx + 0xa870206], al ; ret
0x00000000004c4ef7 : xor byte ptr [rbx + 0xa8b0206], al ; ret
0x00000000004c1fd7 : xor byte ptr [rbx + 0xa900206], al ; ret
0x00000000004a5a6d : xor byte ptr [rbx + rcx*4 + 0x6c], cl ; retf
0x00000000004a702b : xor byte ptr [rbx - 0x79f0d007], al ; retf
0x0000000000407c00 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000048fbde : xor byte ptr [rcx + 0x39], al ; ret
0x000000000048fc35 : xor byte ptr [rcx - 0x75], cl ; jge 0x48fc41 ; call 0x42bf27
0x0000000000480736 : xor byte ptr [rcx - 0x76abdbbc], cl ; ret 0xc083
0x00000000004b5adc : xor byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x0000000000434fc3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000493857 : xor byte ptr [rcx], al ; retf 0x3948
0x000000000048693a : xor byte ptr [rcx], bh ; ret
0x000000000046d995 : xor byte ptr [rcx], bh ; xor al, 0x75 ; ret
0x00000000004b577c : xor byte ptr [rcx], dh ; cmc ; jmp rax
0x00000000004a543d : xor byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 9], 0x89 ; ret
0x00000000004ac82c : xor byte ptr [rdi + rsi*8 - 0x8214f01], dh ; jmp rax
0x00000000004c6e00 : xor byte ptr [rdi], bl ; clc ; jmp rcx
0x0000000000472df1 : xor byte ptr [rdi], cl ; mov bh, 0x56 ; or dh, dh ; ret 0xf01
0x00000000004b6524 : xor byte ptr [rdx - 0xa], al ; call rax
0x00000000004bc82f : xor byte ptr [rdx], al ; or byte ptr [rsi], 0x28 ; ret
0x00000000004c0890 : xor byte ptr [rsi + rsi*8], bh ; call qword ptr [rsi]
0x00000000004cd090 : xor byte ptr [rsi], 0xfd ; call qword ptr [rax]
0x00000000004b5688 : xor byte ptr [rsi], dh ; add byte ptr [rax], al ; retf
0x0000000000496a20 : xor cl, byte ptr [rcx - 0x73] ; je 0x496a51 ; or byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000048e561 : xor cl, ch ; retf 0xffff
0x000000000048e57b : xor cl, ch ; wait ; retf 0xffff
0x00000000004b61cc : xor dh, 0xf5 ; call qword ptr [rax]
0x000000000041a593 : xor dh, ah ; or byte ptr [rax], al ; ret
0x00000000004b00e0 : xor dh, byte ptr [rbx] ; ret
0x00000000004b7bd4 : xor dh, dh ; stc ; jmp qword ptr [rax]
0x00000000004b89d8 : xor dl, ch ; hlt ; call qword ptr [rbx]
0x000000000045a5cc : xor dword ptr [rax + 1], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000048979e : xor dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000048fe4c : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004b5579 : xor dword ptr [rax], eax ; add byte ptr [rbx], bl ; add esi, ebp ; call qword ptr [rax]
0x00000000004b5569 : xor dword ptr [rax], eax ; add byte ptr [rdi - 1], bh ; hlt ; call rax
0x000000000040df74 : xor dword ptr [rbx + 0x5d], ebx ; ret
0x000000000041772b : xor dword ptr [rcx - 0x7d], ecx ; ret 0x4108
0x00000000004b7c69 : xor dword ptr [rcx], eax ; add byte ptr [rax + 0x15], dh ; cli ; call rax
0x000000000047970a : xor dword ptr [rcx], ebp ; ret 0x8348
0x000000000041468a : xor dword ptr [rcx], edi ; retf 0x197f
0x000000000041466f : xor dword ptr [rcx], edi ; retf 0x347f
0x000000000040fd7e : xor dword ptr [rcx], edi ; retf 0x894d
0x00000000004178ef : xor eax, 0x18c48348 ; ret
0x00000000004b5669 : xor eax, 0x1fee0000 ; cmc ; call rax
0x00000000004b5679 : xor eax, 0x20a50000 ; cmc ; call qword ptr [rax]
0x000000000047608f : xor eax, 0x8941fffb ; shr ecx, 0x70 ; ret
0x0000000000438e1f : xor eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004bb865 : xor eax, dword ptr [rax] ; add al, cl ; insb byte ptr [rdi], dx ; cmc ; jmp rbx
0x000000000040e8fc : xor eax, dword ptr [rbx + 0x67402f8] ; xor eax, eax ; ret
0x00000000004180e5 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000423d81 : xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000425a06 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040c5e8 : xor eax, eax ; add rsp, 8 ; ret
0x000000000042fc10 : xor eax, eax ; and edx, 1 ; je 0x42fc30 ; ret
0x000000000043c0d9 : xor eax, eax ; call 0x438b34
0x0000000000495d09 : xor eax, eax ; call 0x441fa4
0x00000000004774e5 : xor eax, eax ; call 0x443754
0x000000000049a5b1 : xor eax, eax ; call 0x446fd4
0x000000000041b2c0 : xor eax, eax ; cmp byte ptr [rbx], 0 ; pop rbx ; sete al ; ret
0x000000000041b350 : xor eax, eax ; cmp byte ptr [rbx], 0 ; pop rbx ; setne al ; ret
0x000000000041b230 : xor eax, eax ; cmp byte ptr [rbx], 0 ; setne al ; pop rbx ; ret
0x0000000000419ea0 : xor eax, eax ; cmp dword ptr [rdi + 0xc], edx ; je 0x419eb7 ; ret
0x000000000040a378 : xor eax, eax ; cmp sil, 0x42 ; sete al ; ret
0x000000000040a317 : xor eax, eax ; cmp sil, 1 ; setbe al ; ret
0x0000000000432075 : xor eax, eax ; fucomip st(1) ; fstp st(0) ; seta al ; ret
0x000000000040dd89 : xor eax, eax ; jmp 0x40dd5b
0x000000000047ad03 : xor eax, eax ; jmp 0x47accd
0x0000000000486665 : xor eax, eax ; jmp 0x486637
0x000000000040eb9b : xor eax, eax ; mov dword ptr [rdi + 0x10], edx ; ret
0x000000000040e2e3 : xor eax, eax ; mov dword ptr [rdi + 0x34], esi ; ret
0x0000000000456b50 : xor eax, eax ; mov qword ptr [r8 + 0x10], r9 ; ret
0x00000000004253e2 : xor eax, eax ; mov qword ptr [rbx], rcx ; pop rbx ; ret
0x0000000000477454 : xor eax, eax ; mov rdi, r15 ; call 0x443756
0x0000000000477454 : xor eax, eax ; mov rdi, r15 ; call 0x443757
0x00000000004118bc : xor eax, eax ; mov rdi, rdx ; rep stosq qword ptr [rdi], rax ; ret
0x00000000004095ea : xor eax, eax ; mov word ptr [r10 + 0x14], ax ; ret
0x0000000000410636 : xor eax, eax ; mov word ptr [rdx + 8], r10w ; ret
0x000000000040ecaf : xor eax, eax ; movsd qword ptr [rsi + 0x40], xmm1 ; ret
0x000000000040dca6 : xor eax, eax ; movsd qword ptr [rsi + 0x40], xmm3 ; ret
0x000000000048e6fa : xor eax, eax ; not esi ; add esi, 0x4f ; call 0x43b179
0x000000000040b2d9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409fb1 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a3e8 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041a100 : xor eax, eax ; pop rbp ; pop r14 ; ret
0x00000000004101fc : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f9b6 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407a9f : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004038e3 : xor eax, eax ; pop rbx ; ret
0x0000000000401f69 : xor eax, eax ; pop rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407a18 : xor eax, eax ; ret
0x0000000000407d9a : xor eax, eax ; sub eax, edx ; ret
0x000000000040a6be : xor eax, eax ; test cx, cx ; js 0x40a710 ; ret
0x000000000040ef1a : xor eax, eax ; test edx, edx ; jg 0x40eeef ; pop rbx ; ret
0x000000000040a33a : xor eax, eax ; test edx, edx ; js 0x40a31b ; ret
0x0000000000431fa9 : xor eax, eax ; ucomisd xmm1, xmm0 ; seta al ; ret
0x00000000004b00e1 : xor eax, ebx ; cwde ; ret
0x000000000041b7ca : xor eax, edx ; pop rbx ; ret
0x000000000041d2a4 : xor ebp, dword ptr [rcx] ; ret
0x000000000046a6a6 : xor ebp, ebp ; call 0x417114
0x000000000041601e : xor ebp, ebp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b577d : xor ebp, esi ; jmp rax
0x0000000000438ec1 : xor ebx, ebx ; mov eax, r11d ; ret
0x000000000042b2de : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000041470e : xor ebx, esi ; ret
0x0000000000411872 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046b6b0 : xor ecx, dword ptr [rcx + rcx*4 + 0x4c] ; and al, 0x10 ; mov rdi, r12 ; call rax
0x00000000004b5474 : xor ecx, ebx ; hlt ; dec dword ptr [rax - 0x6a] ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf
0x0000000000444367 : xor ecx, ecx ; jmp 0x444339
0x00000000004185ac : xor edi, dword ptr [rdi + 0xca] ; call rax
0x0000000000417378 : xor edi, edi ; call 0x413654
0x00000000004a7016 : xor edi, edi ; call rax
0x00000000004ad025 : xor edi, esp ; call rax
0x00000000004b00ae : xor edx, dword ptr [rdx - 0x5051e86d] ; sbb al, bl ; ret
0x000000000040ccd7 : xor edx, edx ; mov rax, r10 ; pop rbx ; ret
0x000000000040ccdf : xor edx, edx ; mov rax, r10 ; ret
0x000000000041b7c8 : xor edx, edx ; xor eax, edx ; pop rbx ; ret
0x00000000004430e9 : xor esi, esi ; call 0x40f374
0x00000000004b6475 : xor esi, esi ; call qword ptr [rax]
0x0000000000440c5c : xor esi, esi ; mov rdx, rax ; call 0x42d707
0x00000000004ad021 : xor esp, edi ; jmp qword ptr [rax]
0x000000000046c0e1 : xor esp, esp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a6a4 : xor esp, esp ; xor ebp, ebp ; call 0x417116
0x0000000000414689 : xor qword ptr [r9], r15 ; retf 0x197f
0x000000000041466e : xor qword ptr [rcx], r15 ; retf 0x347f
0x000000000040ccd6 : xor r10d, r10d ; mov rax, r10 ; pop rbx ; ret
0x000000000040ccde : xor r10d, r10d ; mov rax, r10 ; ret
0x000000000043a2e6 : xor r11b, bpl ; ret
0x0000000000438ec0 : xor r11d, r11d ; mov eax, r11d ; ret
0x000000000046a6a3 : xor r12d, r12d ; xor ebp, ebp ; call 0x417117
0x0000000000487964 : xor r8b, byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000040cc88 : xor rax, rax ; ret

Unique gadgets found: 10554
